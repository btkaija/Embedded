

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Feb 23 21:33:20 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	param0,global,class=BANK0,space=1,delta=1
    64  0000                     _INTCONbits	set	4082
    65  0000                     _IPR1bits	set	3999
    66  0000                     _LATB	set	3978
    67  0000                     _OSCCON	set	4051
    68  0000                     _OSCCONbits	set	4051
    69  0000                     _OSCTUNEbits	set	3995
    70  0000                     _PIE1bits	set	3997
    71  0000                     _PIE3bits	set	4003
    72  0000                     _PIR1bits	set	3998
    73  0000                     _PORTBbits	set	3969
    74  0000                     _RCONbits	set	4048
    75  0000                     _RCREG1	set	4015
    76  0000                     _RCSTA1bits	set	4012
    77  0000                     _RCSTA2	set	3996
    78  0000                     _RCSTA2bits	set	3996
    79  0000                     _RCSTAbits	set	4012
    80  0000                     _SPBRG2	set	4011
    81  0000                     _SPBRGH2	set	3965
    82  0000                     _SSPADD	set	4040
    83  0000                     _SSPBUF	set	4041
    84  0000                     _SSPCON1	set	4038
    85  0000                     _SSPCON1bits	set	4038
    86  0000                     _SSPCON2	set	4037
    87  0000                     _SSPCON2bits	set	4037
    88  0000                     _SSPSTAT	set	4039
    89  0000                     _SSPSTATbits	set	4039
    90  0000                     _T0CON	set	4053
    91  0000                     _T0CONbits	set	4053
    92  0000                     _T1CON	set	4045
    93  0000                     _T1CONbits	set	4045
    94  0000                     _T1GCON	set	3994
    95  0000                     _T1GCONbits	set	3994
    96  0000                     _TMR0H	set	4055
    97  0000                     _TMR0L	set	4054
    98  0000                     _TMR1H	set	4047
    99  0000                     _TMR1L	set	4046
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISBbits	set	3987
   102  0000                     _TXREG2	set	4009
   103  0000                     _TXSTA2	set	4008
   104  0000                     _TXSTA2bits	set	4008
   105                           
   106                           	psect	nvCOMRAM
   107  000031                     __pnvCOMRAM:
   108                           	opt stack 0
   109  000031                     _uc_ptr:
   110                           	opt stack 0
   111  000031                     	ds	2
   112                           
   113                           	psect	nvBANK0
   114  0000CC                     __pnvBANK0:
   115                           	opt stack 0
   116  0000CC                     _ic_ptr:
   117                           	opt stack 0
   118  0000CC                     	ds	2
   119                           
   120                           ; #config settings
   121  0000                     
   122                           	psect	cinit
   123  001626                     __pcinit:
   124                           	opt stack 0
   125  001626                     start_initialization:
   126                           	opt stack 0
   127  001626                     __initialization:
   128                           	opt stack 0
   129                           
   130                           ; Clear objects allocated to BANK1 (162 bytes)
   131  001626  EE01  F000         	lfsr	0,__pbssBANK1
   132  00162A  0EA2               	movlw	162
   133  00162C                     clear_0:
   134  00162C  6AEE               	clrf	postinc0,c
   135  00162E  06E8               	decf	wreg,f,c
   136  001630  E1FD               	bnz	clear_0
   137                           
   138                           ; Clear objects allocated to BANK0 (54 bytes)
   139  001632  EE00  F060         	lfsr	0,__pbssBANK0
   140  001636  0E36               	movlw	54
   141  001638                     clear_1:
   142  001638  6AEE               	clrf	postinc0,c
   143  00163A  06E8               	decf	wreg,f,c
   144  00163C  E1FD               	bnz	clear_1
   145                           
   146                           ; Clear objects allocated to COMRAM (3 bytes)
   147  00163E  6A30               	clrf	(__pbssCOMRAM+2)& (0+255),c
   148  001640  6A2F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   149  001642  6A2E               	clrf	__pbssCOMRAM& (0+255),c
   150  001644                     end_of_initialization:
   151                           	opt stack 0
   152  001644                     __end_of__initialization:
   153                           	opt stack 0
   154  001644  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  001646  6EF8               	movwf	tblptru,c
   156  001648  0100               	movlb	0
   157  00164A  EF13  F003         	goto	_main	;jump to C main() function
   158                           tblptru	equ	0xFF8
   159                           postinc0	equ	0xFEE
   160                           wreg	equ	0xFE8
   161                           
   162                           	psect	bssCOMRAM
   163  00002E                     __pbssCOMRAM:
   164                           	opt stack 0
   165  00002E                     _MQ_Main_Willing_to_block:
   166                           	opt stack 0
   167  00002E                     	ds	1
   168  00002F                     _USART1_Status:
   169                           	opt stack 0
   170  00002F                     	ds	1
   171  000030                     _USART2_Status:
   172                           	opt stack 0
   173  000030                     	ds	1
   174                           tblptru	equ	0xFF8
   175                           postinc0	equ	0xFEE
   176                           wreg	equ	0xFE8
   177                           
   178                           	psect	bssBANK0
   179  000060                     __pbssBANK0:
   180                           	opt stack 0
   181  000060                     _ToMainLow_MQ:
   182                           	opt stack 0
   183  000060                     	ds	54
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	bssBANK1
   189  000100                     __pbssBANK1:
   190                           	opt stack 0
   191  000100                     _FromMainHigh_MQ:
   192                           	opt stack 0
   193  000100                     	ds	54
   194  000136                     _FromMainLow_MQ:
   195                           	opt stack 0
   196  000136                     	ds	54
   197  00016C                     _ToMainHigh_MQ:
   198                           	opt stack 0
   199  00016C                     	ds	54
   200                           tblptru	equ	0xFF8
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           
   204                           	psect	cstackBANK1
   205  0001A2                     __pcstackBANK1:
   206                           	opt stack 0
   207  0001A2                     ??_Open2USART:
   208  0001A2                     start_i2c_slave_reply@length:
   209                           	opt stack 0
   210  0001A2                     ___lwmod@counter:
   211                           	opt stack 0
   212  0001A2                     timer0_lthread@tptr:
   213                           	opt stack 0
   214  0001A2                     uart_lthread@uptr:
   215                           	opt stack 0
   216  0001A2                     memcpy@d1:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x0
   220  0001A2                     	ds	2
   221  0001A4                     timer0_lthread@msgtype:
   222                           	opt stack 0
   223  0001A4                     uart_lthread@msgtype:
   224                           	opt stack 0
   225  0001A4                     memcpy@s1:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x2
   229  0001A4                     	ds	2
   230  0001A6                     timer0_lthread@length:
   231                           	opt stack 0
   232  0001A6                     uart_lthread@length:
   233                           	opt stack 0
   234  0001A6                     memcpy@n:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  0001A6                     	ds	2
   239  0001A8                     send_msg@qptr:
   240                           	opt stack 0
   241  0001A8                     recv_msg@qptr:
   242                           	opt stack 0
   243  0001A8                     timer0_lthread@msgbuffer:
   244                           	opt stack 0
   245  0001A8                     uart_lthread@msgbuffer:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x6
   249  0001A8                     	ds	2
   250  0001AA                     send_msg@length:
   251                           	opt stack 0
   252  0001AA                     recv_msg@maxlength:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x8
   256  0001AA                     	ds	1
   257  0001AB                     send_msg@msgtype:
   258                           	opt stack 0
   259  0001AB                     recv_msg@msgtype:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x9
   263  0001AB                     	ds	1
   264  0001AC                     send_msg@data:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0xA
   268  0001AC                     	ds	1
   269  0001AD                     recv_msg@data:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0xB
   273  0001AD                     	ds	1
   274  0001AE                     ??_send_msg:
   275                           
   276                           ; 0 bytes @ 0xC
   277  0001AE                     	ds	1
   278  0001AF                     ??_recv_msg:
   279  0001AF                     send_msg@tlength:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0xD
   283  0001AF                     	ds	2
   284  0001B1                     send_msg@slot:
   285                           	opt stack 0
   286  0001B1                     recv_msg@slot:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0xF
   290  0001B1                     	ds	1
   291  0001B2                     send_msg@qmsg:
   292                           	opt stack 0
   293  0001B2                     recv_msg@tlength:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x10
   297  0001B2                     	ds	2
   298  0001B4                     FromMainHigh_sendmsg@msgtype:
   299                           	opt stack 0
   300  0001B4                     recv_msg@qmsg:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x12
   304  0001B4                     	ds	1
   305  0001B5                     FromMainHigh_sendmsg@data:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x13
   309  0001B5                     	ds	1
   310  0001B6                     ToMainLow_recvmsg@msgtype:
   311                           	opt stack 0
   312  0001B6                     ToMainHigh_recvmsg@msgtype:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x14
   316  0001B6                     	ds	1
   317  0001B7                     FromMainHigh_sendmsg@length:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x15
   321  0001B7                     	ds	1
   322  0001B8                     ToMainLow_recvmsg@data:
   323                           	opt stack 0
   324  0001B8                     ToMainHigh_recvmsg@data:
   325                           	opt stack 0
   326  0001B8                     timer1_lthread@tptr:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x16
   330  0001B8                     	ds	2
   331  0001BA                     ToMainLow_recvmsg@maxlength:
   332                           	opt stack 0
   333  0001BA                     ToMainHigh_recvmsg@maxlength:
   334                           	opt stack 0
   335  0001BA                     timer1_lthread@msgtype:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x18
   339  0001BA                     	ds	2
   340  0001BC                     timer1_lthread@length:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x1A
   344  0001BC                     	ds	2
   345  0001BE                     timer1_lthread@msgbuffer:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x1C
   349  0001BE                     	ds	2
   350  0001C0                     timer1_lthread@retval:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x1E
   354  0001C0                     	ds	1
   355  0001C1                     main@msgbuffer:
   356                           	opt stack 0
   357                           
   358                           ; 11 bytes @ 0x1F
   359  0001C1                     	ds	11
   360  0001CC                     main@uthread_data:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x2A
   364  0001CC                     	ds	2
   365  0001CE                     main@t0thread_data:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x2C
   369  0001CE                     	ds	2
   370  0001D0                     main@last_reg_recvd:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x2E
   374  0001D0                     	ds	1
   375  0001D1                     main@uc:
   376                           	opt stack 0
   377                           
   378                           ; 5 bytes @ 0x2F
   379  0001D1                     	ds	5
   380  0001D6                     main@t1thread_data:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x34
   384  0001D6                     	ds	2
   385  0001D8                     main@msgtype:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x36
   389  0001D8                     	ds	1
   390  0001D9                     main@length:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x37
   394  0001D9                     	ds	1
   395  0001DA                     main@ic:
   396                           	opt stack 0
   397                           
   398                           ; 28 bytes @ 0x38
   399  0001DA                     	ds	28
   400                           tblptru	equ	0xFF8
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           
   404                           	psect	cstackBANK0
   405  000096                     __pcstackBANK0:
   406                           	opt stack 0
   407  000096                     ?_in_high_int:
   408                           	opt stack 0
   409  000096                     handle_start@data_read:
   410                           	opt stack 0
   411  000096                     check_msg@qptr:
   412                           	opt stack 0
   413  000096                     WriteTimer0@timer0:
   414                           	opt stack 0
   415  000096                     i2memcpy@d1:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x0
   419  000096                     	ds	2
   420  000098                     ??_check_msg:
   421  000098                     ?_in_low_int:
   422                           	opt stack 0
   423  000098                     WriteTimer0@timer:
   424                           	opt stack 0
   425  000098                     i2memcpy@s1:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x2
   429  000098                     	ds	2
   430  00009A                     i2memcpy@n:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x4
   434  00009A                     	ds	2
   435  00009C                     i2memcpy@d:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x6
   439  00009C                     	ds	2
   440  00009E                     i2memcpy@s:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x8
   444  00009E                     	ds	2
   445  0000A0                     i2send_msg@qptr:
   446                           	opt stack 0
   447  0000A0                     i2recv_msg@qptr:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0xA
   451  0000A0                     	ds	2
   452  0000A2                     i2send_msg@length:
   453                           	opt stack 0
   454  0000A2                     i2recv_msg@maxlength:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xC
   458  0000A2                     	ds	1
   459  0000A3                     i2send_msg@msgtype:
   460                           	opt stack 0
   461  0000A3                     i2recv_msg@msgtype:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0xD
   465  0000A3                     	ds	1
   466  0000A4                     i2send_msg@data:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0xE
   470  0000A4                     	ds	1
   471  0000A5                     i2recv_msg@data:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0xF
   475  0000A5                     	ds	1
   476  0000A6                     ??i2_send_msg:
   477                           
   478                           ; 0 bytes @ 0x10
   479  0000A6                     	ds	1
   480  0000A7                     ??i2_recv_msg:
   481  0000A7                     i2send_msg@tlength:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x11
   485  0000A7                     	ds	2
   486  0000A9                     i2send_msg@slot:
   487                           	opt stack 0
   488  0000A9                     i2recv_msg@slot:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x13
   492  0000A9                     	ds	1
   493  0000AA                     i2send_msg@qmsg:
   494                           	opt stack 0
   495  0000AA                     i2recv_msg@tlength:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x14
   499  0000AA                     	ds	2
   500  0000AC                     ToMainHigh_sendmsg@msgtype:
   501                           	opt stack 0
   502  0000AC                     i2recv_msg@qmsg:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x16
   506  0000AC                     	ds	1
   507  0000AD                     ToMainHigh_sendmsg@data:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x17
   511  0000AD                     	ds	1
   512  0000AE                     FromMainHigh_recvmsg@msgtype:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x18
   516  0000AE                     	ds	1
   517  0000AF                     ToMainHigh_sendmsg@length:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x19
   521  0000AF                     	ds	1
   522  0000B0                     ??_i2c_int_handler:
   523  0000B0                     FromMainHigh_recvmsg@data:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x1A
   527  0000B0                     	ds	1
   528  0000B1                     i2c_int_handler@error_buf:
   529                           	opt stack 0
   530                           
   531                           ; 3 bytes @ 0x1B
   532  0000B1                     	ds	1
   533  0000B2                     FromMainHigh_recvmsg@maxlength:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x1C
   537  0000B2                     	ds	1
   538  0000B3                     timer0_int_handler@length:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x1D
   542  0000B3                     	ds	1
   543  0000B4                     i2c_int_handler@data_written:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x1E
   547  0000B4                     	ds	1
   548  0000B5                     i2c_int_handler@overrun_error:
   549                           	opt stack 0
   550  0000B5                     timer0_int_handler@msgtype:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x1F
   554  0000B5                     	ds	1
   555  0000B6                     i2c_int_handler@i2c_data:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x20
   559  0000B6                     	ds	1
   560  0000B7                     i2c_int_handler@msg_to_send:
   561                           	opt stack 0
   562  0000B7                     timer0_int_handler@val:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x21
   566  0000B7                     	ds	1
   567  0000B8                     i2c_int_handler@msg_ready:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x22
   571  0000B8                     	ds	1
   572  0000B9                     i2c_int_handler@data_read:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x23
   576  0000B9                     	ds	1
   577  0000BA                     ??_InterruptHandlerHigh:
   578                           
   579                           ; 0 bytes @ 0x24
   580  0000BA                     	ds	14
   581  0000C8                     ?___lwmod:
   582                           	opt stack 0
   583  0000C8                     i2c_configure_slave@addr:
   584                           	opt stack 0
   585  0000C8                     OpenTimer0@config:
   586                           	opt stack 0
   587  0000C8                     OpenTimer1@config1:
   588                           	opt stack 0
   589  0000C8                     Write2USART@data:
   590                           	opt stack 0
   591  0000C8                     init_queue@qptr:
   592                           	opt stack 0
   593  0000C8                     start_i2c_slave_reply@msg:
   594                           	opt stack 0
   595  0000C8                     init_i2c@ic:
   596                           	opt stack 0
   597  0000C8                     init_uart_recv@uc:
   598                           	opt stack 0
   599  0000C8                     timer0_lthread@msgval:
   600                           	opt stack 0
   601  0000C8                     init_timer1_lthread@tptr:
   602                           	opt stack 0
   603  0000C8                     Open2USART@spbrg:
   604                           	opt stack 0
   605  0000C8                     ___lwmod@dividend:
   606                           	opt stack 0
   607  0000C8                     memcpy@d:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x32
   611  0000C8                     	ds	1
   612  0000C9                     ??_OpenTimer1:
   613                           
   614                           ; 0 bytes @ 0x33
   615  0000C9                     	ds	1
   616  0000CA                     ??_start_i2c_slave_reply:
   617  0000CA                     init_queue@i:
   618                           	opt stack 0
   619  0000CA                     OpenTimer1@config:
   620                           	opt stack 0
   621  0000CA                     Open2USART@config:
   622                           	opt stack 0
   623  0000CA                     ___lwmod@divisor:
   624                           	opt stack 0
   625  0000CA                     memcpy@s:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x34
   629  0000CA                     	ds	2
   630                           tblptru	equ	0xFF8
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           
   634                           	psect	cstackCOMRAM
   635  000001                     __pcstackCOMRAM:
   636                           	opt stack 0
   637  000001                     ?_ReadTimer1:
   638                           	opt stack 0
   639  000001                     Read1USART@data:
   640                           	opt stack 0
   641  000001                     WriteTimer1@timer1:
   642                           	opt stack 0
   643  000001                     i1memcpy@d1:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x0
   647  000001                     	ds	2
   648  000003                     ReadTimer1@timer:
   649                           	opt stack 0
   650  000003                     WriteTimer1@timer:
   651                           	opt stack 0
   652  000003                     i1memcpy@s1:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x2
   656  000003                     	ds	2
   657  000005                     i1memcpy@n:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x4
   661  000005                     	ds	2
   662  000007                     i1memcpy@d:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x6
   666  000007                     	ds	2
   667  000009                     i1memcpy@s:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x8
   671  000009                     	ds	2
   672  00000B                     i1send_msg@qptr:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0xA
   676  00000B                     	ds	2
   677  00000D                     i1send_msg@length:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0xC
   681  00000D                     	ds	1
   682  00000E                     i1send_msg@msgtype:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0xD
   686  00000E                     	ds	1
   687  00000F                     i1send_msg@data:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0xE
   691  00000F                     	ds	2
   692  000011                     ??i1_send_msg:
   693                           
   694                           ; 0 bytes @ 0x10
   695  000011                     	ds	1
   696  000012                     i1send_msg@tlength:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x11
   700  000012                     	ds	2
   701  000014                     i1send_msg@slot:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x13
   705  000014                     	ds	1
   706  000015                     i1send_msg@qmsg:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x14
   710  000015                     	ds	2
   711  000017                     ToMainLow_sendmsg@msgtype:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x16
   715  000017                     	ds	1
   716  000018                     ToMainLow_sendmsg@data:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x17
   720  000018                     	ds	2
   721  00001A                     ToMainLow_sendmsg@length:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x19
   725  00001A                     	ds	1
   726  00001B                     ??_uart_recv_int_handler:
   727  00001B                     timer1_int_handler@result:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x1A
   731  00001B                     	ds	2
   732  00001D                     ??_InterruptHandlerLow:
   733                           
   734                           ; 0 bytes @ 0x1C
   735  00001D                     	ds	17
   736  00002E                     tblptru	equ	0xFF8
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           
   740                           ; 0 bytes @ 0x2D
   741 ;;
   742 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   743 ;;
   744 ;; *************** function _main *****************
   745 ;; Defined at:
   746 ;;		line 186 in file "../src/main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  ic             28   56[BANK1 ] struct __i2c_comm
   751 ;;  msgbuffer      11   31[BANK1 ] unsigned char [11]
   752 ;;  uc              5   47[BANK1 ] struct __uart_comm
   753 ;;  t1thread_dat    2   52[BANK1 ] struct __timer1_thread_s
   754 ;;  t0thread_dat    2   44[BANK1 ] struct __timer0_thread_s
   755 ;;  uthread_data    2   42[BANK1 ] struct __uart_thread_str
   756 ;;  length          1   55[BANK1 ] char 
   757 ;;  msgtype         1   54[BANK1 ] unsigned char 
   758 ;;  last_reg_rec    1   46[BANK1 ] unsigned char 
   759 ;;  i               1    0        unsigned char 
   760 ;;  c               1    0        unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;		None               void
   763 ;; Registers used:
   764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   771 ;;      Locals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;      Totals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   774 ;;Total ram usage:       53 bytes
   775 ;; Hardware stack levels required when called:   14
   776 ;; This function calls:
   777 ;;		_Open2USART
   778 ;;		_OpenTimer0
   779 ;;		_OpenTimer1
   780 ;;		_ToMainHigh_recvmsg
   781 ;;		_ToMainLow_recvmsg
   782 ;;		_Write2USART
   783 ;;		_enable_interrupts
   784 ;;		_i2c_configure_slave
   785 ;;		_init_i2c
   786 ;;		_init_queues
   787 ;;		_init_timer1_lthread
   788 ;;		_init_uart_recv
   789 ;;		_start_i2c_slave_reply
   790 ;;		_timer0_lthread
   791 ;;		_timer1_lthread
   792 ;;		_uart_lthread
   793 ;; This function is called by:
   794 ;;		Startup code after reset
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text0
   799  000626                     __ptext0:
   800                           	opt stack 0
   801  000626                     _main:
   802                           	opt stack 17
   803                           
   804                           ;main.c: 187: char c;
   805                           ;main.c: 188: signed char length;
   806                           ;main.c: 189: unsigned char msgtype;
   807                           ;main.c: 190: unsigned char last_reg_recvd;
   808                           ;main.c: 191: uart_comm uc;
   809                           ;main.c: 192: i2c_comm ic;
   810                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   811                           ;main.c: 194: unsigned char i;
   812                           ;main.c: 195: uart_thread_struct uthread_data;
   813                           ;main.c: 196: timer1_thread_struct t1thread_data;
   814                           ;main.c: 197: timer0_thread_struct t0thread_data;
   815                           ;main.c: 213: OSCCON = 0xE0;
   816                           
   817                           ;incstack = 0
   818  000626  0EE0               	movlw	224
   819  000628  6ED3               	movwf	4051,c	;volatile
   820                           
   821                           ;main.c: 214: OSCTUNEbits.PLLEN = 1;
   822  00062A  8C9B               	bsf	3995,6,c	;volatile
   823                           
   824                           ;main.c: 224: init_uart_recv(&uc);
   825  00062C  0101               	movlb	1	; () banked
   826  00062E  0E01               	movlw	high main@uc
   827  000630  0100               	movlb	0	; () banked
   828  000632  6FC9               	movwf	(init_uart_recv@uc+1)& (0+255),b
   829  000634  0101               	movlb	1	; () banked
   830  000636  0ED1               	movlw	low main@uc
   831  000638  0100               	movlb	0	; () banked
   832  00063A  6FC8               	movwf	init_uart_recv@uc& (0+255),b
   833  00063C  EC60  F00B         	call	_init_uart_recv	;wreg free
   834                           
   835                           ;main.c: 227: init_i2c(&ic);
   836  000640  0101               	movlb	1	; () banked
   837  000642  0E01               	movlw	high main@ic
   838  000644  0100               	movlb	0	; () banked
   839  000646  6FC9               	movwf	(init_i2c@ic+1)& (0+255),b
   840  000648  0101               	movlb	1	; () banked
   841  00064A  0EDA               	movlw	low main@ic
   842  00064C  0100               	movlb	0	; () banked
   843  00064E  6FC8               	movwf	init_i2c@ic& (0+255),b
   844  000650  EC7D  F008         	call	_init_i2c	;wreg free
   845                           
   846                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   847  000654  0101               	movlb	1	; () banked
   848  000656  0E01               	movlw	high main@t1thread_data
   849  000658  0100               	movlb	0	; () banked
   850  00065A  6FC9               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   851  00065C  0101               	movlb	1	; () banked
   852  00065E  0ED6               	movlw	low main@t1thread_data
   853  000660  0100               	movlb	0	; () banked
   854  000662  6FC8               	movwf	init_timer1_lthread@tptr& (0+255),b
   855  000664  EC91  F00B         	call	_init_timer1_lthread	;wreg free
   856                           
   857                           ;main.c: 233: init_queues();
   858  000668  EC9C  F009         	call	_init_queues	;wreg free
   859                           
   860                           ;main.c: 237: TRISB = 0x0;
   861  00066C  0E00               	movlw	0
   862  00066E  6E93               	movwf	3987,c	;volatile
   863                           
   864                           ;main.c: 238: LATB = 0x0;
   865  000670  0E00               	movlw	0
   866  000672  6E8A               	movwf	3978,c	;volatile
   867                           
   868                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   869  000674  0E96               	movlw	150
   870  000676  EC3B  F00B         	call	_OpenTimer0
   871                           
   872                           ;main.c: 258: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
   873  00067A  0E00               	movlw	0
   874  00067C  0100               	movlb	0	; () banked
   875  00067E  6FC8               	movwf	OpenTimer1@config1& (0+255),b
   876  000680  0E9B               	movlw	155
   877  000682  EC2E  F00A         	call	_OpenTimer1
   878                           
   879                           ;main.c: 267: IPR1bits.TMR1IP = 0;
   880  000686  909F               	bcf	3999,0,c	;volatile
   881                           
   882                           ;main.c: 269: IPR1bits.RCIP = 0;
   883  000688  9A9F               	bcf	3999,5,c	;volatile
   884                           
   885                           ;main.c: 271: IPR1bits.SSPIP = 1;
   886  00068A  869F               	bsf	3999,3,c	;volatile
   887                           
   888                           ;main.c: 280: i2c_configure_slave(0x9E);
   889  00068C  0E9E               	movlw	158
   890  00068E  EC27  F00B         	call	_i2c_configure_slave
   891                           
   892                           ;main.c: 295: PIE1bits.SSPIE = 1;
   893  000692  869D               	bsf	3997,3,c	;volatile
   894                           
   895                           ;main.c: 303: Open2USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   896                           ;main.c: 304: 0b11111111 & 0b11111111, 51);
   897  000694  0E00               	movlw	0
   898  000696  0100               	movlb	0	; () banked
   899  000698  6FC9               	movwf	(Open2USART@spbrg+1)& (0+255),b
   900  00069A  0E33               	movlw	51
   901  00069C  0100               	movlb	0	; () banked
   902  00069E  6FC8               	movwf	Open2USART@spbrg& (0+255),b
   903  0006A0  0E7C               	movlw	124
   904  0006A2  EC0B  F008         	call	_Open2USART
   905                           
   906                           ;main.c: 316: enable_interrupts();
   907  0006A6  ECBD  F00B         	call	_enable_interrupts	;wreg free
   908  0006AA                     l3254:
   909                           
   910                           ;main.c: 345: Write2USART('~');
   911  0006AA  0E7E               	movlw	126
   912  0006AC  EC7E  F00B         	call	_Write2USART
   913                           
   914                           ;main.c: 346: _delay(1000);
   915  0006B0  0EFA               	movlw	250
   916  0006B2                     u2497:
   917  0006B2  F000               	nop	
   918  0006B4  2EE8               	decfsz	wreg,f,c
   919  0006B6  D7FD               	goto	u2497
   920                           
   921                           ;main.c: 356: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   922  0006B8  0101               	movlb	1	; () banked
   923  0006BA  0E01               	movlw	high main@msgtype
   924  0006BC  0101               	movlb	1	; () banked
   925  0006BE  6FB7               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   926  0006C0  0101               	movlb	1	; () banked
   927  0006C2  0ED8               	movlw	low main@msgtype
   928  0006C4  0101               	movlb	1	; () banked
   929  0006C6  6FB6               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   930  0006C8  0101               	movlb	1	; () banked
   931  0006CA  0E01               	movlw	high main@msgbuffer
   932  0006CC  0101               	movlb	1	; () banked
   933  0006CE  6FB9               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   934  0006D0  0101               	movlb	1	; () banked
   935  0006D2  0EC1               	movlw	low main@msgbuffer
   936  0006D4  0101               	movlb	1	; () banked
   937  0006D6  6FB8               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   938  0006D8  0E0A               	movlw	10
   939  0006DA  EC67  F00A         	call	_ToMainHigh_recvmsg
   940  0006DE  0101               	movlb	1	; () banked
   941  0006E0  6FD9               	movwf	main@length& (0+255),b
   942                           
   943                           ; BSR set to: 1
   944                           ;main.c: 357: if (length < 0) {
   945  0006E2  0101               	movlb	1	; () banked
   946  0006E4  BFD9               	btfsc	main@length& (0+255),7,b
   947  0006E6  D061               	goto	l3282
   948  0006E8  D052               	goto	l3280
   949  0006EA                     l3264:
   950                           
   951                           ; BSR set to: 1
   952                           ;main.c: 365: {
   953                           ;main.c: 366: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
   954  0006EA  0101               	movlb	1	; () banked
   955  0006EC  0E01               	movlw	high main@t0thread_data
   956  0006EE  0101               	movlb	1	; () banked
   957  0006F0  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
   958  0006F2  0101               	movlb	1	; () banked
   959  0006F4  0ECE               	movlw	low main@t0thread_data
   960  0006F6  0101               	movlb	1	; () banked
   961  0006F8  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
   962  0006FA  0101               	movlb	1	; () banked
   963  0006FC  C1D8  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
   964  000700  0101               	movlb	1	; () banked
   965  000702  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
   966  000704  0101               	movlb	1	; () banked
   967  000706  51D9               	movf	main@length& (0+255),w,b
   968  000708  0101               	movlb	1	; () banked
   969  00070A  6FA6               	movwf	timer0_lthread@length& (0+255),b
   970  00070C  0101               	movlb	1	; () banked
   971  00070E  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
   972  000710  0101               	movlb	1	; () banked
   973  000712  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
   974  000714  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
   975  000716  0101               	movlb	1	; () banked
   976  000718  0E01               	movlw	high main@msgbuffer
   977  00071A  0101               	movlb	1	; () banked
   978  00071C  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
   979  00071E  0101               	movlb	1	; () banked
   980  000720  0EC1               	movlw	low main@msgbuffer
   981  000722  0101               	movlb	1	; () banked
   982  000724  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
   983  000726  EC88  F00B         	call	_timer0_lthread	;wreg free
   984                           
   985                           ;main.c: 367: break;
   986  00072A  D03F               	goto	l3282
   987  00072C                     l104:
   988                           
   989                           ;main.c: 370: case 41:
   990                           ;main.c: 371: {
   991                           ;main.c: 374: last_reg_recvd = msgbuffer[0];
   992  00072C  C1C1  F1D0         	movff	main@msgbuffer,main@last_reg_recvd
   993                           
   994                           ;main.c: 375: break;
   995  000730  D03C               	goto	l3282
   996  000732                     l3266:
   997                           
   998                           ;main.c: 388: {
   999                           ;main.c: 389: length = 2;
  1000  000732  0E02               	movlw	2
  1001  000734  0101               	movlb	1	; () banked
  1002  000736  6FD9               	movwf	main@length& (0+255),b
  1003                           
  1004                           ;main.c: 390: msgbuffer[0] = 0x55;
  1005  000738  0E55               	movlw	85
  1006  00073A  0101               	movlb	1	; () banked
  1007  00073C  6FC1               	movwf	main@msgbuffer& (0+255),b
  1008                           
  1009                           ;main.c: 391: msgbuffer[1] = 0xAA;
  1010  00073E  0EAA               	movlw	170
  1011  000740  0101               	movlb	1	; () banked
  1012  000742  6FC2               	movwf	(main@msgbuffer+1)& (0+255),b
  1013                           
  1014                           ;main.c: 392: break;
  1015  000744  D017               	goto	l3276
  1016  000746                     l3268:
  1017                           
  1018                           ; BSR set to: 1
  1019                           ;main.c: 395: {
  1020                           ;main.c: 396: length = 1;
  1021  000746  0E01               	movlw	1
  1022  000748  0101               	movlb	1	; () banked
  1023  00074A  6FD9               	movwf	main@length& (0+255),b
  1024                           
  1025                           ;main.c: 397: msgbuffer[0] = 0x3A;
  1026  00074C  0E3A               	movlw	58
  1027  00074E  D004               	goto	L1
  1028  000750                     l3270:
  1029                           
  1030                           ; BSR set to: 1
  1031                           ;main.c: 401: {
  1032                           ;main.c: 402: length = 1;
  1033  000750  0E01               	movlw	1
  1034  000752  0101               	movlb	1	; () banked
  1035  000754  6FD9               	movwf	main@length& (0+255),b
  1036                           
  1037                           ;main.c: 403: msgbuffer[0] = 0xA3;
  1038  000756  0EA3               	movlw	163
  1039  000758                     L1:
  1040  000758  0101               	movlb	1	; () banked
  1041  00075A  6FC1               	movwf	main@msgbuffer& (0+255),b
  1042                           
  1043                           ;main.c: 404: break;
  1044  00075C  D00B               	goto	l3276
  1045  00075E                     l3274:
  1046  00075E  0101               	movlb	1	; () banked
  1047  000760  51D0               	movf	main@last_reg_recvd& (0+255),w,b
  1048                           
  1049                           ; Switch size 1, requested type "space"
  1050                           ; Number of cases is 3, Range of values is 168 to 170
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte           10     6 (average)
  1054                           ;	Chosen strategy is simple_byte
  1055  000762  0AA8               	xorlw	168	; case 168
  1056  000764  B4D8               	btfsc	status,2,c
  1057  000766  D7EF               	goto	l3268
  1058  000768  0A01               	xorlw	1	; case 169
  1059  00076A  B4D8               	btfsc	status,2,c
  1060  00076C  D7F1               	goto	l3270
  1061  00076E  0A03               	xorlw	3	; case 170
  1062  000770  B4D8               	btfsc	status,2,c
  1063  000772  D7DF               	goto	l3266
  1064  000774                     l3276:
  1065                           
  1066                           ; BSR set to: 1
  1067                           ;main.c: 407: start_i2c_slave_reply(length, msgbuffer);
  1068  000774  0101               	movlb	1	; () banked
  1069  000776  0E01               	movlw	high main@msgbuffer
  1070  000778  0100               	movlb	0	; () banked
  1071  00077A  6FC9               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1072  00077C  0101               	movlb	1	; () banked
  1073  00077E  0EC1               	movlw	low main@msgbuffer
  1074  000780  0100               	movlb	0	; () banked
  1075  000782  6FC8               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1076  000784  0101               	movlb	1	; () banked
  1077  000786  51D9               	movf	main@length& (0+255),w,b
  1078  000788  EC5A  F005         	call	_start_i2c_slave_reply
  1079                           
  1080                           ;main.c: 408: break;
  1081  00078C  D00E               	goto	l3282
  1082  00078E                     l3280:
  1083  00078E  0101               	movlb	1	; () banked
  1084  000790  51D8               	movf	main@msgtype& (0+255),w,b
  1085                           
  1086                           ; Switch size 1, requested type "space"
  1087                           ; Number of cases is 4, Range of values is 10 to 42
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte           13     7 (average)
  1091                           ;	Chosen strategy is simple_byte
  1092  000792  0A0A               	xorlw	10	; case 10
  1093  000794  B4D8               	btfsc	status,2,c
  1094  000796  D7A9               	goto	l3264
  1095  000798  0A22               	xorlw	34	; case 40
  1096  00079A  B4D8               	btfsc	status,2,c
  1097  00079C  D7C7               	goto	l104
  1098  00079E  0A01               	xorlw	1	; case 41
  1099  0007A0  B4D8               	btfsc	status,2,c
  1100  0007A2  D7C4               	goto	l104
  1101  0007A4  0A03               	xorlw	3	; case 42
  1102  0007A6  B4D8               	btfsc	status,2,c
  1103  0007A8  D7DA               	goto	l3274
  1104  0007AA                     l3282:
  1105                           
  1106                           ;main.c: 416: }
  1107                           ;main.c: 419: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1108  0007AA  0101               	movlb	1	; () banked
  1109  0007AC  0E01               	movlw	high main@msgtype
  1110  0007AE  0101               	movlb	1	; () banked
  1111  0007B0  6FB7               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1112  0007B2  0101               	movlb	1	; () banked
  1113  0007B4  0ED8               	movlw	low main@msgtype
  1114  0007B6  0101               	movlb	1	; () banked
  1115  0007B8  6FB6               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1116  0007BA  0101               	movlb	1	; () banked
  1117  0007BC  0E01               	movlw	high main@msgbuffer
  1118  0007BE  0101               	movlb	1	; () banked
  1119  0007C0  6FB9               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1120  0007C2  0101               	movlb	1	; () banked
  1121  0007C4  0EC1               	movlw	low main@msgbuffer
  1122  0007C6  0101               	movlb	1	; () banked
  1123  0007C8  6FB8               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1124  0007CA  0E0A               	movlw	10
  1125  0007CC  EC4C  F00A         	call	_ToMainLow_recvmsg
  1126  0007D0  0101               	movlb	1	; () banked
  1127  0007D2  6FD9               	movwf	main@length& (0+255),b
  1128                           
  1129                           ; BSR set to: 1
  1130                           ;main.c: 420: if (length < 0) {
  1131  0007D4  0101               	movlb	1	; () banked
  1132  0007D6  BFD9               	btfsc	main@length& (0+255),7,b
  1133  0007D8  D768               	goto	l3254
  1134  0007DA  D042               	goto	l3294
  1135  0007DC                     l3288:
  1136                           
  1137                           ; BSR set to: 1
  1138                           ;main.c: 428: {
  1139                           ;main.c: 429: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1140  0007DC  0101               	movlb	1	; () banked
  1141  0007DE  0E01               	movlw	high main@t1thread_data
  1142  0007E0  0101               	movlb	1	; () banked
  1143  0007E2  6FB9               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1144  0007E4  0101               	movlb	1	; () banked
  1145  0007E6  0ED6               	movlw	low main@t1thread_data
  1146  0007E8  0101               	movlb	1	; () banked
  1147  0007EA  6FB8               	movwf	timer1_lthread@tptr& (0+255),b
  1148  0007EC  0101               	movlb	1	; () banked
  1149  0007EE  C1D8  F1BA         	movff	main@msgtype,timer1_lthread@msgtype
  1150  0007F2  0101               	movlb	1	; () banked
  1151  0007F4  6BBB               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1152  0007F6  0101               	movlb	1	; () banked
  1153  0007F8  51D9               	movf	main@length& (0+255),w,b
  1154  0007FA  0101               	movlb	1	; () banked
  1155  0007FC  6FBC               	movwf	timer1_lthread@length& (0+255),b
  1156  0007FE  0101               	movlb	1	; () banked
  1157  000800  6BBD               	clrf	(timer1_lthread@length+1)& (0+255),b
  1158  000802  0101               	movlb	1	; () banked
  1159  000804  BFBC               	btfsc	timer1_lthread@length& (0+255),7,b
  1160  000806  07BD               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1161  000808  0101               	movlb	1	; () banked
  1162  00080A  0E01               	movlw	high main@msgbuffer
  1163  00080C  0101               	movlb	1	; () banked
  1164  00080E  6FBF               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1165  000810  0101               	movlb	1	; () banked
  1166  000812  0EC1               	movlw	low main@msgbuffer
  1167  000814  0101               	movlb	1	; () banked
  1168  000816  6FBE               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1169  000818  EC12  F009         	call	_timer1_lthread	;wreg free
  1170                           
  1171                           ;main.c: 430: break;
  1172  00081C  D746               	goto	l3254
  1173  00081E                     l3290:
  1174                           
  1175                           ;main.c: 433: case 31:
  1176                           ;main.c: 434: {
  1177                           ;main.c: 435: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1178  00081E  0101               	movlb	1	; () banked
  1179  000820  0E01               	movlw	high main@uthread_data
  1180  000822  0101               	movlb	1	; () banked
  1181  000824  6FA3               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1182  000826  0101               	movlb	1	; () banked
  1183  000828  0ECC               	movlw	low main@uthread_data
  1184  00082A  0101               	movlb	1	; () banked
  1185  00082C  6FA2               	movwf	uart_lthread@uptr& (0+255),b
  1186  00082E  0101               	movlb	1	; () banked
  1187  000830  C1D8  F1A4         	movff	main@msgtype,uart_lthread@msgtype
  1188  000834  0101               	movlb	1	; () banked
  1189  000836  6BA5               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1190  000838  0101               	movlb	1	; () banked
  1191  00083A  51D9               	movf	main@length& (0+255),w,b
  1192  00083C  0101               	movlb	1	; () banked
  1193  00083E  6FA6               	movwf	uart_lthread@length& (0+255),b
  1194  000840  0101               	movlb	1	; () banked
  1195  000842  6BA7               	clrf	(uart_lthread@length+1)& (0+255),b
  1196  000844  0101               	movlb	1	; () banked
  1197  000846  BFA6               	btfsc	uart_lthread@length& (0+255),7,b
  1198  000848  07A7               	decf	(uart_lthread@length+1)& (0+255),f,b
  1199  00084A  0101               	movlb	1	; () banked
  1200  00084C  0E01               	movlw	high main@msgbuffer
  1201  00084E  0101               	movlb	1	; () banked
  1202  000850  6FA9               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1203  000852  0101               	movlb	1	; () banked
  1204  000854  0EC1               	movlw	low main@msgbuffer
  1205  000856  0101               	movlb	1	; () banked
  1206  000858  6FA8               	movwf	uart_lthread@msgbuffer& (0+255),b
  1207  00085A  EC9D  F00A         	call	_uart_lthread	;wreg free
  1208                           
  1209                           ;main.c: 436: break;
  1210  00085E  D725               	goto	l3254
  1211  000860                     l3294:
  1212  000860  0101               	movlb	1	; () banked
  1213  000862  51D8               	movf	main@msgtype& (0+255),w,b
  1214                           
  1215                           ; Switch size 1, requested type "space"
  1216                           ; Number of cases is 3, Range of values is 11 to 31
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte           10     6 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221  000864  0A0B               	xorlw	11	; case 11
  1222  000866  B4D8               	btfsc	status,2,c
  1223  000868  D7B9               	goto	l3288
  1224  00086A  0A15               	xorlw	21	; case 30
  1225  00086C  B4D8               	btfsc	status,2,c
  1226  00086E  D7D7               	goto	l3290
  1227  000870  0A01               	xorlw	1	; case 31
  1228  000872  B4D8               	btfsc	status,2,c
  1229  000874  D7D4               	goto	l3290
  1230  000876  D719               	goto	l3254
  1231  000878                     __end_of_main:
  1232                           	opt stack 0
  1233                           tblptru	equ	0xFF8
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _uart_lthread *****************
  1239 ;; Defined at:
  1240 ;;		line 9 in file "../src/uart_thread.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  uptr            2    0[BANK1 ] PTR struct __uart_thread
  1243 ;;		 -> main@uthread_data(2), 
  1244 ;;  msgtype         2    2[BANK1 ] int 
  1245 ;;  length          2    4[BANK1 ] int 
  1246 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1247 ;;		 -> main@msgbuffer(11), 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  2    0[BANK1 ] int 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1259 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1262 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1263 ;;Total ram usage:        8 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:   10
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text1
  1274  00153A                     __ptext1:
  1275                           	opt stack 0
  1276  00153A                     _uart_lthread:
  1277                           	opt stack 20
  1278                           
  1279                           ;uart_thread.c: 10: if (msgtype == 30) {
  1280                           
  1281                           ; BSR set to: 1
  1282                           ;incstack = 0
  1283  00153A  0101               	movlb	1	; () banked
  1284  00153C  51A4               	movf	uart_lthread@msgtype& (0+255),w,b
  1285  00153E  0A1E               	xorlw	30
  1286  001540  11A5               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1287  001542  B4D8               	btfsc	status,2,c
  1288  001544  0012               	return	
  1289                           
  1290                           ; BSR set to: 1
  1291                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1292                           
  1293                           ; BSR set to: 1
  1294                           
  1295                           ; BSR set to: 1
  1296                           ;uart_thread.c: 11: }
  1297  001546  0101               	movlb	1	; () banked
  1298  001548  51A4               	movf	uart_lthread@msgtype& (0+255),w,b
  1299  00154A  0A1F               	xorlw	31
  1300  00154C  11A5               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1301  00154E  A4D8               	btfss	status,2,c
  1302  001550  0012               	return	
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1306  001552  0101               	movlb	1	; () banked
  1307  001554  51A6               	movf	uart_lthread@length& (0+255),w,b
  1308  001556  0101               	movlb	1	; () banked
  1309  001558  25A8               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1310  00155A  6ED9               	movwf	fsr2l,c
  1311  00155C  0101               	movlb	1	; () banked
  1312  00155E  51A7               	movf	(uart_lthread@length+1)& (0+255),w,b
  1313  001560  0101               	movlb	1	; () banked
  1314  001562  21A9               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1315  001564  6EDA               	movwf	fsr2h,c
  1316  001566  0E00               	movlw	0
  1317  001568  6EDF               	movwf	indf2,c
  1318  00156A  0012               	return	
  1319  00156C                     __end_of_uart_lthread:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           indf2	equ	0xFDF
  1325                           fsr2h	equ	0xFDA
  1326                           fsr2l	equ	0xFD9
  1327                           status	equ	0xFD8
  1328                           
  1329 ;; *************** function _timer1_lthread *****************
  1330 ;; Defined at:
  1331 ;;		line 14 in file "../src/timer1_thread.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  tptr            2   22[BANK1 ] PTR struct __timer1_thre
  1334 ;;		 -> main@t1thread_data(2), 
  1335 ;;  msgtype         2   24[BANK1 ] int 
  1336 ;;  length          2   26[BANK1 ] int 
  1337 ;;  msgbuffer       2   28[BANK1 ] PTR unsigned char 
  1338 ;;		 -> main@msgbuffer(11), 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  retval          1   30[BANK1 ] char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2   22[BANK1 ] int 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1350 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;Total ram usage:        9 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:   13
  1357 ;; This function calls:
  1358 ;;		_FromMainHigh_sendmsg
  1359 ;;		___lwmod
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text2
  1366  001224                     __ptext2:
  1367                           	opt stack 0
  1368  001224                     _timer1_lthread:
  1369                           	opt stack 17
  1370                           
  1371                           ;timer1_thread.c: 15: signed char retval;
  1372                           ;timer1_thread.c: 17: tptr->msgcount++;
  1373                           
  1374                           ; BSR set to: 1
  1375                           ;incstack = 0
  1376  001224  C1B8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1377  001228  C1B9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1378  00122C  2ADE               	incf	postinc2,f,c
  1379  00122E  0E00               	movlw	0
  1380  001230  22DD               	addwfc	postdec2,f,c
  1381                           
  1382                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1383  001232  C1B8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1384  001236  C1B9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1385  00123A  0100               	movlb	0	; () banked
  1386  00123C  CFDE F0C8          	movff	postinc2,___lwmod@dividend
  1387  001240  0100               	movlb	0	; () banked
  1388  001242  CFDD F0C9          	movff	postdec2,___lwmod@dividend+1
  1389  001246  0E00               	movlw	0
  1390  001248  0100               	movlb	0	; () banked
  1391  00124A  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
  1392  00124C  0E0A               	movlw	10
  1393  00124E  0100               	movlb	0	; () banked
  1394  001250  6FCA               	movwf	___lwmod@divisor& (0+255),b
  1395  001252  ECE2  F008         	call	___lwmod	;wreg free
  1396  001256  0100               	movlb	0	; () banked
  1397  001258  51C8               	movf	?___lwmod& (0+255),w,b
  1398  00125A  0A09               	xorlw	9
  1399  00125C  0100               	movlb	0	; () banked
  1400  00125E  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
  1401  001260  A4D8               	btfss	status,2,c
  1402  001262  0012               	return	
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1406  001264  0E14               	movlw	20
  1407  001266  0101               	movlb	1	; () banked
  1408  001268  6FB4               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1409  00126A  0101               	movlb	1	; () banked
  1410  00126C  C1B9  F1B6         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1411  001270  0101               	movlb	1	; () banked
  1412  001272  C1B8  F1B5         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1413  001276  0E02               	movlw	2
  1414  001278  ECCF  F00A         	call	_FromMainHigh_sendmsg
  1415  00127C  0101               	movlb	1	; () banked
  1416  00127E  6FC0               	movwf	timer1_lthread@retval& (0+255),b
  1417  001280  0012               	return	
  1418  001282                     __end_of_timer1_lthread:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           indf2	equ	0xFDF
  1424                           postinc2	equ	0xFDE
  1425                           postdec2	equ	0xFDD
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function ___lwmod *****************
  1431 ;; Defined at:
  1432 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  dividend        2   50[BANK0 ] unsigned int 
  1435 ;;  divisor         2   52[BANK0 ] unsigned int 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  counter         1    0[BANK1 ] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  2   50[BANK0 ] unsigned int 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;Total ram usage:        5 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:   10
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_timer1_lthread
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text3
  1462  0011C4                     __ptext3:
  1463                           	opt stack 0
  1464  0011C4                     ___lwmod:
  1465                           	opt stack 19
  1466                           
  1467                           ;incstack = 0
  1468  0011C4  0100               	movlb	0	; () banked
  1469  0011C6  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1470  0011C8  11CA               	iorwf	___lwmod@divisor& (0+255),w,b
  1471  0011CA  B4D8               	btfsc	status,2,c
  1472  0011CC  D026               	goto	l1017
  1473                           
  1474                           ; BSR set to: 0
  1475  0011CE  0E01               	movlw	1
  1476  0011D0  0101               	movlb	1	; () banked
  1477  0011D2  6FA2               	movwf	___lwmod@counter& (0+255),b
  1478  0011D4  D006               	goto	l2862
  1479  0011D6                     l2860:
  1480  0011D6  0100               	movlb	0	; () banked
  1481  0011D8  90D8               	bcf	status,0,c
  1482  0011DA  37CA               	rlcf	___lwmod@divisor& (0+255),f,b
  1483  0011DC  37CB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1484  0011DE  0101               	movlb	1	; () banked
  1485  0011E0  2BA2               	incf	___lwmod@counter& (0+255),f,b
  1486  0011E2                     l2862:
  1487                           
  1488                           ; BSR set to: 1
  1489  0011E2  0100               	movlb	0	; () banked
  1490  0011E4  AFCB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1491  0011E6  D7F7               	goto	l2860
  1492  0011E8                     l2864:
  1493  0011E8  0100               	movlb	0	; () banked
  1494  0011EA  51CA               	movf	___lwmod@divisor& (0+255),w,b
  1495  0011EC  0100               	movlb	0	; () banked
  1496  0011EE  5DC8               	subwf	___lwmod@dividend& (0+255),w,b
  1497  0011F0  0100               	movlb	0	; () banked
  1498  0011F2  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1499  0011F4  0100               	movlb	0	; () banked
  1500  0011F6  59C9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1501  0011F8  A0D8               	btfss	status,0,c
  1502  0011FA  D008               	goto	l2868
  1503                           
  1504                           ; BSR set to: 0
  1505  0011FC  0100               	movlb	0	; () banked
  1506  0011FE  51CA               	movf	___lwmod@divisor& (0+255),w,b
  1507  001200  0100               	movlb	0	; () banked
  1508  001202  5FC8               	subwf	___lwmod@dividend& (0+255),f,b
  1509  001204  0100               	movlb	0	; () banked
  1510  001206  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1511  001208  0100               	movlb	0	; () banked
  1512  00120A  5BC9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1513  00120C                     l2868:
  1514                           
  1515                           ; BSR set to: 0
  1516  00120C  0100               	movlb	0	; () banked
  1517  00120E  90D8               	bcf	status,0,c
  1518  001210  33CB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1519  001212  33CA               	rrcf	___lwmod@divisor& (0+255),f,b
  1520                           
  1521                           ; BSR set to: 0
  1522  001214  0101               	movlb	1	; () banked
  1523  001216  2FA2               	decfsz	___lwmod@counter& (0+255),f,b
  1524  001218  D7E7               	goto	l2864
  1525  00121A                     l1017:
  1526  00121A  C0C8  F0C8         	movff	___lwmod@dividend,?___lwmod
  1527  00121E  C0C9  F0C9         	movff	___lwmod@dividend+1,?___lwmod+1
  1528  001222  0012               	return	
  1529  001224                     __end_of___lwmod:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           fsr2h	equ	0xFDA
  1538                           fsr2l	equ	0xFD9
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _FromMainHigh_sendmsg *****************
  1542 ;; Defined at:
  1543 ;;		line 174 in file "../src/messages.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  length          1    wreg     unsigned char 
  1546 ;;  msgtype         1   18[BANK1 ] unsigned char 
  1547 ;;  data            2   19[BANK1 ] PTR void 
  1548 ;;		 -> main@t1thread_data(2), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  length          1   21[BANK1 ] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      char 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1560 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;Total ram usage:        4 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:   12
  1567 ;; This function calls:
  1568 ;;		_send_msg
  1569 ;; This function is called by:
  1570 ;;		_timer1_lthread
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text4
  1575  00159E                     __ptext4:
  1576                           	opt stack 0
  1577  00159E                     _FromMainHigh_sendmsg:
  1578                           	opt stack 17
  1579                           
  1580                           ;incstack = 0
  1581                           ;FromMainHigh_sendmsg@length stored from wreg
  1582  00159E  0101               	movlb	1	; () banked
  1583  0015A0  6FB7               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1584                           
  1585                           ; BSR set to: 1
  1586                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1587  0015A2  0101               	movlb	1	; () banked
  1588  0015A4  0E01               	movlw	high _FromMainHigh_MQ
  1589  0015A6  0101               	movlb	1	; () banked
  1590  0015A8  6FA9               	movwf	(send_msg@qptr+1)& (0+255),b
  1591  0015AA  0101               	movlb	1	; () banked
  1592  0015AC  0E00               	movlw	low _FromMainHigh_MQ
  1593  0015AE  0101               	movlb	1	; () banked
  1594  0015B0  6FA8               	movwf	send_msg@qptr& (0+255),b
  1595  0015B2  C1B7  F1AA         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1596  0015B6  C1B4  F1AB         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1597  0015BA  0101               	movlb	1	; () banked
  1598  0015BC  C1B6  F1AD         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1599  0015C0  0101               	movlb	1	; () banked
  1600  0015C2  C1B5  F1AC         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1601  0015C6  ECDC  F005         	call	_send_msg	;wreg free
  1602  0015CA  0012               	return	
  1603  0015CC                     __end_of_FromMainHigh_sendmsg:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           indf2	equ	0xFDF
  1609                           postinc2	equ	0xFDE
  1610                           postdec2	equ	0xFDD
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _send_msg *****************
  1616 ;; Defined at:
  1617 ;;		line 24 in file "../src/messages.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  qptr            2    6[BANK1 ] PTR struct __msg_queue
  1620 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1621 ;;  length          1    8[BANK1 ] unsigned char 
  1622 ;;  msgtype         1    9[BANK1 ] unsigned char 
  1623 ;;  data            2   10[BANK1 ] PTR void 
  1624 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  1625 ;;		 -> main@ic(28), main@uc(5), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  qmsg            2   16[BANK1 ] PTR struct __msg
  1628 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1629 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1630 ;;  tlength         2   13[BANK1 ] unsigned int 
  1631 ;;  slot            1   15[BANK1 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1641 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;Total ram usage:       12 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:   11
  1648 ;; This function calls:
  1649 ;;		_memcpy
  1650 ;; This function is called by:
  1651 ;;		_FromMainHigh_sendmsg
  1652 ;;		_FromMainLow_sendmsg
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text5
  1657  000BB8                     __ptext5:
  1658                           	opt stack 0
  1659  000BB8                     _send_msg:
  1660                           	opt stack 17
  1661                           
  1662                           ;messages.c: 25: unsigned char slot;
  1663                           ;messages.c: 27: msg *qmsg;
  1664                           ;messages.c: 28: size_t tlength = length;
  1665                           
  1666                           ;incstack = 0
  1667  000BB8  0101               	movlb	1	; () banked
  1668  000BBA  C1AA  F1AF         	movff	send_msg@length,send_msg@tlength
  1669  000BBE  0101               	movlb	1	; () banked
  1670  000BC0  6BB0               	clrf	(send_msg@tlength+1)& (0+255),b
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1674  000BC2  0101               	movlb	1	; () banked
  1675  000BC4  EE20 F034          	lfsr	2,52
  1676  000BC8  0101               	movlb	1	; () banked
  1677  000BCA  51A8               	movf	send_msg@qptr& (0+255),w,b
  1678  000BCC  26D9               	addwf	fsr2l,f,c
  1679  000BCE  0101               	movlb	1	; () banked
  1680  000BD0  51A9               	movf	(send_msg@qptr+1)& (0+255),w,b
  1681  000BD2  22DA               	addwfc	fsr2h,f,c
  1682  000BD4  50DF               	movf	indf2,w,c
  1683  000BD6  0101               	movlb	1	; () banked
  1684  000BD8  6FB1               	movwf	send_msg@slot& (0+255),b
  1685                           
  1686                           ; BSR set to: 1
  1687                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1688  000BDA  0101               	movlb	1	; () banked
  1689  000BDC  51B1               	movf	send_msg@slot& (0+255),w,b
  1690  000BDE  0D0D               	mullw	13
  1691  000BE0  50F3               	movf	prodl,w,c
  1692  000BE2  0101               	movlb	1	; () banked
  1693  000BE4  25A8               	addwf	send_msg@qptr& (0+255),w,b
  1694  000BE6  0101               	movlb	1	; () banked
  1695  000BE8  6FB2               	movwf	send_msg@qmsg& (0+255),b
  1696  000BEA  50F4               	movf	prodh,w,c
  1697  000BEC  0101               	movlb	1	; () banked
  1698  000BEE  21A9               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1699  000BF0  0101               	movlb	1	; () banked
  1700  000BF2  6FB3               	movwf	(send_msg@qmsg+1)& (0+255),b
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;messages.c: 41: if (qmsg->full != 0) {
  1704  000BF4  C1B2  FFD9         	movff	send_msg@qmsg,fsr2l
  1705  000BF8  C1B3  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1706  000BFC  50DF               	movf	indf2,w,c
  1707  000BFE  B4D8               	btfsc	status,2,c
  1708  000C00  D002               	goto	l2690
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;messages.c: 42: return (-1);
  1712  000C02  0EFF               	movlw	255
  1713  000C04  0012               	return	
  1714  000C06                     l2690:
  1715                           
  1716                           ; BSR set to: 1
  1717                           ;messages.c: 43: }
  1718                           ;messages.c: 46: qmsg->length = length;
  1719  000C06  0101               	movlb	1	; () banked
  1720  000C08  EE20 F001          	lfsr	2,1
  1721  000C0C  0101               	movlb	1	; () banked
  1722  000C0E  51B2               	movf	send_msg@qmsg& (0+255),w,b
  1723  000C10  26D9               	addwf	fsr2l,f,c
  1724  000C12  0101               	movlb	1	; () banked
  1725  000C14  51B3               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1726  000C16  22DA               	addwfc	fsr2h,f,c
  1727  000C18  0101               	movlb	1	; () banked
  1728  000C1A  C1AA  FFDF         	movff	send_msg@length,indf2
  1729                           
  1730                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1731  000C1E  0101               	movlb	1	; () banked
  1732  000C20  EE20 F002          	lfsr	2,2
  1733  000C24  0101               	movlb	1	; () banked
  1734  000C26  51B2               	movf	send_msg@qmsg& (0+255),w,b
  1735  000C28  26D9               	addwf	fsr2l,f,c
  1736  000C2A  0101               	movlb	1	; () banked
  1737  000C2C  51B3               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1738  000C2E  22DA               	addwfc	fsr2h,f,c
  1739  000C30  0101               	movlb	1	; () banked
  1740  000C32  C1AB  FFDF         	movff	send_msg@msgtype,indf2
  1741                           
  1742                           ; BSR set to: 1
  1743                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1744  000C36  0E03               	movlw	3
  1745  000C38  0101               	movlb	1	; () banked
  1746  000C3A  25B2               	addwf	send_msg@qmsg& (0+255),w,b
  1747  000C3C  0101               	movlb	1	; () banked
  1748  000C3E  6FA2               	movwf	memcpy@d1& (0+255),b
  1749  000C40  0E00               	movlw	0
  1750  000C42  0101               	movlb	1	; () banked
  1751  000C44  21B3               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1752  000C46  0101               	movlb	1	; () banked
  1753  000C48  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  1754  000C4A  0101               	movlb	1	; () banked
  1755  000C4C  C1AD  F1A5         	movff	send_msg@data+1,memcpy@s1+1
  1756  000C50  0101               	movlb	1	; () banked
  1757  000C52  C1AC  F1A4         	movff	send_msg@data,memcpy@s1
  1758  000C56  C1AF  F1A6         	movff	send_msg@tlength,memcpy@n
  1759  000C5A  C1B0  F1A7         	movff	send_msg@tlength+1,memcpy@n+1
  1760  000C5E  EC70  F009         	call	_memcpy	;wreg free
  1761                           
  1762                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1763  000C62  0101               	movlb	1	; () banked
  1764  000C64  EE20 F034          	lfsr	2,52
  1765  000C68  0101               	movlb	1	; () banked
  1766  000C6A  51A8               	movf	send_msg@qptr& (0+255),w,b
  1767  000C6C  26D9               	addwf	fsr2l,f,c
  1768  000C6E  0101               	movlb	1	; () banked
  1769  000C70  51A9               	movf	(send_msg@qptr+1)& (0+255),w,b
  1770  000C72  22DA               	addwfc	fsr2h,f,c
  1771  000C74  0101               	movlb	1	; () banked
  1772  000C76  EE10 F034          	lfsr	1,52
  1773  000C7A  0101               	movlb	1	; () banked
  1774  000C7C  51A8               	movf	send_msg@qptr& (0+255),w,b
  1775  000C7E  26E1               	addwf	fsr1l,f,c
  1776  000C80  0101               	movlb	1	; () banked
  1777  000C82  51A9               	movf	(send_msg@qptr+1)& (0+255),w,b
  1778  000C84  22E2               	addwfc	fsr1h,f,c
  1779  000C86  50E7               	movf	indf1,w,c
  1780  000C88  0101               	movlb	1	; () banked
  1781  000C8A  6FAE               	movwf	??_send_msg& (0+255),b
  1782  000C8C  0101               	movlb	1	; () banked
  1783  000C8E  29AE               	incf	??_send_msg& (0+255),w,b
  1784  000C90  0B03               	andlw	3
  1785  000C92  6EDF               	movwf	indf2,c
  1786                           
  1787                           ; BSR set to: 1
  1788                           ;messages.c: 59: qmsg->full = 1;
  1789  000C94  C1B2  FFD9         	movff	send_msg@qmsg,fsr2l
  1790  000C98  C1B3  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1791  000C9C  0E01               	movlw	1
  1792  000C9E  6EDF               	movwf	indf2,c
  1793                           
  1794                           ; BSR set to: 1
  1795                           ;messages.c: 60: return (1);
  1796  000CA0  0E01               	movlw	1
  1797  000CA2  0012               	return	
  1798  000CA4                     __end_of_send_msg:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           prodh	equ	0xFF4
  1802                           prodl	equ	0xFF3
  1803                           postinc0	equ	0xFEE
  1804                           wreg	equ	0xFE8
  1805                           indf1	equ	0xFE7
  1806                           fsr1h	equ	0xFE2
  1807                           fsr1l	equ	0xFE1
  1808                           indf2	equ	0xFDF
  1809                           postinc2	equ	0xFDE
  1810                           postdec2	equ	0xFDD
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8
  1814                           
  1815 ;; *************** function _timer0_lthread *****************
  1816 ;; Defined at:
  1817 ;;		line 9 in file "../src/timer0_thread.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  1820 ;;		 -> main@t0thread_data(2), 
  1821 ;;  msgtype         2    2[BANK1 ] int 
  1822 ;;  length          2    4[BANK1 ] int 
  1823 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1824 ;;		 -> main@msgbuffer(11), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  msgval          2   50[BANK0 ] PTR unsigned int 
  1827 ;;		 -> main@msgbuffer(11), 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2    0[BANK1 ] int 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1837 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;Total ram usage:       10 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:   10
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text6
  1852  001710                     __ptext6:
  1853                           	opt stack 0
  1854  001710                     _timer0_lthread:
  1855                           	opt stack 20
  1856                           
  1857                           ;timer0_thread.c: 10: unsigned int *msgval;
  1858                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;incstack = 0
  1862  001710  0101               	movlb	1	; () banked
  1863  001712  0100               	movlb	0	; () banked
  1864  001714  C1A9  F0C9         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1865  001718  0101               	movlb	1	; () banked
  1866  00171A  0100               	movlb	0	; () banked
  1867  00171C  C1A8  F0C8         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1868                           
  1869                           ; BSR set to: 0
  1870  001720  0012               	return	
  1871  001722                     __end_of_timer0_lthread:
  1872                           	opt stack 0
  1873                           tblptru	equ	0xFF8
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           indf1	equ	0xFE7
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           indf2	equ	0xFDF
  1882                           postinc2	equ	0xFDE
  1883                           postdec2	equ	0xFDD
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8
  1887                           
  1888 ;; *************** function _start_i2c_slave_reply *****************
  1889 ;; Defined at:
  1890 ;;		line 53 in file "../src/my_i2c.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  length          1    wreg     unsigned char 
  1893 ;;  msg             2   50[BANK0 ] PTR unsigned char 
  1894 ;;		 -> main@msgbuffer(11), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  length          1    0[BANK1 ] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;		None               void
  1899 ;; Registers used:
  1900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1910 ;;Total ram usage:        5 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:   10
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text7
  1921  000AB4                     __ptext7:
  1922                           	opt stack 0
  1923  000AB4                     _start_i2c_slave_reply:
  1924                           	opt stack 20
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;incstack = 0
  1928                           ;start_i2c_slave_reply@length stored from wreg
  1929  000AB4  0101               	movlb	1	; () banked
  1930  000AB6  6FA2               	movwf	start_i2c_slave_reply@length& (0+255),b
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1934  000AB8  0100               	movlb	0	; () banked
  1935  000ABA  EE20 F019          	lfsr	2,25
  1936  000ABE  0100               	movlb	0	; () banked
  1937  000AC0  51CC               	movf	_ic_ptr& (0+255),w,b
  1938  000AC2  26D9               	addwf	fsr2l,f,c
  1939  000AC4  0100               	movlb	0	; () banked
  1940  000AC6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1941  000AC8  22DA               	addwfc	fsr2h,f,c
  1942  000ACA  0E00               	movlw	0
  1943  000ACC  6EDF               	movwf	indf2,c
  1944  000ACE  D03E               	goto	l3180
  1945  000AD0                     l3176:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1949  000AD0  0100               	movlb	0	; () banked
  1950  000AD2  EE20 F019          	lfsr	2,25
  1951  000AD6  0100               	movlb	0	; () banked
  1952  000AD8  51CC               	movf	_ic_ptr& (0+255),w,b
  1953  000ADA  26D9               	addwf	fsr2l,f,c
  1954  000ADC  0100               	movlb	0	; () banked
  1955  000ADE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1956  000AE0  22DA               	addwfc	fsr2h,f,c
  1957  000AE2  50DF               	movf	indf2,w,c
  1958  000AE4  0100               	movlb	0	; () banked
  1959  000AE6  6FCA               	movwf	??_start_i2c_slave_reply& (0+255),b
  1960  000AE8  0100               	movlb	0	; () banked
  1961  000AEA  51CA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1962  000AEC  0D01               	mullw	1
  1963  000AEE  50F3               	movf	prodl,w,c
  1964  000AF0  0100               	movlb	0	; () banked
  1965  000AF2  25C8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1966  000AF4  6ED9               	movwf	fsr2l,c
  1967  000AF6  50F4               	movf	prodh,w,c
  1968  000AF8  0100               	movlb	0	; () banked
  1969  000AFA  21C9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1970  000AFC  6EDA               	movwf	fsr2h,c
  1971  000AFE  0100               	movlb	0	; () banked
  1972  000B00  EE10 F019          	lfsr	1,25
  1973  000B04  0100               	movlb	0	; () banked
  1974  000B06  51CC               	movf	_ic_ptr& (0+255),w,b
  1975  000B08  26E1               	addwf	fsr1l,f,c
  1976  000B0A  0100               	movlb	0	; () banked
  1977  000B0C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1978  000B0E  22E2               	addwfc	fsr1h,f,c
  1979  000B10  50E7               	movf	indf1,w,c
  1980  000B12  0100               	movlb	0	; () banked
  1981  000B14  6FCB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1982  000B16  0100               	movlb	0	; () banked
  1983  000B18  51CB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1984  000B1A  0D01               	mullw	1
  1985  000B1C  0E0F               	movlw	15
  1986  000B1E  26F3               	addwf	prodl,f,c
  1987  000B20  0E00               	movlw	0
  1988  000B22  22F4               	addwfc	prodh,f,c
  1989  000B24  50F3               	movf	prodl,w,c
  1990  000B26  0100               	movlb	0	; () banked
  1991  000B28  25CC               	addwf	_ic_ptr& (0+255),w,b
  1992  000B2A  6EE1               	movwf	fsr1l,c
  1993  000B2C  50F4               	movf	prodh,w,c
  1994  000B2E  0100               	movlb	0	; () banked
  1995  000B30  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1996  000B32  6EE2               	movwf	fsr1h,c
  1997  000B34  CFDF FFE7          	movff	indf2,indf1
  1998                           
  1999                           ; BSR set to: 0
  2000  000B38  0100               	movlb	0	; () banked
  2001  000B3A  EE20 F019          	lfsr	2,25
  2002  000B3E  0100               	movlb	0	; () banked
  2003  000B40  51CC               	movf	_ic_ptr& (0+255),w,b
  2004  000B42  26D9               	addwf	fsr2l,f,c
  2005  000B44  0100               	movlb	0	; () banked
  2006  000B46  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2007  000B48  22DA               	addwfc	fsr2h,f,c
  2008  000B4A  2ADF               	incf	indf2,f,c
  2009  000B4C                     l3180:
  2010                           
  2011                           ; BSR set to: 0
  2012  000B4C  0100               	movlb	0	; () banked
  2013  000B4E  EE20 F019          	lfsr	2,25
  2014  000B52  0100               	movlb	0	; () banked
  2015  000B54  51CC               	movf	_ic_ptr& (0+255),w,b
  2016  000B56  26D9               	addwf	fsr2l,f,c
  2017  000B58  0100               	movlb	0	; () banked
  2018  000B5A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2019  000B5C  22DA               	addwfc	fsr2h,f,c
  2020  000B5E  50DF               	movf	indf2,w,c
  2021  000B60  0100               	movlb	0	; () banked
  2022  000B62  6FCA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2023  000B64  0101               	movlb	1	; () banked
  2024  000B66  51A2               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2025  000B68  0100               	movlb	0	; () banked
  2026  000B6A  5DCA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2027  000B6C  A0D8               	btfss	status,0,c
  2028  000B6E  D7B0               	goto	l3176
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;my_i2c.c: 57: }
  2032                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2033                           
  2034                           ; BSR set to: 0
  2035  000B70  0100               	movlb	0	; () banked
  2036  000B72  EE20 F019          	lfsr	2,25
  2037  000B76  0100               	movlb	0	; () banked
  2038  000B78  51CC               	movf	_ic_ptr& (0+255),w,b
  2039  000B7A  26D9               	addwf	fsr2l,f,c
  2040  000B7C  0100               	movlb	0	; () banked
  2041  000B7E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2042  000B80  22DA               	addwfc	fsr2h,f,c
  2043  000B82  0101               	movlb	1	; () banked
  2044  000B84  C1A2  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2045                           
  2046                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2047  000B88  0100               	movlb	0	; () banked
  2048  000B8A  EE20 F01A          	lfsr	2,26
  2049  000B8E  0100               	movlb	0	; () banked
  2050  000B90  51CC               	movf	_ic_ptr& (0+255),w,b
  2051  000B92  26D9               	addwf	fsr2l,f,c
  2052  000B94  0100               	movlb	0	; () banked
  2053  000B96  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2054  000B98  22DA               	addwfc	fsr2h,f,c
  2055  000B9A  0E01               	movlw	1
  2056  000B9C  6EDF               	movwf	indf2,c
  2057                           
  2058                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2059  000B9E  0100               	movlb	0	; () banked
  2060  000BA0  EE20 F00F          	lfsr	2,15
  2061  000BA4  0100               	movlb	0	; () banked
  2062  000BA6  51CC               	movf	_ic_ptr& (0+255),w,b
  2063  000BA8  26D9               	addwf	fsr2l,f,c
  2064  000BAA  0100               	movlb	0	; () banked
  2065  000BAC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2066  000BAE  22DA               	addwfc	fsr2h,f,c
  2067  000BB0  50DF               	movf	indf2,w,c
  2068  000BB2  6EC9               	movwf	4041,c	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2072  000BB4  88C6               	bsf	4038,4,c	;volatile
  2073                           
  2074                           ; BSR set to: 0
  2075  000BB6  0012               	return	
  2076  000BB8                     __end_of_start_i2c_slave_reply:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           prodh	equ	0xFF4
  2080                           prodl	equ	0xFF3
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           indf1	equ	0xFE7
  2084                           fsr1h	equ	0xFE2
  2085                           fsr1l	equ	0xFE1
  2086                           indf2	equ	0xFDF
  2087                           postinc2	equ	0xFDE
  2088                           postdec2	equ	0xFDD
  2089                           fsr2h	equ	0xFDA
  2090                           fsr2l	equ	0xFD9
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _init_uart_recv *****************
  2094 ;; Defined at:
  2095 ;;		line 49 in file "../src/my_uart.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  uc              2   50[BANK0 ] PTR struct __uart_comm
  2098 ;;		 -> main@uc(5), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;		None               void
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:   10
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text8
  2125  0016C0                     __ptext8:
  2126                           	opt stack 0
  2127  0016C0                     _init_uart_recv:
  2128                           	opt stack 20
  2129                           
  2130                           ;my_uart.c: 50: uc_ptr = uc;
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;incstack = 0
  2134  0016C0  0100               	movlb	0	; () banked
  2135  0016C2  C0C9  F032         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2136  0016C6  0100               	movlb	0	; () banked
  2137  0016C8  C0C8  F031         	movff	init_uart_recv@uc,_uc_ptr
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2141  0016CC  EE20 F004          	lfsr	2,4
  2142  0016D0  5031               	movf	_uc_ptr,w,c
  2143  0016D2  26D9               	addwf	fsr2l,f,c
  2144  0016D4  5032               	movf	_uc_ptr+1,w,c
  2145  0016D6  22DA               	addwfc	fsr2h,f,c
  2146  0016D8  0E00               	movlw	0
  2147  0016DA  6EDF               	movwf	indf2,c
  2148                           
  2149                           ; BSR set to: 0
  2150  0016DC  0012               	return	
  2151  0016DE                     __end_of_init_uart_recv:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           indf1	equ	0xFE7
  2159                           fsr1h	equ	0xFE2
  2160                           fsr1l	equ	0xFE1
  2161                           indf2	equ	0xFDF
  2162                           postinc2	equ	0xFDE
  2163                           postdec2	equ	0xFDD
  2164                           fsr2h	equ	0xFDA
  2165                           fsr2l	equ	0xFD9
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _init_timer1_lthread *****************
  2169 ;; Defined at:
  2170 ;;		line 6 in file "../src/timer1_thread.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  tptr            2   50[BANK0 ] PTR struct __timer1_thre
  2173 ;;		 -> main@t1thread_data(2), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;		None               void
  2178 ;; Registers used:
  2179 ;;		wreg, fsr2l, fsr2h
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2189 ;;Total ram usage:        2 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:   10
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text9
  2200  001722                     __ptext9:
  2201                           	opt stack 0
  2202  001722                     _init_timer1_lthread:
  2203                           	opt stack 20
  2204                           
  2205                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;incstack = 0
  2209  001722  C0C8  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2210  001726  C0C9  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2211  00172A  0E00               	movlw	0
  2212  00172C  6EDE               	movwf	postinc2,c
  2213  00172E  0E00               	movlw	0
  2214  001730  6EDD               	movwf	postdec2,c
  2215  001732  0012               	return	
  2216  001734                     __end_of_init_timer1_lthread:
  2217                           	opt stack 0
  2218                           tblptru	equ	0xFF8
  2219                           prodh	equ	0xFF4
  2220                           prodl	equ	0xFF3
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           indf1	equ	0xFE7
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           indf2	equ	0xFDF
  2227                           postinc2	equ	0xFDE
  2228                           postdec2	equ	0xFDD
  2229                           fsr2h	equ	0xFDA
  2230                           fsr2l	equ	0xFD9
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _init_queues *****************
  2234 ;; Defined at:
  2235 ;;		line 194 in file "../src/messages.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;		None               void
  2242 ;; Registers used:
  2243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:   11
  2256 ;; This function calls:
  2257 ;;		_init_queue
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text10
  2264  001338                     __ptext10:
  2265                           	opt stack 0
  2266  001338                     _init_queues:
  2267                           	opt stack 19
  2268                           
  2269                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2270                           
  2271                           ;incstack = 0
  2272  001338  0E00               	movlw	0
  2273  00133A  6E2E               	movwf	_MQ_Main_Willing_to_block,c
  2274                           
  2275                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2276  00133C  0100               	movlb	0	; () banked
  2277  00133E  0E00               	movlw	high _ToMainLow_MQ
  2278  001340  0100               	movlb	0	; () banked
  2279  001342  6FC9               	movwf	(init_queue@qptr+1)& (0+255),b
  2280  001344  0100               	movlb	0	; () banked
  2281  001346  0E60               	movlw	low _ToMainLow_MQ
  2282  001348  0100               	movlb	0	; () banked
  2283  00134A  6FC8               	movwf	init_queue@qptr& (0+255),b
  2284  00134C  ECB0  F008         	call	_init_queue	;wreg free
  2285                           
  2286                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2287  001350  0101               	movlb	1	; () banked
  2288  001352  0E01               	movlw	high _ToMainHigh_MQ
  2289  001354  0100               	movlb	0	; () banked
  2290  001356  6FC9               	movwf	(init_queue@qptr+1)& (0+255),b
  2291  001358  0101               	movlb	1	; () banked
  2292  00135A  0E6C               	movlw	low _ToMainHigh_MQ
  2293  00135C  0100               	movlb	0	; () banked
  2294  00135E  6FC8               	movwf	init_queue@qptr& (0+255),b
  2295  001360  ECB0  F008         	call	_init_queue	;wreg free
  2296                           
  2297                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2298  001364  0101               	movlb	1	; () banked
  2299  001366  0E01               	movlw	high _FromMainLow_MQ
  2300  001368  0100               	movlb	0	; () banked
  2301  00136A  6FC9               	movwf	(init_queue@qptr+1)& (0+255),b
  2302  00136C  0101               	movlb	1	; () banked
  2303  00136E  0E36               	movlw	low _FromMainLow_MQ
  2304  001370  0100               	movlb	0	; () banked
  2305  001372  6FC8               	movwf	init_queue@qptr& (0+255),b
  2306  001374  ECB0  F008         	call	_init_queue	;wreg free
  2307                           
  2308                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2309  001378  0101               	movlb	1	; () banked
  2310  00137A  0E01               	movlw	high _FromMainHigh_MQ
  2311  00137C  0100               	movlb	0	; () banked
  2312  00137E  6FC9               	movwf	(init_queue@qptr+1)& (0+255),b
  2313  001380  0101               	movlb	1	; () banked
  2314  001382  0E00               	movlw	low _FromMainHigh_MQ
  2315  001384  0100               	movlb	0	; () banked
  2316  001386  6FC8               	movwf	init_queue@qptr& (0+255),b
  2317  001388  ECB0  F008         	call	_init_queue	;wreg free
  2318  00138C  0012               	return	
  2319  00138E                     __end_of_init_queues:
  2320                           	opt stack 0
  2321                           tblptru	equ	0xFF8
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           indf1	equ	0xFE7
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           postinc2	equ	0xFDE
  2331                           postdec2	equ	0xFDD
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _init_queue *****************
  2337 ;; Defined at:
  2338 ;;		line 14 in file "../src/messages.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  2341 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  i               1   52[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;Total ram usage:        3 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:   10
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_init_queues
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text11
  2368  001160                     __ptext11:
  2369                           	opt stack 0
  2370  001160                     _init_queue:
  2371                           	opt stack 19
  2372                           
  2373                           ;messages.c: 15: unsigned char i;
  2374                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2375                           
  2376                           ;incstack = 0
  2377  001160  0100               	movlb	0	; () banked
  2378  001162  EE20 F034          	lfsr	2,52
  2379  001166  0100               	movlb	0	; () banked
  2380  001168  51C8               	movf	init_queue@qptr& (0+255),w,b
  2381  00116A  26D9               	addwf	fsr2l,f,c
  2382  00116C  0100               	movlb	0	; () banked
  2383  00116E  51C9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2384  001170  22DA               	addwfc	fsr2h,f,c
  2385  001172  0E00               	movlw	0
  2386  001174  6EDF               	movwf	indf2,c
  2387                           
  2388                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2389  001176  0100               	movlb	0	; () banked
  2390  001178  EE20 F035          	lfsr	2,53
  2391  00117C  0100               	movlb	0	; () banked
  2392  00117E  51C8               	movf	init_queue@qptr& (0+255),w,b
  2393  001180  26D9               	addwf	fsr2l,f,c
  2394  001182  0100               	movlb	0	; () banked
  2395  001184  51C9               	movf	(init_queue@qptr+1)& (0+255),w,b
  2396  001186  22DA               	addwfc	fsr2h,f,c
  2397  001188  0E00               	movlw	0
  2398  00118A  6EDF               	movwf	indf2,c
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2402  00118C  0E00               	movlw	0
  2403  00118E  0100               	movlb	0	; () banked
  2404  001190  6FCA               	movwf	init_queue@i& (0+255),b
  2405                           
  2406                           ; BSR set to: 0
  2407  001192  0E03               	movlw	3
  2408  001194  0100               	movlb	0	; () banked
  2409  001196  65CA               	cpfsgt	init_queue@i& (0+255),b
  2410  001198  D001               	goto	l2786
  2411  00119A  0012               	return	
  2412  00119C                     l2786:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;messages.c: 20: qptr->queue[i].full = 0;
  2416  00119C  0100               	movlb	0	; () banked
  2417  00119E  51CA               	movf	init_queue@i& (0+255),w,b
  2418  0011A0  0D0D               	mullw	13
  2419  0011A2  50F3               	movf	prodl,w,c
  2420  0011A4  0100               	movlb	0	; () banked
  2421  0011A6  25C8               	addwf	init_queue@qptr& (0+255),w,b
  2422  0011A8  6ED9               	movwf	fsr2l,c
  2423  0011AA  50F4               	movf	prodh,w,c
  2424  0011AC  0100               	movlb	0	; () banked
  2425  0011AE  21C9               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2426  0011B0  6EDA               	movwf	fsr2h,c
  2427  0011B2  0E00               	movlw	0
  2428  0011B4  6EDF               	movwf	indf2,c
  2429                           
  2430                           ; BSR set to: 0
  2431  0011B6  0100               	movlb	0	; () banked
  2432  0011B8  2BCA               	incf	init_queue@i& (0+255),f,b
  2433                           
  2434                           ; BSR set to: 0
  2435  0011BA  0E03               	movlw	3
  2436  0011BC  0100               	movlb	0	; () banked
  2437  0011BE  65CA               	cpfsgt	init_queue@i& (0+255),b
  2438  0011C0  D7ED               	goto	l2786
  2439  0011C2  0012               	return	
  2440  0011C4                     __end_of_init_queue:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           indf1	equ	0xFE7
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           postinc2	equ	0xFDE
  2452                           postdec2	equ	0xFDD
  2453                           fsr2h	equ	0xFDA
  2454                           fsr2l	equ	0xFD9
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function _init_i2c *****************
  2458 ;; Defined at:
  2459 ;;		line 268 in file "../src/my_i2c.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  ic              2   50[BANK0 ] PTR struct __i2c_comm
  2462 ;;		 -> main@ic(28), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;		None               void
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;Total ram usage:        2 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:   10
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text12
  2489  0010FA                     __ptext12:
  2490                           	opt stack 0
  2491  0010FA                     _init_i2c:
  2492                           	opt stack 20
  2493                           
  2494                           ;my_i2c.c: 269: ic_ptr = ic;
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;incstack = 0
  2498  0010FA  0100               	movlb	0	; () banked
  2499  0010FC  C0C9  F0CD         	movff	init_i2c@ic+1,_ic_ptr+1
  2500  001100  0100               	movlb	0	; () banked
  2501  001102  C0C8  F0CC         	movff	init_i2c@ic,_ic_ptr
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  2505  001106  0100               	movlb	0	; () banked
  2506  001108  EE20 F00A          	lfsr	2,10
  2507  00110C  0100               	movlb	0	; () banked
  2508  00110E  51CC               	movf	_ic_ptr& (0+255),w,b
  2509  001110  26D9               	addwf	fsr2l,f,c
  2510  001112  0100               	movlb	0	; () banked
  2511  001114  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2512  001116  22DA               	addwfc	fsr2h,f,c
  2513  001118  0E00               	movlw	0
  2514  00111A  6EDF               	movwf	indf2,c
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  2518  00111C  0100               	movlb	0	; () banked
  2519  00111E  EE20 F00B          	lfsr	2,11
  2520  001122  0100               	movlb	0	; () banked
  2521  001124  51CC               	movf	_ic_ptr& (0+255),w,b
  2522  001126  26D9               	addwf	fsr2l,f,c
  2523  001128  0100               	movlb	0	; () banked
  2524  00112A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2525  00112C  22DA               	addwfc	fsr2h,f,c
  2526  00112E  0E00               	movlw	0
  2527  001130  6EDF               	movwf	indf2,c
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  2531  001132  0100               	movlb	0	; () banked
  2532  001134  EE20 F00C          	lfsr	2,12
  2533  001138  0100               	movlb	0	; () banked
  2534  00113A  51CC               	movf	_ic_ptr& (0+255),w,b
  2535  00113C  26D9               	addwf	fsr2l,f,c
  2536  00113E  0100               	movlb	0	; () banked
  2537  001140  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2538  001142  22DA               	addwfc	fsr2h,f,c
  2539  001144  0E05               	movlw	5
  2540  001146  6EDF               	movwf	indf2,c
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  2544  001148  0100               	movlb	0	; () banked
  2545  00114A  EE20 F00E          	lfsr	2,14
  2546  00114E  0100               	movlb	0	; () banked
  2547  001150  51CC               	movf	_ic_ptr& (0+255),w,b
  2548  001152  26D9               	addwf	fsr2l,f,c
  2549  001154  0100               	movlb	0	; () banked
  2550  001156  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2551  001158  22DA               	addwfc	fsr2h,f,c
  2552  00115A  0E00               	movlw	0
  2553  00115C  6EDF               	movwf	indf2,c
  2554                           
  2555                           ; BSR set to: 0
  2556  00115E  0012               	return	
  2557  001160                     __end_of_init_i2c:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           postinc0	equ	0xFEE
  2563                           wreg	equ	0xFE8
  2564                           indf1	equ	0xFE7
  2565                           fsr1h	equ	0xFE2
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           postdec2	equ	0xFDD
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function _i2c_configure_slave *****************
  2575 ;; Defined at:
  2576 ;;		line 279 in file "../src/my_i2c.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  addr            1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  addr            1   50[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;		None               void
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2594 ;;Total ram usage:        1 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:   10
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text13
  2605  00164E                     __ptext13:
  2606                           	opt stack 0
  2607  00164E                     _i2c_configure_slave:
  2608                           	opt stack 20
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;incstack = 0
  2612                           ;i2c_configure_slave@addr stored from wreg
  2613  00164E  0100               	movlb	0	; () banked
  2614  001650  6FC8               	movwf	i2c_configure_slave@addr& (0+255),b
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;my_i2c.c: 288: TRISBbits.TRISB4 = 1;
  2618  001652  8893               	bsf	3987,4,c	;volatile
  2619                           
  2620                           ;my_i2c.c: 289: TRISBbits.TRISB5 = 1;
  2621  001654  8A93               	bsf	3987,5,c	;volatile
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;my_i2c.c: 297: SSPADD = addr;
  2625  001656  C0C8  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  2629  00165A  0E00               	movlw	0
  2630  00165C  6EC7               	movwf	4039,c	;volatile
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  2634  00165E  0E00               	movlw	0
  2635  001660  6EC6               	movwf	4038,c	;volatile
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  2639  001662  0E00               	movlw	0
  2640  001664  6EC5               	movwf	4037,c	;volatile
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  2644  001666  0E0E               	movlw	14
  2645  001668  12C6               	iorwf	4038,f,c	;volatile
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  2649  00166A  8EC7               	bsf	4039,7,c	;volatile
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;my_i2c.c: 318: PORTBbits.SCL1 = 1;
  2653  00166C  8881               	bsf	3969,4,c	;volatile
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;my_i2c.c: 319: PORTBbits.SDA1 = 1;
  2657  00166E  8A81               	bsf	3969,5,c	;volatile
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  2661  001670  80C5               	bsf	4037,0,c	;volatile
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  2665  001672  8AC6               	bsf	4038,5,c	;volatile
  2666                           
  2667                           ; BSR set to: 0
  2668  001674  0012               	return	
  2669  001676                     __end_of_i2c_configure_slave:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           indf1	equ	0xFE7
  2677                           fsr1h	equ	0xFE2
  2678                           fsr1l	equ	0xFE1
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _enable_interrupts *****************
  2687 ;; Defined at:
  2688 ;;		line 14 in file "../src/interrupts.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;		None               void
  2695 ;; Registers used:
  2696 ;;		None
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:   10
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text14
  2717  00177A                     __ptext14:
  2718                           	opt stack 0
  2719  00177A                     _enable_interrupts:
  2720                           	opt stack 20
  2721                           
  2722                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;incstack = 0
  2726  00177A  8ED0               	bsf	4048,7,c	;volatile
  2727                           
  2728                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2729  00177C  8EF2               	bsf	intcon,7,c	;volatile
  2730                           
  2731                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2732  00177E  8CF2               	bsf	intcon,6,c	;volatile
  2733  001780  0012               	return	
  2734  001782                     __end_of_enable_interrupts:
  2735                           	opt stack 0
  2736                           tblptru	equ	0xFF8
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           intcon	equ	0xFF2
  2740                           postinc0	equ	0xFEE
  2741                           wreg	equ	0xFE8
  2742                           indf1	equ	0xFE7
  2743                           fsr1h	equ	0xFE2
  2744                           fsr1l	equ	0xFE1
  2745                           indf2	equ	0xFDF
  2746                           postinc2	equ	0xFDE
  2747                           postdec2	equ	0xFDD
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function _Write2USART *****************
  2753 ;; Defined at:
  2754 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u2write.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  data            1    wreg     unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  data            1   50[BANK0 ] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;Total ram usage:        1 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:   10
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text15
  2783  0016FC                     __ptext15:
  2784                           	opt stack 0
  2785  0016FC                     _Write2USART:
  2786                           	opt stack 20
  2787                           
  2788                           ;incstack = 0
  2789                           ;Write2USART@data stored from wreg
  2790  0016FC  0100               	movlb	0	; () banked
  2791  0016FE  6FC8               	movwf	Write2USART@data& (0+255),b
  2792                           
  2793                           ; BSR set to: 0
  2794  001700  ACA8               	btfss	4008,6,c	;volatile
  2795  001702  D003               	goto	l3166
  2796                           
  2797                           ; BSR set to: 0
  2798  001704  90A8               	bcf	4008,0,c	;volatile
  2799  001706  B230               	btfsc	_USART2_Status,1,c
  2800                           
  2801                           ; BSR set to: 0
  2802  001708  80A8               	bsf	4008,0,c	;volatile
  2803  00170A                     l3166:
  2804                           
  2805                           ; BSR set to: 0
  2806  00170A  C0C8  FFA9         	movff	Write2USART@data,4009	;volatile
  2807                           
  2808                           ; BSR set to: 0
  2809  00170E  0012               	return	
  2810  001710                     __end_of_Write2USART:
  2811                           	opt stack 0
  2812                           tblptru	equ	0xFF8
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           postinc0	equ	0xFEE
  2817                           wreg	equ	0xFE8
  2818                           indf1	equ	0xFE7
  2819                           fsr1h	equ	0xFE2
  2820                           fsr1l	equ	0xFE1
  2821                           indf2	equ	0xFDF
  2822                           postinc2	equ	0xFDE
  2823                           postdec2	equ	0xFDD
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function _ToMainLow_recvmsg *****************
  2829 ;; Defined at:
  2830 ;;		line 112 in file "../src/messages.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  maxlength       1    wreg     unsigned char 
  2833 ;;  msgtype         2   20[BANK1 ] PTR unsigned char 
  2834 ;;		 -> main@msgtype(1), 
  2835 ;;  data            2   22[BANK1 ] PTR void 
  2836 ;;		 -> main@msgbuffer(11), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  maxlength       1   24[BANK1 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      char 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2848 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;Total ram usage:        5 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:   12
  2855 ;; This function calls:
  2856 ;;		_recv_msg
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text16
  2863  001498                     __ptext16:
  2864                           	opt stack 0
  2865  001498                     _ToMainLow_recvmsg:
  2866                           	opt stack 18
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;incstack = 0
  2870                           ;ToMainLow_recvmsg@maxlength stored from wreg
  2871  001498  0101               	movlb	1	; () banked
  2872  00149A  6FBA               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  2873                           
  2874                           ; BSR set to: 1
  2875                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  2876  00149C  0100               	movlb	0	; () banked
  2877  00149E  0E00               	movlw	high _ToMainLow_MQ
  2878  0014A0  0101               	movlb	1	; () banked
  2879  0014A2  6FA9               	movwf	(recv_msg@qptr+1)& (0+255),b
  2880  0014A4  0100               	movlb	0	; () banked
  2881  0014A6  0E60               	movlw	low _ToMainLow_MQ
  2882  0014A8  0101               	movlb	1	; () banked
  2883  0014AA  6FA8               	movwf	recv_msg@qptr& (0+255),b
  2884  0014AC  C1BA  F1AA         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  2885  0014B0  0101               	movlb	1	; () banked
  2886  0014B2  C1B7  F1AC         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  2887  0014B6  0101               	movlb	1	; () banked
  2888  0014B8  C1B6  F1AB         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  2889  0014BC  0101               	movlb	1	; () banked
  2890  0014BE  C1B9  F1AE         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  2891  0014C2  0101               	movlb	1	; () banked
  2892  0014C4  C1B8  F1AD         	movff	ToMainLow_recvmsg@data,recv_msg@data
  2893  0014C8  EC3C  F004         	call	_recv_msg	;wreg free
  2894  0014CC  0012               	return	
  2895  0014CE                     __end_of_ToMainLow_recvmsg:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           intcon	equ	0xFF2
  2901                           postinc0	equ	0xFEE
  2902                           wreg	equ	0xFE8
  2903                           indf1	equ	0xFE7
  2904                           fsr1h	equ	0xFE2
  2905                           fsr1l	equ	0xFE1
  2906                           indf2	equ	0xFDF
  2907                           postinc2	equ	0xFDE
  2908                           postdec2	equ	0xFDD
  2909                           fsr2h	equ	0xFDA
  2910                           fsr2l	equ	0xFD9
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function _ToMainHigh_recvmsg *****************
  2914 ;; Defined at:
  2915 ;;		line 135 in file "../src/messages.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  maxlength       1    wreg     unsigned char 
  2918 ;;  msgtype         2   20[BANK1 ] PTR unsigned char 
  2919 ;;		 -> main@msgtype(1), 
  2920 ;;  data            2   22[BANK1 ] PTR void 
  2921 ;;		 -> main@msgbuffer(11), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  maxlength       1   24[BANK1 ] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      char 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2933 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;Total ram usage:        5 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:   12
  2940 ;; This function calls:
  2941 ;;		_recv_msg
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text17
  2948  0014CE                     __ptext17:
  2949                           	opt stack 0
  2950  0014CE                     _ToMainHigh_recvmsg:
  2951                           	opt stack 18
  2952                           
  2953                           ;incstack = 0
  2954                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  2955  0014CE  0101               	movlb	1	; () banked
  2956  0014D0  6FBA               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  2957                           
  2958                           ; BSR set to: 1
  2959                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2960  0014D2  0101               	movlb	1	; () banked
  2961  0014D4  0E01               	movlw	high _ToMainHigh_MQ
  2962  0014D6  0101               	movlb	1	; () banked
  2963  0014D8  6FA9               	movwf	(recv_msg@qptr+1)& (0+255),b
  2964  0014DA  0101               	movlb	1	; () banked
  2965  0014DC  0E6C               	movlw	low _ToMainHigh_MQ
  2966  0014DE  0101               	movlb	1	; () banked
  2967  0014E0  6FA8               	movwf	recv_msg@qptr& (0+255),b
  2968  0014E2  C1BA  F1AA         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  2969  0014E6  0101               	movlb	1	; () banked
  2970  0014E8  C1B7  F1AC         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  2971  0014EC  0101               	movlb	1	; () banked
  2972  0014EE  C1B6  F1AB         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  2973  0014F2  0101               	movlb	1	; () banked
  2974  0014F4  C1B9  F1AE         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  2975  0014F8  0101               	movlb	1	; () banked
  2976  0014FA  C1B8  F1AD         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  2977  0014FE  EC3C  F004         	call	_recv_msg	;wreg free
  2978  001502  0012               	return	
  2979  001504                     __end_of_ToMainHigh_recvmsg:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           indf1	equ	0xFE7
  2988                           fsr1h	equ	0xFE2
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           postinc2	equ	0xFDE
  2992                           postdec2	equ	0xFDD
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _recv_msg *****************
  2998 ;; Defined at:
  2999 ;;		line 63 in file "../src/messages.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  qptr            2    6[BANK1 ] PTR struct __msg_queue
  3002 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3003 ;;  maxlength       1    8[BANK1 ] unsigned char 
  3004 ;;  msgtype         2    9[BANK1 ] PTR unsigned char 
  3005 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3006 ;;  data            2   11[BANK1 ] PTR void 
  3007 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  qmsg            2   18[BANK1 ] PTR struct __msg
  3010 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3011 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3012 ;;  tlength         2   16[BANK1 ] unsigned int 
  3013 ;;  slot            1   15[BANK1 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      char 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3023 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3024 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3025 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3026 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;Total ram usage:       14 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:   11
  3030 ;; This function calls:
  3031 ;;		_memcpy
  3032 ;; This function is called by:
  3033 ;;		_ToMainLow_recvmsg
  3034 ;;		_ToMainHigh_recvmsg
  3035 ;;		_FromMainLow_recvmsg
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text18
  3040  000878                     __ptext18:
  3041                           	opt stack 0
  3042  000878                     _recv_msg:
  3043                           	opt stack 18
  3044                           
  3045                           ;messages.c: 64: unsigned char slot;
  3046                           ;messages.c: 68: msg *qmsg;
  3047                           ;messages.c: 69: size_t tlength;
  3048                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3049                           
  3050                           ;incstack = 0
  3051  000878  0101               	movlb	1	; () banked
  3052  00087A  EE20 F035          	lfsr	2,53
  3053  00087E  0101               	movlb	1	; () banked
  3054  000880  51A8               	movf	recv_msg@qptr& (0+255),w,b
  3055  000882  26D9               	addwf	fsr2l,f,c
  3056  000884  0101               	movlb	1	; () banked
  3057  000886  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3058  000888  22DA               	addwfc	fsr2h,f,c
  3059  00088A  50DF               	movf	indf2,w,c
  3060  00088C  0101               	movlb	1	; () banked
  3061  00088E  6FB1               	movwf	recv_msg@slot& (0+255),b
  3062                           
  3063                           ; BSR set to: 1
  3064                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3065  000890  0101               	movlb	1	; () banked
  3066  000892  51B1               	movf	recv_msg@slot& (0+255),w,b
  3067  000894  0D0D               	mullw	13
  3068  000896  50F3               	movf	prodl,w,c
  3069  000898  0101               	movlb	1	; () banked
  3070  00089A  25A8               	addwf	recv_msg@qptr& (0+255),w,b
  3071  00089C  0101               	movlb	1	; () banked
  3072  00089E  6FB4               	movwf	recv_msg@qmsg& (0+255),b
  3073  0008A0  50F4               	movf	prodh,w,c
  3074  0008A2  0101               	movlb	1	; () banked
  3075  0008A4  21A9               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3076  0008A6  0101               	movlb	1	; () banked
  3077  0008A8  6FB5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3078                           
  3079                           ; BSR set to: 1
  3080                           ;messages.c: 74: if (qmsg->full == 1) {
  3081  0008AA  0E01               	movlw	1
  3082  0008AC  C1B4  FFD9         	movff	recv_msg@qmsg,fsr2l
  3083  0008B0  C1B5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3084  0008B4  62DF               	cpfseq	indf2,c
  3085  0008B6  D06D               	goto	l2820
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3089  0008B8  0101               	movlb	1	; () banked
  3090  0008BA  EE20 F001          	lfsr	2,1
  3091  0008BE  0101               	movlb	1	; () banked
  3092  0008C0  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  3093  0008C2  26D9               	addwf	fsr2l,f,c
  3094  0008C4  0101               	movlb	1	; () banked
  3095  0008C6  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3096  0008C8  22DA               	addwfc	fsr2h,f,c
  3097  0008CA  50DF               	movf	indf2,w,c
  3098  0008CC  0101               	movlb	1	; () banked
  3099  0008CE  5DAA               	subwf	recv_msg@maxlength& (0+255),w,b
  3100  0008D0  B0D8               	btfsc	status,0,c
  3101  0008D2  D002               	goto	l2804
  3102                           
  3103                           ; BSR set to: 1
  3104                           ;messages.c: 77: return (-3);
  3105  0008D4  0EFD               	movlw	253
  3106  0008D6  0012               	return	
  3107  0008D8                     l2804:
  3108                           
  3109                           ; BSR set to: 1
  3110                           ;messages.c: 78: }
  3111                           ;messages.c: 80: tlength = qmsg->length;
  3112  0008D8  0101               	movlb	1	; () banked
  3113  0008DA  EE20 F001          	lfsr	2,1
  3114  0008DE  0101               	movlb	1	; () banked
  3115  0008E0  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  3116  0008E2  26D9               	addwf	fsr2l,f,c
  3117  0008E4  0101               	movlb	1	; () banked
  3118  0008E6  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3119  0008E8  22DA               	addwfc	fsr2h,f,c
  3120  0008EA  50DF               	movf	indf2,w,c
  3121  0008EC  0101               	movlb	1	; () banked
  3122  0008EE  6FAF               	movwf	??_recv_msg& (0+255),b
  3123  0008F0  0101               	movlb	1	; () banked
  3124  0008F2  51AF               	movf	??_recv_msg& (0+255),w,b
  3125  0008F4  0101               	movlb	1	; () banked
  3126  0008F6  6FB2               	movwf	recv_msg@tlength& (0+255),b
  3127  0008F8  0101               	movlb	1	; () banked
  3128  0008FA  6BB3               	clrf	(recv_msg@tlength+1)& (0+255),b
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3132  0008FC  0101               	movlb	1	; () banked
  3133  0008FE  C1AE  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  3134  000902  0101               	movlb	1	; () banked
  3135  000904  C1AD  F1A2         	movff	recv_msg@data,memcpy@d1
  3136  000908  0E03               	movlw	3
  3137  00090A  0101               	movlb	1	; () banked
  3138  00090C  25B4               	addwf	recv_msg@qmsg& (0+255),w,b
  3139  00090E  0101               	movlb	1	; () banked
  3140  000910  6FAF               	movwf	??_recv_msg& (0+255),b
  3141  000912  0E00               	movlw	0
  3142  000914  0101               	movlb	1	; () banked
  3143  000916  21B5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3144  000918  0101               	movlb	1	; () banked
  3145  00091A  6FB0               	movwf	(??_recv_msg+1)& (0+255),b
  3146  00091C  C1AF  F1A4         	movff	??_recv_msg,memcpy@s1
  3147  000920  C1B0  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  3148  000924  C1B2  F1A6         	movff	recv_msg@tlength,memcpy@n
  3149  000928  C1B3  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  3150  00092C  EC70  F009         	call	_memcpy	;wreg free
  3151                           
  3152                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3153  000930  0101               	movlb	1	; () banked
  3154  000932  EE20 F035          	lfsr	2,53
  3155  000936  0101               	movlb	1	; () banked
  3156  000938  51A8               	movf	recv_msg@qptr& (0+255),w,b
  3157  00093A  26D9               	addwf	fsr2l,f,c
  3158  00093C  0101               	movlb	1	; () banked
  3159  00093E  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3160  000940  22DA               	addwfc	fsr2h,f,c
  3161  000942  0101               	movlb	1	; () banked
  3162  000944  EE10 F035          	lfsr	1,53
  3163  000948  0101               	movlb	1	; () banked
  3164  00094A  51A8               	movf	recv_msg@qptr& (0+255),w,b
  3165  00094C  26E1               	addwf	fsr1l,f,c
  3166  00094E  0101               	movlb	1	; () banked
  3167  000950  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3168  000952  22E2               	addwfc	fsr1h,f,c
  3169  000954  50E7               	movf	indf1,w,c
  3170  000956  0101               	movlb	1	; () banked
  3171  000958  6FAF               	movwf	??_recv_msg& (0+255),b
  3172  00095A  0101               	movlb	1	; () banked
  3173  00095C  29AF               	incf	??_recv_msg& (0+255),w,b
  3174  00095E  0B03               	andlw	3
  3175  000960  6EDF               	movwf	indf2,c
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3179  000962  0101               	movlb	1	; () banked
  3180  000964  EE20 F002          	lfsr	2,2
  3181  000968  0101               	movlb	1	; () banked
  3182  00096A  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  3183  00096C  26D9               	addwf	fsr2l,f,c
  3184  00096E  0101               	movlb	1	; () banked
  3185  000970  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3186  000972  22DA               	addwfc	fsr2h,f,c
  3187  000974  C1AB  FFE1         	movff	recv_msg@msgtype,fsr1l
  3188  000978  C1AC  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3189  00097C  CFDF FFE7          	movff	indf2,indf1
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;messages.c: 91: qmsg->full = 0;
  3193  000980  C1B4  FFD9         	movff	recv_msg@qmsg,fsr2l
  3194  000984  C1B5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3195  000988  0E00               	movlw	0
  3196  00098A  6EDF               	movwf	indf2,c
  3197                           
  3198                           ; BSR set to: 1
  3199                           ;messages.c: 92: return (tlength);
  3200  00098C  0101               	movlb	1	; () banked
  3201  00098E  51B2               	movf	recv_msg@tlength& (0+255),w,b
  3202  000990  0012               	return	
  3203  000992                     l2820:
  3204                           
  3205                           ; BSR set to: 1
  3206                           ;messages.c: 94: return (-4);
  3207  000992  0EFC               	movlw	252
  3208  000994  0012               	return	
  3209  000996                     __end_of_recv_msg:
  3210                           	opt stack 0
  3211                           tblptru	equ	0xFF8
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon	equ	0xFF2
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           indf1	equ	0xFE7
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           indf2	equ	0xFDF
  3221                           postinc2	equ	0xFDE
  3222                           postdec2	equ	0xFDD
  3223                           fsr2h	equ	0xFDA
  3224                           fsr2l	equ	0xFD9
  3225                           status	equ	0xFD8
  3226                           
  3227 ;; *************** function _memcpy *****************
  3228 ;; Defined at:
  3229 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  d1              2    0[BANK1 ] PTR void 
  3232 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3233 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3234 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3235 ;;  s1              2    2[BANK1 ] PTR const void 
  3236 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3237 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3238 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3239 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3240 ;;		 -> main@ic(28), main@uc(5), 
  3241 ;;  n               2    4[BANK1 ] unsigned int 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  s               2   52[BANK0 ] PTR const unsigned char 
  3244 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3245 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3246 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3247 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3248 ;;		 -> main@ic(28), main@uc(5), 
  3249 ;;  d               2   50[BANK0 ] PTR unsigned char 
  3250 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3251 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3252 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    0[BANK1 ] PTR void 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3262 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;Total ram usage:       10 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:   10
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_send_msg
  3273 ;;		_recv_msg
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text19
  3278  0012E0                     __ptext19:
  3279                           	opt stack 0
  3280  0012E0                     _memcpy:
  3281                           	opt stack 17
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;incstack = 0
  3285  0012E0  0101               	movlb	1	; () banked
  3286  0012E2  0100               	movlb	0	; () banked
  3287  0012E4  C1A5  F0CB         	movff	memcpy@s1+1,memcpy@s+1
  3288  0012E8  0101               	movlb	1	; () banked
  3289  0012EA  0100               	movlb	0	; () banked
  3290  0012EC  C1A4  F0CA         	movff	memcpy@s1,memcpy@s
  3291  0012F0  0101               	movlb	1	; () banked
  3292  0012F2  0100               	movlb	0	; () banked
  3293  0012F4  C1A3  F0C9         	movff	memcpy@d1+1,memcpy@d+1
  3294  0012F8  0101               	movlb	1	; () banked
  3295  0012FA  0100               	movlb	0	; () banked
  3296  0012FC  C1A2  F0C8         	movff	memcpy@d1,memcpy@d
  3297  001300  D010               	goto	l2662
  3298  001302                     l2656:
  3299  001302  C0CA  FFD9         	movff	memcpy@s,fsr2l
  3300  001306  C0CB  FFDA         	movff	memcpy@s+1,fsr2h
  3301  00130A  C0C8  FFE1         	movff	memcpy@d,fsr1l
  3302  00130E  C0C9  FFE2         	movff	memcpy@d+1,fsr1h
  3303  001312  CFDF FFE7          	movff	indf2,indf1
  3304  001316  0100               	movlb	0	; () banked
  3305  001318  4BCA               	infsnz	memcpy@s& (0+255),f,b
  3306  00131A  2BCB               	incf	(memcpy@s+1)& (0+255),f,b
  3307                           
  3308                           ; BSR set to: 0
  3309  00131C  0100               	movlb	0	; () banked
  3310  00131E  4BC8               	infsnz	memcpy@d& (0+255),f,b
  3311  001320  2BC9               	incf	(memcpy@d+1)& (0+255),f,b
  3312  001322                     l2662:
  3313                           
  3314                           ; BSR set to: 0
  3315  001322  0101               	movlb	1	; () banked
  3316  001324  07A6               	decf	memcpy@n& (0+255),f,b
  3317  001326  A0D8               	btfss	status,0,c
  3318  001328  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  3319  00132A  0101               	movlb	1	; () banked
  3320  00132C  29A6               	incf	memcpy@n& (0+255),w,b
  3321  00132E  B4D8               	btfsc	status,2,c
  3322  001330  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  3323  001332  B4D8               	btfsc	status,2,c
  3324                           
  3325                           ; BSR set to: 1
  3326                           
  3327                           ; BSR set to: 1
  3328                           ;	Return value of _memcpy is never used
  3329  001334  0012               	return	
  3330  001336  D7E5               	goto	l2656
  3331  001338                     __end_of_memcpy:
  3332                           	opt stack 0
  3333                           tblptru	equ	0xFF8
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           fsr1h	equ	0xFE2
  3341                           fsr1l	equ	0xFE1
  3342                           indf2	equ	0xFDF
  3343                           postinc2	equ	0xFDE
  3344                           postdec2	equ	0xFDD
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function _OpenTimer1 *****************
  3350 ;; Defined at:
  3351 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1open.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  config          1    wreg     unsigned char 
  3354 ;;  config1         1   50[BANK0 ] unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  config          1   52[BANK0 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;		None               void
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;Total ram usage:        3 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:   10
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text20
  3381  00145C                     __ptext20:
  3382                           	opt stack 0
  3383  00145C                     _OpenTimer1:
  3384                           	opt stack 20
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;incstack = 0
  3388                           ;OpenTimer1@config stored from wreg
  3389  00145C  0100               	movlb	0	; () banked
  3390  00145E  6FCA               	movwf	OpenTimer1@config& (0+255),b
  3391                           
  3392                           ; BSR set to: 0
  3393  001460  0100               	movlb	0	; () banked
  3394  001462  51C8               	movf	OpenTimer1@config1& (0+255),w,b
  3395  001464  0BF3               	andlw	243
  3396  001466  6E9A               	movwf	3994,c	;volatile
  3397  001468  C0CA  F0C9         	movff	OpenTimer1@config,??_OpenTimer1
  3398  00146C  0E7F               	movlw	127
  3399  00146E  0100               	movlb	0	; () banked
  3400  001470  17C9               	andwf	??_OpenTimer1& (0+255),f,b
  3401  001472  0100               	movlb	0	; () banked
  3402  001474  90D8               	bcf	status,0,c
  3403  001476  35C9               	rlcf	??_OpenTimer1& (0+255),w,b
  3404  001478  6ECD               	movwf	4045,c	;volatile
  3405                           
  3406                           ; BSR set to: 0
  3407  00147A  0E00               	movlw	0
  3408  00147C  6ECF               	movwf	4047,c	;volatile
  3409                           
  3410                           ; BSR set to: 0
  3411  00147E  0E00               	movlw	0
  3412  001480  6ECE               	movwf	4046,c	;volatile
  3413                           
  3414                           ; BSR set to: 0
  3415  001482  909E               	bcf	3998,0,c	;volatile
  3416                           
  3417                           ; BSR set to: 0
  3418  001484  0100               	movlb	0	; () banked
  3419  001486  AFCA               	btfss	OpenTimer1@config& (0+255),7,b
  3420  001488  D002               	goto	l413
  3421                           
  3422                           ; BSR set to: 0
  3423  00148A  809D               	bsf	3997,0,c	;volatile
  3424  00148C  D001               	goto	l414
  3425  00148E                     l413:
  3426                           
  3427                           ; BSR set to: 0
  3428  00148E  909D               	bcf	3997,0,c	;volatile
  3429  001490                     l414:
  3430                           
  3431                           ; BSR set to: 0
  3432  001490  BE9A               	btfsc	3994,7,c	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435  001492  869A               	bsf	3994,3,c	;volatile
  3436                           
  3437                           ; BSR set to: 0
  3438  001494  80CD               	bsf	4045,0,c	;volatile
  3439                           
  3440                           ; BSR set to: 0
  3441  001496  0012               	return	
  3442  001498                     __end_of_OpenTimer1:
  3443                           	opt stack 0
  3444                           tblptru	equ	0xFF8
  3445                           prodh	equ	0xFF4
  3446                           prodl	equ	0xFF3
  3447                           intcon	equ	0xFF2
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           indf1	equ	0xFE7
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           postinc2	equ	0xFDE
  3455                           postdec2	equ	0xFDD
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _OpenTimer0 *****************
  3461 ;; Defined at:
  3462 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  config          1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  config          1   50[BANK0 ] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;		None               void
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:   10
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text21
  3491  001676                     __ptext21:
  3492                           	opt stack 0
  3493  001676                     _OpenTimer0:
  3494                           	opt stack 20
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;incstack = 0
  3498                           ;OpenTimer0@config stored from wreg
  3499  001676  0100               	movlb	0	; () banked
  3500  001678  6FC8               	movwf	OpenTimer0@config& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503  00167A  0100               	movlb	0	; () banked
  3504  00167C  51C8               	movf	OpenTimer0@config& (0+255),w,b
  3505  00167E  0B7F               	andlw	127
  3506  001680  6ED5               	movwf	4053,c	;volatile
  3507                           
  3508                           ; BSR set to: 0
  3509  001682  0E00               	movlw	0
  3510  001684  6ED7               	movwf	4055,c	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513  001686  0E00               	movlw	0
  3514  001688  6ED6               	movwf	4054,c	;volatile
  3515                           
  3516                           ; BSR set to: 0
  3517  00168A  94F2               	bcf	intcon,2,c	;volatile
  3518                           
  3519                           ; BSR set to: 0
  3520  00168C  0100               	movlb	0	; () banked
  3521  00168E  AFC8               	btfss	OpenTimer0@config& (0+255),7,b
  3522  001690  D002               	goto	l385
  3523                           
  3524                           ; BSR set to: 0
  3525  001692  8AF2               	bsf	intcon,5,c	;volatile
  3526  001694  D001               	goto	l386
  3527  001696                     l385:
  3528                           
  3529                           ; BSR set to: 0
  3530  001696  9AF2               	bcf	intcon,5,c	;volatile
  3531  001698                     l386:
  3532                           
  3533                           ; BSR set to: 0
  3534  001698  8ED5               	bsf	4053,7,c	;volatile
  3535                           
  3536                           ; BSR set to: 0
  3537  00169A  0012               	return	
  3538  00169C                     __end_of_OpenTimer0:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           postinc0	equ	0xFEE
  3545                           wreg	equ	0xFE8
  3546                           indf1	equ	0xFE7
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _Open2USART *****************
  3557 ;; Defined at:
  3558 ;;		line 118 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u2open.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  config          1    wreg     unsigned char 
  3561 ;;  spbrg           2   50[BANK0 ] unsigned int 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  config          1   52[BANK0 ] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;		None               void
  3566 ;; Registers used:
  3567 ;;		wreg, status,2
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3573 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3576 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;Total ram usage:        6 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:   10
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_main
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text22
  3588  001016                     __ptext22:
  3589                           	opt stack 0
  3590  001016                     _Open2USART:
  3591                           	opt stack 20
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;incstack = 0
  3595                           ;Open2USART@config stored from wreg
  3596  001016  0100               	movlb	0	; () banked
  3597  001018  6FCA               	movwf	Open2USART@config& (0+255),b
  3598                           
  3599                           ; BSR set to: 0
  3600  00101A  0E00               	movlw	0
  3601  00101C  6EA8               	movwf	4008,c	;volatile
  3602  00101E  0E00               	movlw	0
  3603  001020  6E9C               	movwf	3996,c	;volatile
  3604                           
  3605                           ; BSR set to: 0
  3606  001022  0100               	movlb	0	; () banked
  3607  001024  B1CA               	btfsc	Open2USART@config& (0+255),0,b
  3608                           
  3609                           ; BSR set to: 0
  3610  001026  88A8               	bsf	4008,4,c	;volatile
  3611                           
  3612                           ; BSR set to: 0
  3613                           
  3614                           ; BSR set to: 0
  3615  001028  0100               	movlb	0	; () banked
  3616  00102A  A3CA               	btfss	Open2USART@config& (0+255),1,b
  3617  00102C  D002               	goto	l3130
  3618                           
  3619                           ; BSR set to: 0
  3620  00102E  8CA8               	bsf	4008,6,c	;volatile
  3621  001030  8C9C               	bsf	3996,6,c	;volatile
  3622  001032                     l3130:
  3623                           
  3624                           ; BSR set to: 0
  3625  001032  0100               	movlb	0	; () banked
  3626  001034  B5CA               	btfsc	Open2USART@config& (0+255),2,b
  3627                           
  3628                           ; BSR set to: 0
  3629  001036  8EA8               	bsf	4008,7,c	;volatile
  3630                           
  3631                           ; BSR set to: 0
  3632                           
  3633                           ; BSR set to: 0
  3634  001038  0100               	movlb	0	; () banked
  3635  00103A  A7CA               	btfss	Open2USART@config& (0+255),3,b
  3636  00103C  D002               	goto	l465
  3637                           
  3638                           ; BSR set to: 0
  3639  00103E  889C               	bsf	3996,4,c	;volatile
  3640  001040  D001               	goto	l3138
  3641  001042                     l465:
  3642                           
  3643                           ; BSR set to: 0
  3644  001042  8A9C               	bsf	3996,5,c	;volatile
  3645  001044                     l3138:
  3646                           
  3647                           ; BSR set to: 0
  3648  001044  0100               	movlb	0	; () banked
  3649  001046  A9CA               	btfss	Open2USART@config& (0+255),4,b
  3650  001048  D002               	goto	l467
  3651                           
  3652                           ; BSR set to: 0
  3653  00104A  84A8               	bsf	4008,2,c	;volatile
  3654  00104C  D001               	goto	l3142
  3655  00104E                     l467:
  3656                           
  3657                           ; BSR set to: 0
  3658  00104E  94A8               	bcf	4008,2,c	;volatile
  3659  001050                     l3142:
  3660                           
  3661                           ; BSR set to: 0
  3662  001050  0100               	movlb	0	; () banked
  3663  001052  BBCA               	btfsc	Open2USART@config& (0+255),5,b
  3664                           
  3665                           ; BSR set to: 0
  3666  001054  869C               	bsf	3996,3,c	;volatile
  3667                           
  3668                           ; BSR set to: 0
  3669                           
  3670                           ; BSR set to: 0
  3671  001056  0100               	movlb	0	; () banked
  3672  001058  ADCA               	btfss	Open2USART@config& (0+255),6,b
  3673  00105A  D002               	goto	l470
  3674                           
  3675                           ; BSR set to: 0
  3676  00105C  8AA3               	bsf	4003,5,c	;volatile
  3677  00105E  D001               	goto	l3150
  3678  001060                     l470:
  3679                           
  3680                           ; BSR set to: 0
  3681  001060  9AA3               	bcf	4003,5,c	;volatile
  3682  001062                     l3150:
  3683                           
  3684                           ; BSR set to: 0
  3685  001062  0100               	movlb	0	; () banked
  3686  001064  AFCA               	btfss	Open2USART@config& (0+255),7,b
  3687  001066  D002               	goto	l472
  3688                           
  3689                           ; BSR set to: 0
  3690  001068  88A3               	bsf	4003,4,c	;volatile
  3691  00106A  D001               	goto	l473
  3692  00106C                     l472:
  3693                           
  3694                           ; BSR set to: 0
  3695  00106C  98A3               	bcf	4003,4,c	;volatile
  3696  00106E                     l473:
  3697                           
  3698                           ; BSR set to: 0
  3699  00106E  C0C8  FFAB         	movff	Open2USART@spbrg,4011	;volatile
  3700                           
  3701                           ; BSR set to: 0
  3702  001072  0100               	movlb	0	; () banked
  3703  001074  C0C9  F1A2         	movff	Open2USART@spbrg+1,??_Open2USART
  3704  001078  C1A2  F1A3         	movff	??_Open2USART,??_Open2USART+1
  3705  00107C  0101               	movlb	1	; () banked
  3706  00107E  6BA4               	clrf	(??_Open2USART+2)& (0+255),b
  3707  001080  0101               	movlb	1	; () banked
  3708  001082  51A3               	movf	(??_Open2USART+1)& (0+255),w,b
  3709  001084  6E7D               	movwf	3965,c	;volatile
  3710                           
  3711                           ; BSR set to: 1
  3712  001086  8AA8               	bsf	4008,5,c	;volatile
  3713                           
  3714                           ; BSR set to: 1
  3715  001088  8E9C               	bsf	3996,7,c	;volatile
  3716                           
  3717                           ; BSR set to: 1
  3718  00108A  0012               	return	
  3719  00108C                     __end_of_Open2USART:
  3720                           	opt stack 0
  3721                           tblptru	equ	0xFF8
  3722                           prodh	equ	0xFF4
  3723                           prodl	equ	0xFF3
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           indf1	equ	0xFE7
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           indf2	equ	0xFDF
  3731                           postinc2	equ	0xFDE
  3732                           postdec2	equ	0xFDD
  3733                           fsr2h	equ	0xFDA
  3734                           fsr2l	equ	0xFD9
  3735                           status	equ	0xFD8
  3736                           
  3737 ;; *************** function _InterruptHandlerLow *****************
  3738 ;; Defined at:
  3739 ;;		line 122 in file "../src/interrupts.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;		None               void
  3746 ;; Registers used:
  3747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;Total ram usage:       17 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    9
  3760 ;; This function calls:
  3761 ;;		_timer1_int_handler
  3762 ;;		_uart_recv_int_handler
  3763 ;; This function is called by:
  3764 ;;		Interrupt level 1
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	intcodelo
  3769  000018                     __pintcodelo:
  3770                           	opt stack 0
  3771  000018                     _InterruptHandlerLow:
  3772                           	opt stack 17
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;incstack = 0
  3776  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  3777  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  3778  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  3779  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  3780  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  3781  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  3782  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  3783  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  3784  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  3785  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  3786  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  3787  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  3788  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  3789  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  3790  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  3791  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  3792  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  3793                           
  3794                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  3795  00005C  A09E               	btfss	3998,0,c	;volatile
  3796  00005E  D003               	goto	i1l2540
  3797                           
  3798                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  3799  000060  909E               	bcf	3998,0,c	;volatile
  3800                           
  3801                           ;interrupts.c: 126: timer1_int_handler();
  3802  000062  ECFD  F00A         	call	_timer1_int_handler	;wreg free
  3803  000066                     i1l2540:
  3804                           
  3805                           ;interrupts.c: 127: }
  3806                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  3807  000066  AA9E               	btfss	3998,5,c	;volatile
  3808  000068  D003               	goto	i1l47
  3809                           
  3810                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  3811  00006A  9A9E               	bcf	3998,5,c	;volatile
  3812                           
  3813                           ;interrupts.c: 132: uart_recv_int_handler();
  3814  00006C  EC82  F007         	call	_uart_recv_int_handler	;wreg free
  3815  000070                     i1l47:
  3816  000070  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  3817  000074  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  3818  000078  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  3819  00007C  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  3820  000080  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  3821  000084  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  3822  000088  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  3823  00008C  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  3824  000090  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  3825  000094  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  3826  000098  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  3827  00009C  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  3828  0000A0  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  3829  0000A4  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  3830  0000A8  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  3831  0000AC  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3832  0000B0  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  3833  0000B4  0010               	retfie	
  3834  0000B6                     __end_of_InterruptHandlerLow:
  3835                           	opt stack 0
  3836                           pclatu	equ	0xFFB
  3837                           pclath	equ	0xFFA
  3838                           tblptru	equ	0xFF8
  3839                           tblptrh	equ	0xFF7
  3840                           tblptrl	equ	0xFF6
  3841                           tablat	equ	0xFF5
  3842                           prodh	equ	0xFF4
  3843                           prodl	equ	0xFF3
  3844                           intcon	equ	0xFF2
  3845                           postinc0	equ	0xFEE
  3846                           fsr0h	equ	0xFEA
  3847                           fsr0l	equ	0xFE9
  3848                           wreg	equ	0xFE8
  3849                           indf1	equ	0xFE7
  3850                           fsr1h	equ	0xFE2
  3851                           fsr1l	equ	0xFE1
  3852                           bsr	equ	0xFE0
  3853                           indf2	equ	0xFDF
  3854                           postinc2	equ	0xFDE
  3855                           postdec2	equ	0xFDD
  3856                           fsr2h	equ	0xFDA
  3857                           fsr2l	equ	0xFD9
  3858                           status	equ	0xFD8
  3859                           
  3860 ;; *************** function _uart_recv_int_handler *****************
  3861 ;; Defined at:
  3862 ;;		line 11 in file "../src/my_uart.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;		None               void
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;Total ram usage:        1 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    8
  3883 ;; This function calls:
  3884 ;;		_Read1USART
  3885 ;;		_ToMainLow_sendmsg
  3886 ;; This function is called by:
  3887 ;;		_InterruptHandlerLow
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text24
  3892  000F04                     __ptext24:
  3893                           	opt stack 0
  3894  000F04                     _uart_recv_int_handler:
  3895                           	opt stack 17
  3896                           
  3897                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  3898                           
  3899                           ;incstack = 0
  3900  000F04  AA9E               	btfss	3998,5,c	;volatile
  3901  000F06  D03A               	goto	i1l2354
  3902                           
  3903                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  3904  000F08  EE20 F004          	lfsr	2,4
  3905  000F0C  5031               	movf	_uc_ptr,w,c
  3906  000F0E  26D9               	addwf	fsr2l,f,c
  3907  000F10  5032               	movf	_uc_ptr+1,w,c
  3908  000F12  22DA               	addwfc	fsr2h,f,c
  3909  000F14  50DF               	movf	indf2,w,c
  3910  000F16  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3911  000F18  501B               	movf	??_uart_recv_int_handler,w,c
  3912  000F1A  0D01               	mullw	1
  3913  000F1C  50F3               	movf	prodl,w,c
  3914  000F1E  2431               	addwf	_uc_ptr,w,c
  3915  000F20  6ED9               	movwf	fsr2l,c
  3916  000F22  50F4               	movf	prodh,w,c
  3917  000F24  2032               	addwfc	_uc_ptr+1,w,c
  3918  000F26  6EDA               	movwf	fsr2h,c
  3919  000F28  EC6F  F00B         	call	_Read1USART	;wreg free
  3920  000F2C  6EDF               	movwf	indf2,c
  3921                           
  3922                           ;my_uart.c: 25: uc_ptr->buflen++;
  3923  000F2E  EE20 F004          	lfsr	2,4
  3924  000F32  5031               	movf	_uc_ptr,w,c
  3925  000F34  26D9               	addwf	fsr2l,f,c
  3926  000F36  5032               	movf	_uc_ptr+1,w,c
  3927  000F38  22DA               	addwfc	fsr2h,f,c
  3928  000F3A  2ADF               	incf	indf2,f,c
  3929                           
  3930                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  3931  000F3C  EE20 F004          	lfsr	2,4
  3932  000F40  5031               	movf	_uc_ptr,w,c
  3933  000F42  26D9               	addwf	fsr2l,f,c
  3934  000F44  5032               	movf	_uc_ptr+1,w,c
  3935  000F46  22DA               	addwfc	fsr2h,f,c
  3936  000F48  0E04               	movlw	4
  3937  000F4A  62DF               	cpfseq	indf2,c
  3938  000F4C  D017               	goto	i1l2354
  3939                           
  3940                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  3941  000F4E  0E1F               	movlw	31
  3942  000F50  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3943  000F52  C032  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  3944  000F56  C031  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  3945  000F5A  EE20 F004          	lfsr	2,4
  3946  000F5E  5031               	movf	_uc_ptr,w,c
  3947  000F60  26D9               	addwf	fsr2l,f,c
  3948  000F62  5032               	movf	_uc_ptr+1,w,c
  3949  000F64  22DA               	addwfc	fsr2h,f,c
  3950  000F66  50DF               	movf	indf2,w,c
  3951  000F68  EC4E  F00B         	call	_ToMainLow_sendmsg
  3952                           
  3953                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  3954  000F6C  EE20 F004          	lfsr	2,4
  3955  000F70  5031               	movf	_uc_ptr,w,c
  3956  000F72  26D9               	addwf	fsr2l,f,c
  3957  000F74  5032               	movf	_uc_ptr+1,w,c
  3958  000F76  22DA               	addwfc	fsr2h,f,c
  3959  000F78  0E00               	movlw	0
  3960  000F7A  6EDF               	movwf	indf2,c
  3961  000F7C                     i1l2354:
  3962                           
  3963                           ;my_uart.c: 30: }
  3964                           ;my_uart.c: 31: }
  3965                           ;my_uart.c: 36: if (USART1_Status.OVERRUN_ERROR == 1) {
  3966  000F7C  A62F               	btfss	_USART1_Status,3,c
  3967  000F7E  0012               	return	
  3968                           
  3969                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  3970  000F80  98AC               	bcf	4012,4,c	;volatile
  3971                           
  3972                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  3973  000F82  88AC               	bsf	4012,4,c	;volatile
  3974                           
  3975                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  3976  000F84  0E1E               	movlw	30
  3977  000F86  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3978  000F88  0E00               	movlw	0
  3979  000F8A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  3980  000F8C  0E00               	movlw	0
  3981  000F8E  6E18               	movwf	ToMainLow_sendmsg@data,c
  3982  000F90  0E00               	movlw	0
  3983  000F92  EC4E  F00B         	call	_ToMainLow_sendmsg
  3984  000F96  0012               	return	
  3985  000F98                     __end_of_uart_recv_int_handler:
  3986                           	opt stack 0
  3987                           pclatu	equ	0xFFB
  3988                           pclath	equ	0xFFA
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           postinc0	equ	0xFEE
  3997                           fsr0h	equ	0xFEA
  3998                           fsr0l	equ	0xFE9
  3999                           wreg	equ	0xFE8
  4000                           indf1	equ	0xFE7
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           bsr	equ	0xFE0
  4004                           indf2	equ	0xFDF
  4005                           postinc2	equ	0xFDE
  4006                           postdec2	equ	0xFDD
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _Read1USART *****************
  4012 ;; Defined at:
  4013 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1read.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  data            1    0[COMRAM] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      unsigned char 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4031 ;;Total ram usage:        1 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    5
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_uart_recv_int_handler
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text25
  4042  0016DE                     __ptext25:
  4043                           	opt stack 0
  4044  0016DE                     _Read1USART:
  4045                           	opt stack 19
  4046                           
  4047                           ;incstack = 0
  4048  0016DE  0EF2               	movlw	242
  4049  0016E0  162F               	andwf	_USART1_Status,f,c
  4050  0016E2  ACAC               	btfss	4012,6,c	;volatile
  4051  0016E4  D003               	goto	i1l441
  4052  0016E6  902F               	bcf	_USART1_Status,0,c
  4053  0016E8  B0AC               	btfsc	4012,0,c	;volatile
  4054  0016EA  802F               	bsf	_USART1_Status,0,c
  4055  0016EC                     i1l441:
  4056  0016EC  B4AC               	btfsc	4012,2,c	;volatile
  4057  0016EE  842F               	bsf	_USART1_Status,2,c
  4058  0016F0  B2AC               	btfsc	4012,1,c	;volatile
  4059  0016F2  862F               	bsf	_USART1_Status,3,c
  4060  0016F4  CFAF F001          	movff	4015,Read1USART@data	;volatile
  4061  0016F8  5001               	movf	Read1USART@data,w,c
  4062  0016FA  0012               	return	
  4063  0016FC                     __end_of_Read1USART:
  4064                           	opt stack 0
  4065                           pclatu	equ	0xFFB
  4066                           pclath	equ	0xFFA
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           postinc0	equ	0xFEE
  4075                           fsr0h	equ	0xFEA
  4076                           fsr0l	equ	0xFE9
  4077                           wreg	equ	0xFE8
  4078                           indf1	equ	0xFE7
  4079                           fsr1h	equ	0xFE2
  4080                           fsr1l	equ	0xFE1
  4081                           bsr	equ	0xFE0
  4082                           indf2	equ	0xFDF
  4083                           postinc2	equ	0xFDE
  4084                           postdec2	equ	0xFDD
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _timer1_int_handler *****************
  4090 ;; Defined at:
  4091 ;;		line 36 in file "../src/user_interrupts.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  result          2   26[COMRAM] unsigned int 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;Total ram usage:        2 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    8
  4112 ;; This function calls:
  4113 ;;		_ReadTimer1
  4114 ;;		_ToMainLow_sendmsg
  4115 ;;		_WriteTimer1
  4116 ;; This function is called by:
  4117 ;;		_InterruptHandlerLow
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text26
  4122  0015FA                     __ptext26:
  4123                           	opt stack 0
  4124  0015FA                     _timer1_int_handler:
  4125                           	opt stack 17
  4126                           
  4127                           ;user_interrupts.c: 37: unsigned int result;
  4128                           ;user_interrupts.c: 44: result = ReadTimer1();
  4129                           
  4130                           ;incstack = 0
  4131  0015FA  ECA3  F00B         	call	_ReadTimer1	;wreg free
  4132  0015FE  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  4133  001602  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4134                           
  4135                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  4136  001606  0E0B               	movlw	11
  4137  001608  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4138  00160A  0E00               	movlw	0
  4139  00160C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4140  00160E  0E00               	movlw	0
  4141  001610  6E18               	movwf	ToMainLow_sendmsg@data,c
  4142  001612  0E00               	movlw	0
  4143  001614  EC4E  F00B         	call	_ToMainLow_sendmsg
  4144                           
  4145                           ;user_interrupts.c: 48: WriteTimer1(0);
  4146  001618  0E00               	movlw	0
  4147  00161A  6E02               	movwf	WriteTimer1@timer1+1,c
  4148  00161C  0E00               	movlw	0
  4149  00161E  6E01               	movwf	WriteTimer1@timer1,c
  4150  001620  EC9A  F00B         	call	_WriteTimer1	;wreg free
  4151  001624  0012               	return	
  4152  001626                     __end_of_timer1_int_handler:
  4153                           	opt stack 0
  4154                           pclatu	equ	0xFFB
  4155                           pclath	equ	0xFFA
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           intcon	equ	0xFF2
  4163                           postinc0	equ	0xFEE
  4164                           fsr0h	equ	0xFEA
  4165                           fsr0l	equ	0xFE9
  4166                           wreg	equ	0xFE8
  4167                           indf1	equ	0xFE7
  4168                           fsr1h	equ	0xFE2
  4169                           fsr1l	equ	0xFE1
  4170                           bsr	equ	0xFE0
  4171                           indf2	equ	0xFDF
  4172                           postinc2	equ	0xFDE
  4173                           postdec2	equ	0xFDD
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function _WriteTimer1 *****************
  4179 ;; Defined at:
  4180 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1write.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  timer1          2    0[COMRAM] unsigned int 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  timer           2    2[COMRAM] struct Timers
  4185 ;; Return value:  Size  Location     Type
  4186 ;;		None               void
  4187 ;; Registers used:
  4188 ;;		None
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;Total ram usage:        4 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    5
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_timer1_int_handler
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text27
  4209  001734                     __ptext27:
  4210                           	opt stack 0
  4211  001734                     _WriteTimer1:
  4212                           	opt stack 19
  4213                           
  4214                           ;incstack = 0
  4215  001734  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4216  001738  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4217  00173C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4218  001740  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4219  001744  0012               	return	
  4220  001746                     __end_of_WriteTimer1:
  4221                           	opt stack 0
  4222                           pclatu	equ	0xFFB
  4223                           pclath	equ	0xFFA
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           prodh	equ	0xFF4
  4229                           prodl	equ	0xFF3
  4230                           intcon	equ	0xFF2
  4231                           postinc0	equ	0xFEE
  4232                           fsr0h	equ	0xFEA
  4233                           fsr0l	equ	0xFE9
  4234                           wreg	equ	0xFE8
  4235                           indf1	equ	0xFE7
  4236                           fsr1h	equ	0xFE2
  4237                           fsr1l	equ	0xFE1
  4238                           bsr	equ	0xFE0
  4239                           indf2	equ	0xFDF
  4240                           postinc2	equ	0xFDE
  4241                           postdec2	equ	0xFDD
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _ToMainLow_sendmsg *****************
  4247 ;; Defined at:
  4248 ;;		line 103 in file "../src/messages.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  length          1    wreg     unsigned char 
  4251 ;;  msgtype         1   22[COMRAM] unsigned char 
  4252 ;;  data            2   23[COMRAM] PTR void 
  4253 ;;		 -> NULL(0), main@uc(5), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  length          1   25[COMRAM] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      char 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4265 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;Total ram usage:        4 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    7
  4272 ;; This function calls:
  4273 ;;		i1_send_msg
  4274 ;; This function is called by:
  4275 ;;		_uart_recv_int_handler
  4276 ;;		_timer1_int_handler
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text28
  4281  00169C                     __ptext28:
  4282                           	opt stack 0
  4283  00169C                     _ToMainLow_sendmsg:
  4284                           	opt stack 17
  4285                           
  4286                           ;incstack = 0
  4287                           ;ToMainLow_sendmsg@length stored from wreg
  4288  00169C  6E1A               	movwf	ToMainLow_sendmsg@length,c
  4289                           
  4290                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4291                           ;	Return value of _ToMainLow_sendmsg is never used
  4292  00169E  0100               	movlb	0	; () banked
  4293  0016A0  0E00               	movlw	high _ToMainLow_MQ
  4294  0016A2  6E0C               	movwf	i1send_msg@qptr+1,c
  4295  0016A4  0100               	movlb	0	; () banked
  4296  0016A6  0E60               	movlw	low _ToMainLow_MQ
  4297  0016A8  6E0B               	movwf	i1send_msg@qptr,c
  4298  0016AA  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4299  0016AE  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4300  0016B2  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  4301  0016B6  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4302  0016BA  EC2D  F007         	call	i1_send_msg	;wreg free
  4303  0016BE  0012               	return	
  4304  0016C0                     __end_of_ToMainLow_sendmsg:
  4305                           	opt stack 0
  4306                           pclatu	equ	0xFFB
  4307                           pclath	equ	0xFFA
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           intcon	equ	0xFF2
  4315                           postinc0	equ	0xFEE
  4316                           fsr0h	equ	0xFEA
  4317                           fsr0l	equ	0xFE9
  4318                           wreg	equ	0xFE8
  4319                           indf1	equ	0xFE7
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           bsr	equ	0xFE0
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function i1_send_msg *****************
  4331 ;; Defined at:
  4332 ;;		line 24 in file "../src/messages.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4335 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4336 ;;  length          1   12[COMRAM] unsigned char 
  4337 ;;  msgtype         1   13[COMRAM] unsigned char 
  4338 ;;  data            2   14[COMRAM] PTR void 
  4339 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  4340 ;;		 -> main@ic(28), main@uc(5), 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4343 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4344 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4345 ;;  send_msg        2   17[COMRAM] unsigned int 
  4346 ;;  send_msg        1   19[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      char 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4356 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;Total ram usage:       12 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    6
  4363 ;; This function calls:
  4364 ;;		i1_memcpy
  4365 ;; This function is called by:
  4366 ;;		_ToMainLow_sendmsg
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text29
  4371  000E5A                     __ptext29:
  4372                           	opt stack 0
  4373  000E5A                     i1_send_msg:
  4374                           	opt stack 17
  4375                           
  4376                           ;messages.c: 25: unsigned char slot;
  4377                           ;messages.c: 27: msg *qmsg;
  4378                           ;messages.c: 28: size_t tlength = length;
  4379                           
  4380                           ;incstack = 0
  4381  000E5A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4382  000E5E  6A13               	clrf	i1send_msg@tlength+1,c
  4383                           
  4384                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4385  000E60  EE20 F034          	lfsr	2,52
  4386  000E64  500B               	movf	i1send_msg@qptr,w,c
  4387  000E66  26D9               	addwf	fsr2l,f,c
  4388  000E68  500C               	movf	i1send_msg@qptr+1,w,c
  4389  000E6A  22DA               	addwfc	fsr2h,f,c
  4390  000E6C  50DF               	movf	indf2,w,c
  4391  000E6E  6E14               	movwf	i1send_msg@slot,c
  4392                           
  4393                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4394  000E70  5014               	movf	i1send_msg@slot,w,c
  4395  000E72  0D0D               	mullw	13
  4396  000E74  50F3               	movf	prodl,w,c
  4397  000E76  240B               	addwf	i1send_msg@qptr,w,c
  4398  000E78  6E15               	movwf	i1send_msg@qmsg,c
  4399  000E7A  50F4               	movf	prodh,w,c
  4400  000E7C  200C               	addwfc	i1send_msg@qptr+1,w,c
  4401  000E7E  6E16               	movwf	i1send_msg@qmsg+1,c
  4402                           
  4403                           ;messages.c: 41: if (qmsg->full != 0) {
  4404  000E80  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4405  000E84  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4406  000E88  50DF               	movf	indf2,w,c
  4407  000E8A  B4D8               	btfsc	status,2,c
  4408  000E8C  D002               	goto	i1l1944
  4409                           
  4410                           ;messages.c: 42: return (-1);
  4411  000E8E  0EFF               	movlw	255
  4412  000E90  0012               	return	
  4413  000E92                     i1l1944:
  4414                           
  4415                           ;messages.c: 43: }
  4416                           ;messages.c: 46: qmsg->length = length;
  4417  000E92  EE20 F001          	lfsr	2,1
  4418  000E96  5015               	movf	i1send_msg@qmsg,w,c
  4419  000E98  26D9               	addwf	fsr2l,f,c
  4420  000E9A  5016               	movf	i1send_msg@qmsg+1,w,c
  4421  000E9C  22DA               	addwfc	fsr2h,f,c
  4422  000E9E  C00D  FFDF         	movff	i1send_msg@length,indf2
  4423                           
  4424                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4425  000EA2  EE20 F002          	lfsr	2,2
  4426  000EA6  5015               	movf	i1send_msg@qmsg,w,c
  4427  000EA8  26D9               	addwf	fsr2l,f,c
  4428  000EAA  5016               	movf	i1send_msg@qmsg+1,w,c
  4429  000EAC  22DA               	addwfc	fsr2h,f,c
  4430  000EAE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4431                           
  4432                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4433  000EB2  0E03               	movlw	3
  4434  000EB4  2415               	addwf	i1send_msg@qmsg,w,c
  4435  000EB6  6E01               	movwf	i1memcpy@d1,c
  4436  000EB8  0E00               	movlw	0
  4437  000EBA  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4438  000EBC  6E02               	movwf	i1memcpy@d1+1,c
  4439  000EBE  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  4440  000EC2  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  4441  000EC6  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  4442  000ECA  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  4443  000ECE  ECEF  F009         	call	i1_memcpy	;wreg free
  4444                           
  4445                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4446  000ED2  EE20 F034          	lfsr	2,52
  4447  000ED6  500B               	movf	i1send_msg@qptr,w,c
  4448  000ED8  26D9               	addwf	fsr2l,f,c
  4449  000EDA  500C               	movf	i1send_msg@qptr+1,w,c
  4450  000EDC  22DA               	addwfc	fsr2h,f,c
  4451  000EDE  EE10 F034          	lfsr	1,52
  4452  000EE2  500B               	movf	i1send_msg@qptr,w,c
  4453  000EE4  26E1               	addwf	fsr1l,f,c
  4454  000EE6  500C               	movf	i1send_msg@qptr+1,w,c
  4455  000EE8  22E2               	addwfc	fsr1h,f,c
  4456  000EEA  50E7               	movf	indf1,w,c
  4457  000EEC  6E11               	movwf	??i1_send_msg& (0+255),c
  4458  000EEE  2811               	incf	??i1_send_msg,w,c
  4459  000EF0  0B03               	andlw	3
  4460  000EF2  6EDF               	movwf	indf2,c
  4461                           
  4462                           ;messages.c: 59: qmsg->full = 1;
  4463  000EF4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4464  000EF8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4465  000EFC  0E01               	movlw	1
  4466  000EFE  6EDF               	movwf	indf2,c
  4467                           
  4468                           ;messages.c: 60: return (1);
  4469  000F00  0E01               	movlw	1
  4470  000F02  0012               	return	
  4471  000F04                     __end_ofi1_send_msg:
  4472                           	opt stack 0
  4473                           pclatu	equ	0xFFB
  4474                           pclath	equ	0xFFA
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           prodh	equ	0xFF4
  4480                           prodl	equ	0xFF3
  4481                           intcon	equ	0xFF2
  4482                           postinc0	equ	0xFEE
  4483                           fsr0h	equ	0xFEA
  4484                           fsr0l	equ	0xFE9
  4485                           wreg	equ	0xFE8
  4486                           indf1	equ	0xFE7
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           bsr	equ	0xFE0
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function i1_memcpy *****************
  4498 ;; Defined at:
  4499 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  d1              2    0[COMRAM] PTR void 
  4502 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4503 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4504 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4505 ;;  s1              2    2[COMRAM] PTR const void 
  4506 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4507 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4508 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4509 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4510 ;;		 -> main@ic(28), main@uc(5), 
  4511 ;;  n               2    4[COMRAM] unsigned int 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4514 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4515 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4516 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4517 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  4518 ;;		 -> main@ic(28), main@uc(5), 
  4519 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4520 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4521 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4522 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  2    0[COMRAM] PTR void 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4532 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;Total ram usage:       10 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    5
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		i1_send_msg
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text30
  4547  0013DE                     __ptext30:
  4548                           	opt stack 0
  4549  0013DE                     i1_memcpy:
  4550                           	opt stack 17
  4551                           
  4552                           ;incstack = 0
  4553  0013DE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4554  0013E2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4555  0013E6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4556  0013EA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4557  0013EE  D00E               	goto	i1l1892
  4558  0013F0                     i1l1886:
  4559  0013F0  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4560  0013F4  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4561  0013F8  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4562  0013FC  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4563  001400  CFDF FFE7          	movff	indf2,indf1
  4564  001404  4A09               	infsnz	i1memcpy@s,f,c
  4565  001406  2A0A               	incf	i1memcpy@s+1,f,c
  4566  001408  4A07               	infsnz	i1memcpy@d,f,c
  4567  00140A  2A08               	incf	i1memcpy@d+1,f,c
  4568  00140C                     i1l1892:
  4569  00140C  0605               	decf	i1memcpy@n,f,c
  4570  00140E  A0D8               	btfss	status,0,c
  4571  001410  0606               	decf	i1memcpy@n+1,f,c
  4572  001412  2805               	incf	i1memcpy@n& (0+255),w,c
  4573  001414  B4D8               	btfsc	status,2,c
  4574  001416  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4575  001418  B4D8               	btfsc	status,2,c
  4576                           
  4577                           ;	Return value of i1_memcpy is never used
  4578  00141A  0012               	return	
  4579  00141C  D7E9               	goto	i1l1886
  4580  00141E                     __end_ofi1_memcpy:
  4581                           	opt stack 0
  4582                           pclatu	equ	0xFFB
  4583                           pclath	equ	0xFFA
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           postinc0	equ	0xFEE
  4592                           fsr0h	equ	0xFEA
  4593                           fsr0l	equ	0xFE9
  4594                           wreg	equ	0xFE8
  4595                           indf1	equ	0xFE7
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           bsr	equ	0xFE0
  4599                           indf2	equ	0xFDF
  4600                           postinc2	equ	0xFDE
  4601                           postdec2	equ	0xFDD
  4602                           fsr2h	equ	0xFDA
  4603                           fsr2l	equ	0xFD9
  4604                           status	equ	0xFD8
  4605                           
  4606 ;; *************** function _ReadTimer1 *****************
  4607 ;; Defined at:
  4608 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1read.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  timer           2    2[COMRAM] struct Timers
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  2    0[COMRAM] unsigned int 
  4615 ;; Registers used:
  4616 ;;		None
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4626 ;;Total ram usage:        4 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    5
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_timer1_int_handler
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text31
  4637  001746                     __ptext31:
  4638                           	opt stack 0
  4639  001746                     _ReadTimer1:
  4640                           	opt stack 19
  4641                           
  4642                           ;incstack = 0
  4643  001746  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  4644  00174A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  4645  00174E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  4646  001752  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  4647  001756  0012               	return	
  4648  001758                     __end_of_ReadTimer1:
  4649                           	opt stack 0
  4650                           pclatu	equ	0xFFB
  4651                           pclath	equ	0xFFA
  4652                           tblptru	equ	0xFF8
  4653                           tblptrh	equ	0xFF7
  4654                           tblptrl	equ	0xFF6
  4655                           tablat	equ	0xFF5
  4656                           prodh	equ	0xFF4
  4657                           prodl	equ	0xFF3
  4658                           intcon	equ	0xFF2
  4659                           postinc0	equ	0xFEE
  4660                           fsr0h	equ	0xFEA
  4661                           fsr0l	equ	0xFE9
  4662                           wreg	equ	0xFE8
  4663                           indf1	equ	0xFE7
  4664                           fsr1h	equ	0xFE2
  4665                           fsr1l	equ	0xFE1
  4666                           bsr	equ	0xFE0
  4667                           indf2	equ	0xFDF
  4668                           postinc2	equ	0xFDE
  4669                           postdec2	equ	0xFDD
  4670                           fsr2h	equ	0xFDA
  4671                           fsr2l	equ	0xFD9
  4672                           status	equ	0xFD8
  4673                           
  4674 ;; *************** function _InterruptHandlerHigh *****************
  4675 ;; Defined at:
  4676 ;;		line 83 in file "../src/interrupts.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;		None               void
  4683 ;; Registers used:
  4684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4693 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4694 ;;Total ram usage:       14 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    4
  4697 ;; This function calls:
  4698 ;;		_SleepIfOkay
  4699 ;;		_i2c_int_handler
  4700 ;;		_timer0_int_handler
  4701 ;; This function is called by:
  4702 ;;		Interrupt level 2
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	intcode
  4707  000008                     __pintcode:
  4708                           	opt stack 0
  4709  000008                     _InterruptHandlerHigh:
  4710                           	opt stack 17
  4711                           
  4712                           ;incstack = 0
  4713  000008  CFFA F0BA          	movff	pclath,??_InterruptHandlerHigh
  4714  00000C  CFFB F0BB          	movff	pclatu,??_InterruptHandlerHigh+1
  4715  000010  CFE9 F0BC          	movff	fsr0l,??_InterruptHandlerHigh+2
  4716  000014  EFCC  F007         	goto	int_func
  4717                           pclatu	equ	0xFFB
  4718                           pclath	equ	0xFFA
  4719                           tblptru	equ	0xFF8
  4720                           tblptrh	equ	0xFF7
  4721                           tblptrl	equ	0xFF6
  4722                           tablat	equ	0xFF5
  4723                           prodh	equ	0xFF4
  4724                           prodl	equ	0xFF3
  4725                           intcon	equ	0xFF2
  4726                           postinc0	equ	0xFEE
  4727                           fsr0h	equ	0xFEA
  4728                           fsr0l	equ	0xFE9
  4729                           wreg	equ	0xFE8
  4730                           indf1	equ	0xFE7
  4731                           fsr1h	equ	0xFE2
  4732                           fsr1l	equ	0xFE1
  4733                           bsr	equ	0xFE0
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741                           	psect	intcode_body
  4742  000F98                     __pintcode_body:
  4743                           	opt stack 17
  4744  000F98                     int_func:
  4745                           	opt stack 17
  4746  000F98  CFEA F0BD          	movff	fsr0h,??_InterruptHandlerHigh+3
  4747  000F9C  CFE1 F0BE          	movff	fsr1l,??_InterruptHandlerHigh+4
  4748  000FA0  CFE2 F0BF          	movff	fsr1h,??_InterruptHandlerHigh+5
  4749  000FA4  CFD9 F0C0          	movff	fsr2l,??_InterruptHandlerHigh+6
  4750  000FA8  CFDA F0C1          	movff	fsr2h,??_InterruptHandlerHigh+7
  4751  000FAC  CFF3 F0C2          	movff	prodl,??_InterruptHandlerHigh+8
  4752  000FB0  CFF4 F0C3          	movff	prodh,??_InterruptHandlerHigh+9
  4753  000FB4  CFF6 F0C4          	movff	tblptrl,??_InterruptHandlerHigh+10
  4754  000FB8  CFF7 F0C5          	movff	tblptrh,??_InterruptHandlerHigh+11
  4755  000FBC  CFF8 F0C6          	movff	tblptru,??_InterruptHandlerHigh+12
  4756  000FC0  CFF5 F0C7          	movff	tablat,??_InterruptHandlerHigh+13
  4757                           
  4758                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  4759  000FC4  A69E               	btfss	3998,3,c	;volatile
  4760  000FC6  D003               	goto	i2l3212
  4761                           
  4762                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  4763  000FC8  969E               	bcf	3998,3,c	;volatile
  4764                           
  4765                           ;interrupts.c: 92: i2c_int_handler();
  4766  000FCA  EC5D  F000         	call	_i2c_int_handler	;wreg free
  4767  000FCE                     i2l3212:
  4768                           
  4769                           ;interrupts.c: 93: }
  4770                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  4771  000FCE  A4F2               	btfss	intcon,2,c	;volatile
  4772  000FD0  D003               	goto	i2l3218
  4773                           
  4774                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  4775  000FD2  94F2               	bcf	intcon,2,c	;volatile
  4776                           
  4777                           ;interrupts.c: 99: timer0_int_handler();
  4778  000FD4  EC46  F008         	call	_timer0_int_handler	;wreg free
  4779  000FD8                     i2l3218:
  4780                           
  4781                           ;interrupts.c: 100: }
  4782                           ;interrupts.c: 109: SleepIfOkay();
  4783  000FD8  EC41  F009         	call	_SleepIfOkay	;wreg free
  4784  000FDC  C0C7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  4785  000FE0  C0C6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  4786  000FE4  C0C5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  4787  000FE8  C0C4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  4788  000FEC  C0C3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  4789  000FF0  C0C2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  4790  000FF4  C0C1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  4791  000FF8  C0C0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  4792  000FFC  C0BF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  4793  001000  C0BE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  4794  001004  C0BD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  4795  001008  C0BC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  4796  00100C  C0BB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  4797  001010  C0BA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  4798  001014  0011               	retfie		f
  4799  001016                     __end_of_InterruptHandlerHigh:
  4800                           	opt stack 0
  4801                           pclatu	equ	0xFFB
  4802                           pclath	equ	0xFFA
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           prodh	equ	0xFF4
  4808                           prodl	equ	0xFF3
  4809                           intcon	equ	0xFF2
  4810                           postinc0	equ	0xFEE
  4811                           fsr0h	equ	0xFEA
  4812                           fsr0l	equ	0xFE9
  4813                           wreg	equ	0xFE8
  4814                           indf1	equ	0xFE7
  4815                           fsr1h	equ	0xFE2
  4816                           fsr1l	equ	0xFE1
  4817                           bsr	equ	0xFE0
  4818                           indf2	equ	0xFDF
  4819                           postinc2	equ	0xFDE
  4820                           postdec2	equ	0xFDD
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _timer0_int_handler *****************
  4826 ;; Defined at:
  4827 ;;		line 16 in file "../src/user_interrupts.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  val             2   33[BANK0 ] unsigned int 
  4832 ;;  msgtype         2   31[BANK0 ] int 
  4833 ;;  length          2   29[BANK0 ] int 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;		None               void
  4836 ;; Registers used:
  4837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4846 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;Total ram usage:        6 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    3
  4850 ;; This function calls:
  4851 ;;		_FromMainHigh_recvmsg
  4852 ;;		_ToMainHigh_sendmsg
  4853 ;;		_WriteTimer0
  4854 ;; This function is called by:
  4855 ;;		_InterruptHandlerHigh
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text33
  4860  00108C                     __ptext33:
  4861                           	opt stack 0
  4862  00108C                     _timer0_int_handler:
  4863                           	opt stack 17
  4864                           
  4865                           ;user_interrupts.c: 17: unsigned int val;
  4866                           ;user_interrupts.c: 18: int length, msgtype;
  4867                           ;user_interrupts.c: 25: WriteTimer0(0);
  4868                           
  4869                           ;incstack = 0
  4870  00108C  0E00               	movlw	0
  4871  00108E  0100               	movlb	0	; () banked
  4872  001090  6F97               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  4873  001092  0E00               	movlw	0
  4874  001094  0100               	movlb	0	; () banked
  4875  001096  6F96               	movwf	WriteTimer0@timer0& (0+255),b
  4876  001098  ECAC  F00B         	call	_WriteTimer0	;wreg free
  4877                           
  4878                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  4879  00109C  0100               	movlb	0	; () banked
  4880  00109E  0E00               	movlw	high timer0_int_handler@msgtype
  4881  0010A0  0100               	movlb	0	; () banked
  4882  0010A2  6FAF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  4883  0010A4  0100               	movlb	0	; () banked
  4884  0010A6  0EB5               	movlw	low timer0_int_handler@msgtype
  4885  0010A8  0100               	movlb	0	; () banked
  4886  0010AA  6FAE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  4887  0010AC  0100               	movlb	0	; () banked
  4888  0010AE  0E00               	movlw	high timer0_int_handler@val
  4889  0010B0  0100               	movlb	0	; () banked
  4890  0010B2  6FB1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  4891  0010B4  0100               	movlb	0	; () banked
  4892  0010B6  0EB7               	movlw	low timer0_int_handler@val
  4893  0010B8  0100               	movlb	0	; () banked
  4894  0010BA  6FB0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  4895  0010BC  0E02               	movlw	2
  4896  0010BE  EC82  F00A         	call	_FromMainHigh_recvmsg
  4897  0010C2  0100               	movlb	0	; () banked
  4898  0010C4  6FB3               	movwf	timer0_int_handler@length& (0+255),b
  4899  0010C6  0100               	movlb	0	; () banked
  4900  0010C8  6BB4               	clrf	(timer0_int_handler@length+1)& (0+255),b
  4901  0010CA  0100               	movlb	0	; () banked
  4902  0010CC  BFB3               	btfsc	timer0_int_handler@length& (0+255),7,b
  4903  0010CE  07B4               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  4907  0010D0  0100               	movlb	0	; () banked
  4908  0010D2  51B3               	movf	timer0_int_handler@length& (0+255),w,b
  4909  0010D4  0A02               	xorlw	2
  4910  0010D6  11B4               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  4911  0010D8  A4D8               	btfss	status,2,c
  4912  0010DA  0012               	return	
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  4916  0010DC  0E0A               	movlw	10
  4917  0010DE  0100               	movlb	0	; () banked
  4918  0010E0  6FAC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  4919  0010E2  0100               	movlb	0	; () banked
  4920  0010E4  0E00               	movlw	high timer0_int_handler@val
  4921  0010E6  0100               	movlb	0	; () banked
  4922  0010E8  6FAE               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  4923  0010EA  0100               	movlb	0	; () banked
  4924  0010EC  0EB7               	movlw	low timer0_int_handler@val
  4925  0010EE  0100               	movlb	0	; () banked
  4926  0010F0  6FAD               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  4927  0010F2  0E02               	movlw	2
  4928  0010F4  ECE6  F00A         	call	_ToMainHigh_sendmsg
  4929  0010F8  0012               	return	
  4930  0010FA                     __end_of_timer0_int_handler:
  4931                           	opt stack 0
  4932                           pclatu	equ	0xFFB
  4933                           pclath	equ	0xFFA
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           prodh	equ	0xFF4
  4939                           prodl	equ	0xFF3
  4940                           intcon	equ	0xFF2
  4941                           postinc0	equ	0xFEE
  4942                           fsr0h	equ	0xFEA
  4943                           fsr0l	equ	0xFE9
  4944                           wreg	equ	0xFE8
  4945                           indf1	equ	0xFE7
  4946                           fsr1h	equ	0xFE2
  4947                           fsr1l	equ	0xFE1
  4948                           bsr	equ	0xFE0
  4949                           indf2	equ	0xFDF
  4950                           postinc2	equ	0xFDE
  4951                           postdec2	equ	0xFDD
  4952                           fsr2h	equ	0xFDA
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8
  4955                           
  4956 ;; *************** function _WriteTimer0 *****************
  4957 ;; Defined at:
  4958 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0write.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  timer0          2    0[BANK0 ] unsigned int 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  timer           2    2[BANK0 ] struct Timers
  4963 ;; Return value:  Size  Location     Type
  4964 ;;		None               void
  4965 ;; Registers used:
  4966 ;;		None
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4972 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;Total ram usage:        4 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_timer0_int_handler
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text34
  4986  001758                     __ptext34:
  4987                           	opt stack 0
  4988  001758                     _WriteTimer0:
  4989                           	opt stack 19
  4990                           
  4991                           ;incstack = 0
  4992  001758  C096  F098         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4993  00175C  C097  F099         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4994  001760  C099  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4995  001764  C098  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4996  001768  0012               	return	
  4997  00176A                     __end_of_WriteTimer0:
  4998                           	opt stack 0
  4999                           pclatu	equ	0xFFB
  5000                           pclath	equ	0xFFA
  5001                           tblptru	equ	0xFF8
  5002                           tblptrh	equ	0xFF7
  5003                           tblptrl	equ	0xFF6
  5004                           tablat	equ	0xFF5
  5005                           prodh	equ	0xFF4
  5006                           prodl	equ	0xFF3
  5007                           intcon	equ	0xFF2
  5008                           postinc0	equ	0xFEE
  5009                           fsr0h	equ	0xFEA
  5010                           fsr0l	equ	0xFE9
  5011                           wreg	equ	0xFE8
  5012                           indf1	equ	0xFE7
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           bsr	equ	0xFE0
  5016                           indf2	equ	0xFDF
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8
  5022                           
  5023 ;; *************** function _FromMainHigh_recvmsg *****************
  5024 ;; Defined at:
  5025 ;;		line 183 in file "../src/messages.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  maxlength       1    wreg     unsigned char 
  5028 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  5029 ;;		 -> timer0_int_handler@msgtype(2), 
  5030 ;;  data            2   26[BANK0 ] PTR void 
  5031 ;;		 -> timer0_int_handler@val(2), 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  maxlength       1   28[BANK0 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      char 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;Total ram usage:        5 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    2
  5050 ;; This function calls:
  5051 ;;		i2_recv_msg
  5052 ;; This function is called by:
  5053 ;;		_timer0_int_handler
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text35
  5058  001504                     __ptext35:
  5059                           	opt stack 0
  5060  001504                     _FromMainHigh_recvmsg:
  5061                           	opt stack 17
  5062                           
  5063                           ;incstack = 0
  5064                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5065  001504  0100               	movlb	0	; () banked
  5066  001506  6FB2               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5070  001508  0101               	movlb	1	; () banked
  5071  00150A  0E01               	movlw	high _FromMainHigh_MQ
  5072  00150C  0100               	movlb	0	; () banked
  5073  00150E  6FA1               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  5074  001510  0101               	movlb	1	; () banked
  5075  001512  0E00               	movlw	low _FromMainHigh_MQ
  5076  001514  0100               	movlb	0	; () banked
  5077  001516  6FA0               	movwf	i2recv_msg@qptr& (0+255),b
  5078  001518  C0B2  F0A2         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5079  00151C  0100               	movlb	0	; () banked
  5080  00151E  C0AF  F0A4         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5081  001522  0100               	movlb	0	; () banked
  5082  001524  C0AE  F0A3         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5083  001528  0100               	movlb	0	; () banked
  5084  00152A  C0B1  F0A6         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5085  00152E  0100               	movlb	0	; () banked
  5086  001530  C0B0  F0A5         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5087  001534  ECCB  F004         	call	i2_recv_msg	;wreg free
  5088  001538  0012               	return	
  5089  00153A                     __end_of_FromMainHigh_recvmsg:
  5090                           	opt stack 0
  5091                           pclatu	equ	0xFFB
  5092                           pclath	equ	0xFFA
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           prodh	equ	0xFF4
  5098                           prodl	equ	0xFF3
  5099                           intcon	equ	0xFF2
  5100                           postinc0	equ	0xFEE
  5101                           fsr0h	equ	0xFEA
  5102                           fsr0l	equ	0xFE9
  5103                           wreg	equ	0xFE8
  5104                           indf1	equ	0xFE7
  5105                           fsr1h	equ	0xFE2
  5106                           fsr1l	equ	0xFE1
  5107                           bsr	equ	0xFE0
  5108                           indf2	equ	0xFDF
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115 ;; *************** function i2_recv_msg *****************
  5116 ;; Defined at:
  5117 ;;		line 63 in file "../src/messages.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  5120 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5121 ;;  maxlength       1   12[BANK0 ] unsigned char 
  5122 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  5123 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  5124 ;;  data            2   15[BANK0 ] PTR void 
  5125 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  5128 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5129 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5130 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  5131 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      char 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5141 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5144 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5145 ;;Total ram usage:       14 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    1
  5148 ;; This function calls:
  5149 ;;		i2_memcpy
  5150 ;; This function is called by:
  5151 ;;		_FromMainHigh_recvmsg
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text36
  5156  000996                     __ptext36:
  5157                           	opt stack 0
  5158  000996                     i2_recv_msg:
  5159                           	opt stack 17
  5160                           
  5161                           ;messages.c: 64: unsigned char slot;
  5162                           ;messages.c: 68: msg *qmsg;
  5163                           ;messages.c: 69: size_t tlength;
  5164                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5165                           
  5166                           ;incstack = 0
  5167  000996  0100               	movlb	0	; () banked
  5168  000998  EE20 F035          	lfsr	2,53
  5169  00099C  0100               	movlb	0	; () banked
  5170  00099E  51A0               	movf	i2recv_msg@qptr& (0+255),w,b
  5171  0009A0  26D9               	addwf	fsr2l,f,c
  5172  0009A2  0100               	movlb	0	; () banked
  5173  0009A4  51A1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5174  0009A6  22DA               	addwfc	fsr2h,f,c
  5175  0009A8  50DF               	movf	indf2,w,c
  5176  0009AA  0100               	movlb	0	; () banked
  5177  0009AC  6FA9               	movwf	i2recv_msg@slot& (0+255),b
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5181  0009AE  0100               	movlb	0	; () banked
  5182  0009B0  51A9               	movf	i2recv_msg@slot& (0+255),w,b
  5183  0009B2  0D0D               	mullw	13
  5184  0009B4  50F3               	movf	prodl,w,c
  5185  0009B6  0100               	movlb	0	; () banked
  5186  0009B8  25A0               	addwf	i2recv_msg@qptr& (0+255),w,b
  5187  0009BA  0100               	movlb	0	; () banked
  5188  0009BC  6FAC               	movwf	i2recv_msg@qmsg& (0+255),b
  5189  0009BE  50F4               	movf	prodh,w,c
  5190  0009C0  0100               	movlb	0	; () banked
  5191  0009C2  21A1               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  5192  0009C4  0100               	movlb	0	; () banked
  5193  0009C6  6FAD               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;messages.c: 74: if (qmsg->full == 1) {
  5197  0009C8  0E01               	movlw	1
  5198  0009CA  C0AC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5199  0009CE  C0AD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5200  0009D2  62DF               	cpfseq	indf2,c
  5201  0009D4  D06D               	goto	i2l2754
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5205  0009D6  0100               	movlb	0	; () banked
  5206  0009D8  EE20 F001          	lfsr	2,1
  5207  0009DC  0100               	movlb	0	; () banked
  5208  0009DE  51AC               	movf	i2recv_msg@qmsg& (0+255),w,b
  5209  0009E0  26D9               	addwf	fsr2l,f,c
  5210  0009E2  0100               	movlb	0	; () banked
  5211  0009E4  51AD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5212  0009E6  22DA               	addwfc	fsr2h,f,c
  5213  0009E8  50DF               	movf	indf2,w,c
  5214  0009EA  0100               	movlb	0	; () banked
  5215  0009EC  5DA2               	subwf	i2recv_msg@maxlength& (0+255),w,b
  5216  0009EE  B0D8               	btfsc	status,0,c
  5217  0009F0  D002               	goto	i2l2738
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;messages.c: 77: return (-3);
  5221  0009F2  0EFD               	movlw	253
  5222  0009F4  0012               	return	
  5223  0009F6                     i2l2738:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;messages.c: 78: }
  5227                           ;messages.c: 80: tlength = qmsg->length;
  5228  0009F6  0100               	movlb	0	; () banked
  5229  0009F8  EE20 F001          	lfsr	2,1
  5230  0009FC  0100               	movlb	0	; () banked
  5231  0009FE  51AC               	movf	i2recv_msg@qmsg& (0+255),w,b
  5232  000A00  26D9               	addwf	fsr2l,f,c
  5233  000A02  0100               	movlb	0	; () banked
  5234  000A04  51AD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5235  000A06  22DA               	addwfc	fsr2h,f,c
  5236  000A08  50DF               	movf	indf2,w,c
  5237  000A0A  0100               	movlb	0	; () banked
  5238  000A0C  6FA7               	movwf	??i2_recv_msg& (0+255),b
  5239  000A0E  0100               	movlb	0	; () banked
  5240  000A10  51A7               	movf	??i2_recv_msg& (0+255),w,b
  5241  000A12  0100               	movlb	0	; () banked
  5242  000A14  6FAA               	movwf	i2recv_msg@tlength& (0+255),b
  5243  000A16  0100               	movlb	0	; () banked
  5244  000A18  6BAB               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5248  000A1A  0100               	movlb	0	; () banked
  5249  000A1C  C0A6  F097         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  5250  000A20  0100               	movlb	0	; () banked
  5251  000A22  C0A5  F096         	movff	i2recv_msg@data,i2memcpy@d1
  5252  000A26  0E03               	movlw	3
  5253  000A28  0100               	movlb	0	; () banked
  5254  000A2A  25AC               	addwf	i2recv_msg@qmsg& (0+255),w,b
  5255  000A2C  0100               	movlb	0	; () banked
  5256  000A2E  6FA7               	movwf	??i2_recv_msg& (0+255),b
  5257  000A30  0E00               	movlw	0
  5258  000A32  0100               	movlb	0	; () banked
  5259  000A34  21AD               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  5260  000A36  0100               	movlb	0	; () banked
  5261  000A38  6FA8               	movwf	(??i2_recv_msg+1)& (0+255),b
  5262  000A3A  C0A7  F098         	movff	??i2_recv_msg,i2memcpy@s1
  5263  000A3E  C0A8  F099         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  5264  000A42  C0AA  F09A         	movff	i2recv_msg@tlength,i2memcpy@n
  5265  000A46  C0AB  F09B         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  5266  000A4A  ECC7  F009         	call	i2_memcpy	;wreg free
  5267                           
  5268                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5269  000A4E  0100               	movlb	0	; () banked
  5270  000A50  EE20 F035          	lfsr	2,53
  5271  000A54  0100               	movlb	0	; () banked
  5272  000A56  51A0               	movf	i2recv_msg@qptr& (0+255),w,b
  5273  000A58  26D9               	addwf	fsr2l,f,c
  5274  000A5A  0100               	movlb	0	; () banked
  5275  000A5C  51A1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5276  000A5E  22DA               	addwfc	fsr2h,f,c
  5277  000A60  0100               	movlb	0	; () banked
  5278  000A62  EE10 F035          	lfsr	1,53
  5279  000A66  0100               	movlb	0	; () banked
  5280  000A68  51A0               	movf	i2recv_msg@qptr& (0+255),w,b
  5281  000A6A  26E1               	addwf	fsr1l,f,c
  5282  000A6C  0100               	movlb	0	; () banked
  5283  000A6E  51A1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5284  000A70  22E2               	addwfc	fsr1h,f,c
  5285  000A72  50E7               	movf	indf1,w,c
  5286  000A74  0100               	movlb	0	; () banked
  5287  000A76  6FA7               	movwf	??i2_recv_msg& (0+255),b
  5288  000A78  0100               	movlb	0	; () banked
  5289  000A7A  29A7               	incf	??i2_recv_msg& (0+255),w,b
  5290  000A7C  0B03               	andlw	3
  5291  000A7E  6EDF               	movwf	indf2,c
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5295  000A80  0100               	movlb	0	; () banked
  5296  000A82  EE20 F002          	lfsr	2,2
  5297  000A86  0100               	movlb	0	; () banked
  5298  000A88  51AC               	movf	i2recv_msg@qmsg& (0+255),w,b
  5299  000A8A  26D9               	addwf	fsr2l,f,c
  5300  000A8C  0100               	movlb	0	; () banked
  5301  000A8E  51AD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5302  000A90  22DA               	addwfc	fsr2h,f,c
  5303  000A92  C0A3  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  5304  000A96  C0A4  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  5305  000A9A  CFDF FFE7          	movff	indf2,indf1
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;messages.c: 91: qmsg->full = 0;
  5309  000A9E  C0AC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5310  000AA2  C0AD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5311  000AA6  0E00               	movlw	0
  5312  000AA8  6EDF               	movwf	indf2,c
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;messages.c: 92: return (tlength);
  5316  000AAA  0100               	movlb	0	; () banked
  5317  000AAC  51AA               	movf	i2recv_msg@tlength& (0+255),w,b
  5318  000AAE  0012               	return	
  5319  000AB0                     i2l2754:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;messages.c: 94: return (-4);
  5323  000AB0  0EFC               	movlw	252
  5324  000AB2  0012               	return	
  5325  000AB4                     __end_ofi2_recv_msg:
  5326                           	opt stack 0
  5327                           pclatu	equ	0xFFB
  5328                           pclath	equ	0xFFA
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           prodh	equ	0xFF4
  5334                           prodl	equ	0xFF3
  5335                           intcon	equ	0xFF2
  5336                           postinc0	equ	0xFEE
  5337                           fsr0h	equ	0xFEA
  5338                           fsr0l	equ	0xFE9
  5339                           wreg	equ	0xFE8
  5340                           indf1	equ	0xFE7
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           bsr	equ	0xFE0
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _i2c_int_handler *****************
  5352 ;; Defined at:
  5353 ;;		line 100 in file "../src/my_i2c.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  error_buf       3   27[BANK0 ] unsigned char [3]
  5358 ;;  data_read       1   35[BANK0 ] unsigned char 
  5359 ;;  msg_ready       1   34[BANK0 ] unsigned char 
  5360 ;;  msg_to_send     1   33[BANK0 ] unsigned char 
  5361 ;;  i2c_data        1   32[BANK0 ] unsigned char 
  5362 ;;  overrun_erro    1   31[BANK0 ] unsigned char 
  5363 ;;  data_written    1   30[BANK0 ] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5377 ;;Total ram usage:       10 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    3
  5380 ;; This function calls:
  5381 ;;		_ToMainHigh_sendmsg
  5382 ;;		_handle_start
  5383 ;; This function is called by:
  5384 ;;		_InterruptHandlerHigh
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text37
  5389  0000BA                     __ptext37:
  5390                           	opt stack 0
  5391  0000BA                     _i2c_int_handler:
  5392                           	opt stack 17
  5393                           
  5394                           ;my_i2c.c: 101: unsigned char i2c_data;
  5395                           ;my_i2c.c: 102: unsigned char data_read = 0;
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;incstack = 0
  5399  0000BA  0E00               	movlw	0
  5400  0000BC  0100               	movlb	0	; () banked
  5401  0000BE  6FB9               	movwf	i2c_int_handler@data_read& (0+255),b
  5402                           
  5403                           ;my_i2c.c: 103: unsigned char data_written = 0;
  5404  0000C0  0E00               	movlw	0
  5405  0000C2  0100               	movlb	0	; () banked
  5406  0000C4  6FB4               	movwf	i2c_int_handler@data_written& (0+255),b
  5407                           
  5408                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  5409  0000C6  0E00               	movlw	0
  5410  0000C8  0100               	movlb	0	; () banked
  5411  0000CA  6FB8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5412                           
  5413                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  5414  0000CC  0E00               	movlw	0
  5415  0000CE  0100               	movlb	0	; () banked
  5416  0000D0  6FB7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5417                           
  5418                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  5419  0000D2  0E00               	movlw	0
  5420  0000D4  0100               	movlb	0	; () banked
  5421  0000D6  6FB5               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;my_i2c.c: 107: unsigned char error_buf[3];
  5425                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  5426  0000D8  ACC6               	btfss	4038,6,c	;volatile
  5427  0000DA  D024               	goto	i2l2902
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  5431  0000DC  9CC6               	bcf	4038,6,c	;volatile
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  5435  0000DE  0100               	movlb	0	; () banked
  5436  0000E0  EE20 F00C          	lfsr	2,12
  5437  0000E4  0100               	movlb	0	; () banked
  5438  0000E6  51CC               	movf	_ic_ptr& (0+255),w,b
  5439  0000E8  26D9               	addwf	fsr2l,f,c
  5440  0000EA  0100               	movlb	0	; () banked
  5441  0000EC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5442  0000EE  22DA               	addwfc	fsr2h,f,c
  5443  0000F0  0E05               	movlw	5
  5444  0000F2  6EDF               	movwf	indf2,c
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;my_i2c.c: 116: overrun_error = 1;
  5448  0000F4  0E01               	movlw	1
  5449  0000F6  0100               	movlb	0	; () banked
  5450  0000F8  6FB5               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;my_i2c.c: 117: ic_ptr->error_count++;
  5454  0000FA  0100               	movlb	0	; () banked
  5455  0000FC  EE20 F00E          	lfsr	2,14
  5456  000100  0100               	movlb	0	; () banked
  5457  000102  51CC               	movf	_ic_ptr& (0+255),w,b
  5458  000104  26D9               	addwf	fsr2l,f,c
  5459  000106  0100               	movlb	0	; () banked
  5460  000108  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5461  00010A  22DA               	addwfc	fsr2h,f,c
  5462  00010C  2ADF               	incf	indf2,f,c
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  5466  00010E  0100               	movlb	0	; () banked
  5467  000110  EE20 F00D          	lfsr	2,13
  5468  000114  0100               	movlb	0	; () banked
  5469  000116  51CC               	movf	_ic_ptr& (0+255),w,b
  5470  000118  26D9               	addwf	fsr2l,f,c
  5471  00011A  0100               	movlb	0	; () banked
  5472  00011C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5473  00011E  22DA               	addwfc	fsr2h,f,c
  5474  000120  0E04               	movlw	4
  5475  000122  6EDF               	movwf	indf2,c
  5476  000124                     i2l2902:
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;my_i2c.c: 119: }
  5480                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  5481  000124  A0C7               	btfss	4039,0,c	;volatile
  5482  000126  D005               	goto	i2l2908
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  5486  000128  CFC9 F0B6          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;my_i2c.c: 123: data_read = 1;
  5490  00012C  0E01               	movlw	1
  5491  00012E  0100               	movlb	0	; () banked
  5492  000130  6FB9               	movwf	i2c_int_handler@data_read& (0+255),b
  5493  000132                     i2l2908:
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;my_i2c.c: 124: }
  5497                           ;my_i2c.c: 126: if (!overrun_error) {
  5498  000132  0100               	movlb	0	; () banked
  5499  000134  67B5               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  5500  000136  D19F               	goto	i2l263
  5501  000138  D188               	goto	i2l2996
  5502  00013A                     i2l265:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;my_i2c.c: 129: {
  5506                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  5507  00013A  A6C7               	btfss	4039,3,c	;volatile
  5508  00013C  D19C               	goto	i2l263
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;my_i2c.c: 132: handle_start(data_read);
  5512  00013E  0100               	movlb	0	; () banked
  5513  000140  51B9               	movf	i2c_int_handler@data_read& (0+255),w,b
  5514  000142  ECC8  F006         	call	_handle_start
  5515                           
  5516                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  5517  000146  0100               	movlb	0	; () banked
  5518  000148  EE20 F00C          	lfsr	2,12
  5519  00014C  0100               	movlb	0	; () banked
  5520  00014E  51CC               	movf	_ic_ptr& (0+255),w,b
  5521  000150  26D9               	addwf	fsr2l,f,c
  5522  000152  0100               	movlb	0	; () banked
  5523  000154  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5524  000156  22DA               	addwfc	fsr2h,f,c
  5525  000158  0E08               	movlw	8
  5526  00015A  62DF               	cpfseq	indf2,c
  5527  00015C  D18C               	goto	i2l263
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;my_i2c.c: 135: data_read = 0;
  5531  00015E  0E00               	movlw	0
  5532  000160  0100               	movlb	0	; () banked
  5533  000162  6FB9               	movwf	i2c_int_handler@data_read& (0+255),b
  5534                           
  5535                           ;my_i2c.c: 136: msg_to_send = 1;
  5536  000164  0E01               	movlw	1
  5537  000166  0100               	movlb	0	; () banked
  5538  000168  6FB7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5539  00016A  D185               	goto	i2l263
  5540  00016C                     i2l269:
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;my_i2c.c: 142: {
  5544                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  5545  00016C  A8C7               	btfss	4039,4,c	;volatile
  5546  00016E  D02A               	goto	i2l2928
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;my_i2c.c: 147: ic_ptr->event_count++;
  5550  000170  0100               	movlb	0	; () banked
  5551  000172  EE20 F00B          	lfsr	2,11
  5552  000176  0100               	movlb	0	; () banked
  5553  000178  51CC               	movf	_ic_ptr& (0+255),w,b
  5554  00017A  26D9               	addwf	fsr2l,f,c
  5555  00017C  0100               	movlb	0	; () banked
  5556  00017E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5557  000180  22DA               	addwfc	fsr2h,f,c
  5558  000182  2ADF               	incf	indf2,f,c
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;my_i2c.c: 148: if (data_read) {
  5562  000184  0100               	movlb	0	; () banked
  5563  000186  51B9               	movf	i2c_int_handler@data_read& (0+255),w,b
  5564  000188  B4D8               	btfsc	status,2,c
  5565  00018A  D154               	goto	L7
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  5569  00018C  BAC7               	btfsc	4039,5,c	;volatile
  5570  00018E  D004               	goto	i2l2926
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;my_i2c.c: 150: msg_ready = 1;
  5574  000190  0E01               	movlw	1
  5575  000192  0100               	movlb	0	; () banked
  5576  000194  6FB8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5577                           
  5578                           ;my_i2c.c: 151: } else {
  5579  000196  D14E               	goto	L7
  5580  000198                     i2l2926:
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;my_i2c.c: 152: ic_ptr->error_count++;
  5584  000198  0100               	movlb	0	; () banked
  5585  00019A  EE20 F00E          	lfsr	2,14
  5586  00019E  0100               	movlb	0	; () banked
  5587  0001A0  51CC               	movf	_ic_ptr& (0+255),w,b
  5588  0001A2  26D9               	addwf	fsr2l,f,c
  5589  0001A4  0100               	movlb	0	; () banked
  5590  0001A6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5591  0001A8  22DA               	addwfc	fsr2h,f,c
  5592  0001AA  2ADF               	incf	indf2,f,c
  5593                           
  5594                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  5595  0001AC  0100               	movlb	0	; () banked
  5596  0001AE  EE20 F00D          	lfsr	2,13
  5597  0001B2  0100               	movlb	0	; () banked
  5598  0001B4  51CC               	movf	_ic_ptr& (0+255),w,b
  5599  0001B6  26D9               	addwf	fsr2l,f,c
  5600  0001B8  0100               	movlb	0	; () banked
  5601  0001BA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5602  0001BC  22DA               	addwfc	fsr2h,f,c
  5603  0001BE  0E06               	movlw	6
  5604  0001C0  6EDF               	movwf	indf2,c
  5605                           
  5606                           ; BSR set to: 0
  5607  0001C2  D138               	goto	L7
  5608  0001C4                     i2l2928:
  5609                           
  5610                           ; BSR set to: 0
  5611  0001C4  0100               	movlb	0	; () banked
  5612  0001C6  51B9               	movf	i2c_int_handler@data_read& (0+255),w,b
  5613  0001C8  B4D8               	btfsc	status,2,c
  5614  0001CA  D155               	goto	i2l263
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;my_i2c.c: 158: ic_ptr->event_count++;
  5618  0001CC  0100               	movlb	0	; () banked
  5619  0001CE  EE20 F00B          	lfsr	2,11
  5620  0001D2  0100               	movlb	0	; () banked
  5621  0001D4  51CC               	movf	_ic_ptr& (0+255),w,b
  5622  0001D6  26D9               	addwf	fsr2l,f,c
  5623  0001D8  0100               	movlb	0	; () banked
  5624  0001DA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5625  0001DC  22DA               	addwfc	fsr2h,f,c
  5626  0001DE  2ADF               	incf	indf2,f,c
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  5630  0001E0  BAC7               	btfsc	4039,5,c	;volatile
  5631  0001E2  D019               	goto	i2l2944
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  5635  0001E4  B4C7               	btfsc	4039,2,c	;volatile
  5636  0001E6  D00B               	goto	i2l2938
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  5640  0001E8  0100               	movlb	0	; () banked
  5641  0001EA  EE20 F00C          	lfsr	2,12
  5642  0001EE  0100               	movlb	0	; () banked
  5643  0001F0  51CC               	movf	_ic_ptr& (0+255),w,b
  5644  0001F2  26D9               	addwf	fsr2l,f,c
  5645  0001F4  0100               	movlb	0	; () banked
  5646  0001F6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5647  0001F8  22DA               	addwfc	fsr2h,f,c
  5648  0001FA  0E07               	movlw	7
  5649  0001FC  D071               	goto	L5
  5650  0001FE                     i2l2938:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  5654  0001FE  0100               	movlb	0	; () banked
  5655  000200  EE20 F00C          	lfsr	2,12
  5656  000204  0100               	movlb	0	; () banked
  5657  000206  51CC               	movf	_ic_ptr& (0+255),w,b
  5658  000208  26D9               	addwf	fsr2l,f,c
  5659  00020A  0100               	movlb	0	; () banked
  5660  00020C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5661  00020E  22DA               	addwfc	fsr2h,f,c
  5662  000210  0E08               	movlw	8
  5663  000212  6EDF               	movwf	indf2,c
  5664  000214  D108               	goto	L4
  5665  000216                     i2l2944:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;my_i2c.c: 169: ic_ptr->error_count++;
  5669  000216  0100               	movlb	0	; () banked
  5670  000218  EE20 F00E          	lfsr	2,14
  5671  00021C  0100               	movlb	0	; () banked
  5672  00021E  51CC               	movf	_ic_ptr& (0+255),w,b
  5673  000220  26D9               	addwf	fsr2l,f,c
  5674  000222  0100               	movlb	0	; () banked
  5675  000224  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5676  000226  22DA               	addwfc	fsr2h,f,c
  5677  000228  2ADF               	incf	indf2,f,c
  5678                           
  5679                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  5680  00022A  0100               	movlb	0	; () banked
  5681  00022C  EE20 F00C          	lfsr	2,12
  5682  000230  0100               	movlb	0	; () banked
  5683  000232  51CC               	movf	_ic_ptr& (0+255),w,b
  5684  000234  26D9               	addwf	fsr2l,f,c
  5685  000236  0100               	movlb	0	; () banked
  5686  000238  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5687  00023A  22DA               	addwfc	fsr2h,f,c
  5688  00023C  0E05               	movlw	5
  5689  00023E  6EDF               	movwf	indf2,c
  5690                           
  5691                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  5692  000240  0100               	movlb	0	; () banked
  5693  000242  EE20 F00D          	lfsr	2,13
  5694  000246  0100               	movlb	0	; () banked
  5695  000248  51CC               	movf	_ic_ptr& (0+255),w,b
  5696  00024A  26D9               	addwf	fsr2l,f,c
  5697  00024C  0100               	movlb	0	; () banked
  5698  00024E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5699  000250  22DA               	addwfc	fsr2h,f,c
  5700  000252  0E06               	movlw	6
  5701  000254  D045               	goto	L5
  5702  000256                     i2l2946:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;my_i2c.c: 177: {
  5706                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  5707  000256  0100               	movlb	0	; () banked
  5708  000258  EE20 F01A          	lfsr	2,26
  5709  00025C  0100               	movlb	0	; () banked
  5710  00025E  51CC               	movf	_ic_ptr& (0+255),w,b
  5711  000260  26D9               	addwf	fsr2l,f,c
  5712  000262  0100               	movlb	0	; () banked
  5713  000264  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5714  000266  22DA               	addwfc	fsr2h,f,c
  5715  000268  50DF               	movf	indf2,w,c
  5716  00026A  0100               	movlb	0	; () banked
  5717  00026C  6FB0               	movwf	??_i2c_int_handler& (0+255),b
  5718  00026E  0100               	movlb	0	; () banked
  5719  000270  EE20 F019          	lfsr	2,25
  5720  000274  0100               	movlb	0	; () banked
  5721  000276  51CC               	movf	_ic_ptr& (0+255),w,b
  5722  000278  26D9               	addwf	fsr2l,f,c
  5723  00027A  0100               	movlb	0	; () banked
  5724  00027C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5725  00027E  22DA               	addwfc	fsr2h,f,c
  5726  000280  50DF               	movf	indf2,w,c
  5727  000282  0100               	movlb	0	; () banked
  5728  000284  5DB0               	subwf	??_i2c_int_handler& (0+255),w,b
  5729  000286  B0D8               	btfsc	status,0,c
  5730  000288  D0D5               	goto	L7
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  5734  00028A  0100               	movlb	0	; () banked
  5735  00028C  EE20 F01A          	lfsr	2,26
  5736  000290  0100               	movlb	0	; () banked
  5737  000292  51CC               	movf	_ic_ptr& (0+255),w,b
  5738  000294  26D9               	addwf	fsr2l,f,c
  5739  000296  0100               	movlb	0	; () banked
  5740  000298  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5741  00029A  22DA               	addwfc	fsr2h,f,c
  5742  00029C  50DF               	movf	indf2,w,c
  5743  00029E  0100               	movlb	0	; () banked
  5744  0002A0  6FB0               	movwf	??_i2c_int_handler& (0+255),b
  5745  0002A2  0100               	movlb	0	; () banked
  5746  0002A4  51B0               	movf	??_i2c_int_handler& (0+255),w,b
  5747  0002A6  0D01               	mullw	1
  5748  0002A8  0E0F               	movlw	15
  5749  0002AA  26F3               	addwf	prodl,f,c
  5750  0002AC  0E00               	movlw	0
  5751  0002AE  22F4               	addwfc	prodh,f,c
  5752  0002B0  50F3               	movf	prodl,w,c
  5753  0002B2  0100               	movlb	0	; () banked
  5754  0002B4  25CC               	addwf	_ic_ptr& (0+255),w,b
  5755  0002B6  6ED9               	movwf	fsr2l,c
  5756  0002B8  50F4               	movf	prodh,w,c
  5757  0002BA  0100               	movlb	0	; () banked
  5758  0002BC  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5759  0002BE  6EDA               	movwf	fsr2h,c
  5760  0002C0  50DF               	movf	indf2,w,c
  5761  0002C2  6EC9               	movwf	4041,c	;volatile
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  5765  0002C4  0100               	movlb	0	; () banked
  5766  0002C6  EE20 F01A          	lfsr	2,26
  5767  0002CA  0100               	movlb	0	; () banked
  5768  0002CC  51CC               	movf	_ic_ptr& (0+255),w,b
  5769  0002CE  26D9               	addwf	fsr2l,f,c
  5770  0002D0  0100               	movlb	0	; () banked
  5771  0002D2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5772  0002D4  22DA               	addwfc	fsr2h,f,c
  5773  0002D6  2ADF               	incf	indf2,f,c
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;my_i2c.c: 181: data_written = 1;
  5777  0002D8  0E01               	movlw	1
  5778  0002DA  0100               	movlb	0	; () banked
  5779  0002DC  6FB4               	movwf	i2c_int_handler@data_written& (0+255),b
  5780                           
  5781                           ;my_i2c.c: 182: } else {
  5782  0002DE  D0CB               	goto	i2l263
  5783  0002E0                     L5:
  5784  0002E0  6EDF               	movwf	indf2,c
  5785  0002E2  D0C9               	goto	i2l263
  5786  0002E4                     i2l283:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;my_i2c.c: 189: {
  5790                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  5791  0002E4  A8C7               	btfss	4039,4,c	;volatile
  5792  0002E6  D05A               	goto	i2l2974
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;my_i2c.c: 193: ic_ptr->event_count++;
  5796  0002E8  0100               	movlb	0	; () banked
  5797  0002EA  EE20 F00B          	lfsr	2,11
  5798  0002EE  0100               	movlb	0	; () banked
  5799  0002F0  51CC               	movf	_ic_ptr& (0+255),w,b
  5800  0002F2  26D9               	addwf	fsr2l,f,c
  5801  0002F4  0100               	movlb	0	; () banked
  5802  0002F6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5803  0002F8  22DA               	addwfc	fsr2h,f,c
  5804  0002FA  2ADF               	incf	indf2,f,c
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;my_i2c.c: 194: if (data_read) {
  5808  0002FC  0100               	movlb	0	; () banked
  5809  0002FE  51B9               	movf	i2c_int_handler@data_read& (0+255),w,b
  5810  000300  B4D8               	btfsc	status,2,c
  5811  000302  D048               	goto	i2l2970
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  5815  000304  AAC7               	btfss	4039,5,c	;volatile
  5816  000306  D025               	goto	i2l2968
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5820  000308  0100               	movlb	0	; () banked
  5821  00030A  EE20 F00A          	lfsr	2,10
  5822  00030E  0100               	movlb	0	; () banked
  5823  000310  51CC               	movf	_ic_ptr& (0+255),w,b
  5824  000312  26D9               	addwf	fsr2l,f,c
  5825  000314  0100               	movlb	0	; () banked
  5826  000316  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5827  000318  22DA               	addwfc	fsr2h,f,c
  5828  00031A  50DF               	movf	indf2,w,c
  5829  00031C  0100               	movlb	0	; () banked
  5830  00031E  6FB0               	movwf	??_i2c_int_handler& (0+255),b
  5831  000320  0100               	movlb	0	; () banked
  5832  000322  51B0               	movf	??_i2c_int_handler& (0+255),w,b
  5833  000324  0D01               	mullw	1
  5834  000326  50F3               	movf	prodl,w,c
  5835  000328  0100               	movlb	0	; () banked
  5836  00032A  25CC               	addwf	_ic_ptr& (0+255),w,b
  5837  00032C  6ED9               	movwf	fsr2l,c
  5838  00032E  50F4               	movf	prodh,w,c
  5839  000330  0100               	movlb	0	; () banked
  5840  000332  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5841  000334  6EDA               	movwf	fsr2h,c
  5842  000336  0100               	movlb	0	; () banked
  5843  000338  C0B6  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;my_i2c.c: 197: ic_ptr->buflen++;
  5847  00033C  0100               	movlb	0	; () banked
  5848  00033E  EE20 F00A          	lfsr	2,10
  5849  000342  0100               	movlb	0	; () banked
  5850  000344  51CC               	movf	_ic_ptr& (0+255),w,b
  5851  000346  26D9               	addwf	fsr2l,f,c
  5852  000348  0100               	movlb	0	; () banked
  5853  00034A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5854  00034C  22DA               	addwfc	fsr2h,f,c
  5855  00034E  2ADF               	incf	indf2,f,c
  5856  000350  D021               	goto	i2l2970
  5857  000352                     i2l2968:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;my_i2c.c: 200: ic_ptr->error_count++;
  5861  000352  0100               	movlb	0	; () banked
  5862  000354  EE20 F00E          	lfsr	2,14
  5863  000358  0100               	movlb	0	; () banked
  5864  00035A  51CC               	movf	_ic_ptr& (0+255),w,b
  5865  00035C  26D9               	addwf	fsr2l,f,c
  5866  00035E  0100               	movlb	0	; () banked
  5867  000360  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5868  000362  22DA               	addwfc	fsr2h,f,c
  5869  000364  2ADF               	incf	indf2,f,c
  5870                           
  5871                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  5872  000366  0100               	movlb	0	; () banked
  5873  000368  EE20 F00D          	lfsr	2,13
  5874  00036C  0100               	movlb	0	; () banked
  5875  00036E  51CC               	movf	_ic_ptr& (0+255),w,b
  5876  000370  26D9               	addwf	fsr2l,f,c
  5877  000372  0100               	movlb	0	; () banked
  5878  000374  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5879  000376  22DA               	addwfc	fsr2h,f,c
  5880  000378  0E06               	movlw	6
  5881  00037A  6EDF               	movwf	indf2,c
  5882                           
  5883                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  5884  00037C  0100               	movlb	0	; () banked
  5885  00037E  EE20 F00C          	lfsr	2,12
  5886  000382  0100               	movlb	0	; () banked
  5887  000384  51CC               	movf	_ic_ptr& (0+255),w,b
  5888  000386  26D9               	addwf	fsr2l,f,c
  5889  000388  0100               	movlb	0	; () banked
  5890  00038A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5891  00038C  22DA               	addwfc	fsr2h,f,c
  5892  00038E  0E05               	movlw	5
  5893  000390  6EDF               	movwf	indf2,c
  5894  000392  D050               	goto	L7
  5895  000394                     i2l2970:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;my_i2c.c: 205: msg_ready = 1;
  5899  000394  0E01               	movlw	1
  5900  000396  0100               	movlb	0	; () banked
  5901  000398  6FB8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5902                           
  5903                           ; BSR set to: 0
  5904  00039A  D04C               	goto	L7
  5905  00039C                     i2l2974:
  5906                           
  5907                           ; BSR set to: 0
  5908  00039C  0100               	movlb	0	; () banked
  5909  00039E  51B9               	movf	i2c_int_handler@data_read& (0+255),w,b
  5910  0003A0  B4D8               	btfsc	status,2,c
  5911  0003A2  D069               	goto	i2l263
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;my_i2c.c: 209: ic_ptr->event_count++;
  5915  0003A4  0100               	movlb	0	; () banked
  5916  0003A6  EE20 F00B          	lfsr	2,11
  5917  0003AA  0100               	movlb	0	; () banked
  5918  0003AC  51CC               	movf	_ic_ptr& (0+255),w,b
  5919  0003AE  26D9               	addwf	fsr2l,f,c
  5920  0003B0  0100               	movlb	0	; () banked
  5921  0003B2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5922  0003B4  22DA               	addwfc	fsr2h,f,c
  5923  0003B6  2ADF               	incf	indf2,f,c
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  5927  0003B8  AAC7               	btfss	4039,5,c	;volatile
  5928  0003BA  D025               	goto	i2l291
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5932  0003BC  0100               	movlb	0	; () banked
  5933  0003BE  EE20 F00A          	lfsr	2,10
  5934  0003C2  0100               	movlb	0	; () banked
  5935  0003C4  51CC               	movf	_ic_ptr& (0+255),w,b
  5936  0003C6  26D9               	addwf	fsr2l,f,c
  5937  0003C8  0100               	movlb	0	; () banked
  5938  0003CA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5939  0003CC  22DA               	addwfc	fsr2h,f,c
  5940  0003CE  50DF               	movf	indf2,w,c
  5941  0003D0  0100               	movlb	0	; () banked
  5942  0003D2  6FB0               	movwf	??_i2c_int_handler& (0+255),b
  5943  0003D4  0100               	movlb	0	; () banked
  5944  0003D6  51B0               	movf	??_i2c_int_handler& (0+255),w,b
  5945  0003D8  0D01               	mullw	1
  5946  0003DA  50F3               	movf	prodl,w,c
  5947  0003DC  0100               	movlb	0	; () banked
  5948  0003DE  25CC               	addwf	_ic_ptr& (0+255),w,b
  5949  0003E0  6ED9               	movwf	fsr2l,c
  5950  0003E2  50F4               	movf	prodh,w,c
  5951  0003E4  0100               	movlb	0	; () banked
  5952  0003E6  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5953  0003E8  6EDA               	movwf	fsr2h,c
  5954  0003EA  0100               	movlb	0	; () banked
  5955  0003EC  C0B6  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;my_i2c.c: 212: ic_ptr->buflen++;
  5959  0003F0  0100               	movlb	0	; () banked
  5960  0003F2  EE20 F00A          	lfsr	2,10
  5961  0003F6  0100               	movlb	0	; () banked
  5962  0003F8  51CC               	movf	_ic_ptr& (0+255),w,b
  5963  0003FA  26D9               	addwf	fsr2l,f,c
  5964  0003FC  0100               	movlb	0	; () banked
  5965  0003FE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5966  000400  22DA               	addwfc	fsr2h,f,c
  5967  000402  2ADF               	incf	indf2,f,c
  5968                           
  5969                           ;my_i2c.c: 213: } else {
  5970  000404  D038               	goto	i2l263
  5971  000406                     i2l291:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  5975  000406  A4C7               	btfss	4039,2,c	;volatile
  5976  000408  D6C7               	goto	i2l2926
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  5980  00040A  0100               	movlb	0	; () banked
  5981  00040C  EE20 F00C          	lfsr	2,12
  5982  000410  0100               	movlb	0	; () banked
  5983  000412  51CC               	movf	_ic_ptr& (0+255),w,b
  5984  000414  26D9               	addwf	fsr2l,f,c
  5985  000416  0100               	movlb	0	; () banked
  5986  000418  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  5987  00041A  22DA               	addwfc	fsr2h,f,c
  5988  00041C  0E08               	movlw	8
  5989  00041E  6EDF               	movwf	indf2,c
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;my_i2c.c: 216: msg_ready = 1;
  5993  000420  0E01               	movlw	1
  5994  000422  0100               	movlb	0	; () banked
  5995  000424  6FB8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5996  000426                     L4:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;my_i2c.c: 217: msg_to_send = 1;
  6000  000426  0E01               	movlw	1
  6001  000428  0100               	movlb	0	; () banked
  6002  00042A  6FB7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;my_i2c.c: 219: data_read = 0;
  6006  00042C  0E00               	movlw	0
  6007  00042E  0100               	movlb	0	; () banked
  6008  000430  6FB9               	movwf	i2c_int_handler@data_read& (0+255),b
  6009                           
  6010                           ;my_i2c.c: 220: } else {
  6011  000432  D021               	goto	i2l263
  6012  000434                     L7:
  6013                           
  6014                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  6015  000434  0100               	movlb	0	; () banked
  6016  000436  EE20 F00C          	lfsr	2,12
  6017  00043A  0100               	movlb	0	; () banked
  6018  00043C  51CC               	movf	_ic_ptr& (0+255),w,b
  6019  00043E  26D9               	addwf	fsr2l,f,c
  6020  000440  0100               	movlb	0	; () banked
  6021  000442  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6022  000444  22DA               	addwfc	fsr2h,f,c
  6023  000446  0E05               	movlw	5
  6024  000448  D74B               	goto	L5
  6025  00044A                     i2l2996:
  6026                           
  6027                           ; BSR set to: 0
  6028  00044A  0100               	movlb	0	; () banked
  6029  00044C  EE20 F00C          	lfsr	2,12
  6030  000450  0100               	movlb	0	; () banked
  6031  000452  51CC               	movf	_ic_ptr& (0+255),w,b
  6032  000454  26D9               	addwf	fsr2l,f,c
  6033  000456  0100               	movlb	0	; () banked
  6034  000458  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6035  00045A  22DA               	addwfc	fsr2h,f,c
  6036  00045C  50DF               	movf	indf2,w,c
  6037                           
  6038                           ; Switch size 1, requested type "space"
  6039                           ; Number of cases is 4, Range of values is 5 to 8
  6040                           ; switch strategies available:
  6041                           ; Name         Instructions Cycles
  6042                           ; simple_byte           13     7 (average)
  6043                           ;	Chosen strategy is simple_byte
  6044  00045E  0A05               	xorlw	5	; case 5
  6045  000460  B4D8               	btfsc	status,2,c
  6046  000462  D66B               	goto	i2l265
  6047  000464  0A03               	xorlw	3	; case 6
  6048  000466  B4D8               	btfsc	status,2,c
  6049  000468  D681               	goto	i2l269
  6050  00046A  0A01               	xorlw	1	; case 7
  6051  00046C  B4D8               	btfsc	status,2,c
  6052  00046E  D73A               	goto	i2l283
  6053  000470  0A0F               	xorlw	15	; case 8
  6054  000472  B4D8               	btfsc	status,2,c
  6055  000474  D6F0               	goto	i2l2946
  6056  000476                     i2l263:
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;my_i2c.c: 230: }
  6060                           ;my_i2c.c: 233: if (data_read || data_written) {
  6061  000476  0100               	movlb	0	; () banked
  6062  000478  67B9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6063  00047A  D004               	goto	i2l297
  6064                           
  6065                           ; BSR set to: 0
  6066  00047C  0100               	movlb	0	; () banked
  6067  00047E  51B4               	movf	i2c_int_handler@data_written& (0+255),w,b
  6068  000480  B4D8               	btfsc	status,2,c
  6069  000482  D002               	goto	i2l3002
  6070  000484                     i2l297:
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  6074  000484  A8C6               	btfss	4038,4,c	;volatile
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  6078  000486  88C6               	bsf	4038,4,c	;volatile
  6079  000488                     i2l3002:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;my_i2c.c: 237: }
  6083                           ;my_i2c.c: 238: }
  6084                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6085  000488  0100               	movlb	0	; () banked
  6086  00048A  EE20 F00A          	lfsr	2,10
  6087  00048E  0100               	movlb	0	; () banked
  6088  000490  51CC               	movf	_ic_ptr& (0+255),w,b
  6089  000492  26D9               	addwf	fsr2l,f,c
  6090  000494  0100               	movlb	0	; () banked
  6091  000496  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6092  000498  22DA               	addwfc	fsr2h,f,c
  6093  00049A  0E08               	movlw	8
  6094  00049C  64DF               	cpfsgt	indf2,c
  6095  00049E  D023               	goto	i2l3008
  6096                           
  6097                           ; BSR set to: 0
  6098  0004A0  0100               	movlb	0	; () banked
  6099  0004A2  67B8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6100  0004A4  D020               	goto	i2l3008
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  6104  0004A6  0100               	movlb	0	; () banked
  6105  0004A8  EE20 F00C          	lfsr	2,12
  6106  0004AC  0100               	movlb	0	; () banked
  6107  0004AE  51CC               	movf	_ic_ptr& (0+255),w,b
  6108  0004B0  26D9               	addwf	fsr2l,f,c
  6109  0004B2  0100               	movlb	0	; () banked
  6110  0004B4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6111  0004B6  22DA               	addwfc	fsr2h,f,c
  6112  0004B8  0E05               	movlw	5
  6113  0004BA  6EDF               	movwf	indf2,c
  6114                           
  6115                           ;my_i2c.c: 243: ic_ptr->error_count++;
  6116  0004BC  0100               	movlb	0	; () banked
  6117  0004BE  EE20 F00E          	lfsr	2,14
  6118  0004C2  0100               	movlb	0	; () banked
  6119  0004C4  51CC               	movf	_ic_ptr& (0+255),w,b
  6120  0004C6  26D9               	addwf	fsr2l,f,c
  6121  0004C8  0100               	movlb	0	; () banked
  6122  0004CA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6123  0004CC  22DA               	addwfc	fsr2h,f,c
  6124  0004CE  2ADF               	incf	indf2,f,c
  6125                           
  6126                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  6127  0004D0  0100               	movlb	0	; () banked
  6128  0004D2  EE20 F00D          	lfsr	2,13
  6129  0004D6  0100               	movlb	0	; () banked
  6130  0004D8  51CC               	movf	_ic_ptr& (0+255),w,b
  6131  0004DA  26D9               	addwf	fsr2l,f,c
  6132  0004DC  0100               	movlb	0	; () banked
  6133  0004DE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6134  0004E0  22DA               	addwfc	fsr2h,f,c
  6135  0004E2  0E07               	movlw	7
  6136  0004E4  6EDF               	movwf	indf2,c
  6137  0004E6                     i2l3008:
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;my_i2c.c: 245: }
  6141                           ;my_i2c.c: 247: if (msg_ready) {
  6142  0004E6  0100               	movlb	0	; () banked
  6143  0004E8  51B8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6144  0004EA  B4D8               	btfsc	status,2,c
  6145  0004EC  D03F               	goto	i2l3016
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6149  0004EE  0100               	movlb	0	; () banked
  6150  0004F0  EE20 F00B          	lfsr	2,11
  6151  0004F4  0100               	movlb	0	; () banked
  6152  0004F6  51CC               	movf	_ic_ptr& (0+255),w,b
  6153  0004F8  26D9               	addwf	fsr2l,f,c
  6154  0004FA  0100               	movlb	0	; () banked
  6155  0004FC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6156  0004FE  22DA               	addwfc	fsr2h,f,c
  6157  000500  0100               	movlb	0	; () banked
  6158  000502  EE10 F00A          	lfsr	1,10
  6159  000506  0100               	movlb	0	; () banked
  6160  000508  51CC               	movf	_ic_ptr& (0+255),w,b
  6161  00050A  26E1               	addwf	fsr1l,f,c
  6162  00050C  0100               	movlb	0	; () banked
  6163  00050E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6164  000510  22E2               	addwfc	fsr1h,f,c
  6165  000512  50E7               	movf	indf1,w,c
  6166  000514  0100               	movlb	0	; () banked
  6167  000516  6FB0               	movwf	??_i2c_int_handler& (0+255),b
  6168  000518  0100               	movlb	0	; () banked
  6169  00051A  51B0               	movf	??_i2c_int_handler& (0+255),w,b
  6170  00051C  0D01               	mullw	1
  6171  00051E  50F3               	movf	prodl,w,c
  6172  000520  0100               	movlb	0	; () banked
  6173  000522  25CC               	addwf	_ic_ptr& (0+255),w,b
  6174  000524  6EE1               	movwf	fsr1l,c
  6175  000526  50F4               	movf	prodh,w,c
  6176  000528  0100               	movlb	0	; () banked
  6177  00052A  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6178  00052C  6EE2               	movwf	fsr1h,c
  6179  00052E  CFDF FFE7          	movff	indf2,indf1
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6183  000532  0E28               	movlw	40
  6184  000534  0100               	movlb	0	; () banked
  6185  000536  6FAC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6186  000538  0100               	movlb	0	; () banked
  6187  00053A  C0CD  F0AE         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6188  00053E  0100               	movlb	0	; () banked
  6189  000540  C0CC  F0AD         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6190  000544  0100               	movlb	0	; () banked
  6191  000546  EE20 F00A          	lfsr	2,10
  6192  00054A  0100               	movlb	0	; () banked
  6193  00054C  51CC               	movf	_ic_ptr& (0+255),w,b
  6194  00054E  26D9               	addwf	fsr2l,f,c
  6195  000550  0100               	movlb	0	; () banked
  6196  000552  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6197  000554  22DA               	addwfc	fsr2h,f,c
  6198  000556  50DF               	movf	indf2,w,c
  6199  000558  0100               	movlb	0	; () banked
  6200  00055A  6FB0               	movwf	??_i2c_int_handler& (0+255),b
  6201  00055C  0100               	movlb	0	; () banked
  6202  00055E  29B0               	incf	??_i2c_int_handler& (0+255),w,b
  6203  000560  ECE6  F00A         	call	_ToMainHigh_sendmsg
  6204                           
  6205                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  6206  000564  0100               	movlb	0	; () banked
  6207  000566  EE20 F00A          	lfsr	2,10
  6208  00056A  D041               	goto	L6
  6209  00056C                     i2l3016:
  6210                           
  6211                           ; BSR set to: 0
  6212  00056C  0100               	movlb	0	; () banked
  6213  00056E  EE20 F00E          	lfsr	2,14
  6214  000572  0100               	movlb	0	; () banked
  6215  000574  51CC               	movf	_ic_ptr& (0+255),w,b
  6216  000576  26D9               	addwf	fsr2l,f,c
  6217  000578  0100               	movlb	0	; () banked
  6218  00057A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6219  00057C  22DA               	addwfc	fsr2h,f,c
  6220  00057E  50DF               	movf	indf2,w,c
  6221  000580  B4D8               	btfsc	status,2,c
  6222  000582  D03D               	goto	i2l3024
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  6226  000584  0100               	movlb	0	; () banked
  6227  000586  EE20 F00E          	lfsr	2,14
  6228  00058A  0100               	movlb	0	; () banked
  6229  00058C  51CC               	movf	_ic_ptr& (0+255),w,b
  6230  00058E  26D9               	addwf	fsr2l,f,c
  6231  000590  0100               	movlb	0	; () banked
  6232  000592  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6233  000594  22DA               	addwfc	fsr2h,f,c
  6234  000596  50DF               	movf	indf2,w,c
  6235  000598  0100               	movlb	0	; () banked
  6236  00059A  6FB1               	movwf	i2c_int_handler@error_buf& (0+255),b
  6237                           
  6238                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  6239  00059C  0100               	movlb	0	; () banked
  6240  00059E  EE20 F00D          	lfsr	2,13
  6241  0005A2  0100               	movlb	0	; () banked
  6242  0005A4  51CC               	movf	_ic_ptr& (0+255),w,b
  6243  0005A6  26D9               	addwf	fsr2l,f,c
  6244  0005A8  0100               	movlb	0	; () banked
  6245  0005AA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6246  0005AC  22DA               	addwfc	fsr2h,f,c
  6247  0005AE  50DF               	movf	indf2,w,c
  6248  0005B0  0100               	movlb	0	; () banked
  6249  0005B2  6FB2               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6250                           
  6251                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  6252  0005B4  0100               	movlb	0	; () banked
  6253  0005B6  EE20 F00B          	lfsr	2,11
  6254  0005BA  0100               	movlb	0	; () banked
  6255  0005BC  51CC               	movf	_ic_ptr& (0+255),w,b
  6256  0005BE  26D9               	addwf	fsr2l,f,c
  6257  0005C0  0100               	movlb	0	; () banked
  6258  0005C2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6259  0005C4  22DA               	addwfc	fsr2h,f,c
  6260  0005C6  50DF               	movf	indf2,w,c
  6261  0005C8  0100               	movlb	0	; () banked
  6262  0005CA  6FB3               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6266  0005CC  0E29               	movlw	41
  6267  0005CE  0100               	movlb	0	; () banked
  6268  0005D0  6FAC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6269  0005D2  0100               	movlb	0	; () banked
  6270  0005D4  0E00               	movlw	high i2c_int_handler@error_buf
  6271  0005D6  0100               	movlb	0	; () banked
  6272  0005D8  6FAE               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6273  0005DA  0100               	movlb	0	; () banked
  6274  0005DC  0EB1               	movlw	low i2c_int_handler@error_buf
  6275  0005DE  0100               	movlb	0	; () banked
  6276  0005E0  6FAD               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6277  0005E2  0E03               	movlw	3
  6278  0005E4  ECE6  F00A         	call	_ToMainHigh_sendmsg
  6279                           
  6280                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  6281  0005E8  0100               	movlb	0	; () banked
  6282  0005EA  EE20 F00E          	lfsr	2,14
  6283  0005EE                     L6:
  6284  0005EE  0100               	movlb	0	; () banked
  6285  0005F0  51CC               	movf	_ic_ptr& (0+255),w,b
  6286  0005F2  26D9               	addwf	fsr2l,f,c
  6287  0005F4  0100               	movlb	0	; () banked
  6288  0005F6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6289  0005F8  22DA               	addwfc	fsr2h,f,c
  6290  0005FA  0E00               	movlw	0
  6291  0005FC  6EDF               	movwf	indf2,c
  6292  0005FE                     i2l3024:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;my_i2c.c: 257: }
  6296                           ;my_i2c.c: 258: if (msg_to_send) {
  6297  0005FE  0100               	movlb	0	; () banked
  6298  000600  51B7               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6299  000602  B4D8               	btfsc	status,2,c
  6300  000604  0012               	return	
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  6304  000606  0E2A               	movlw	42
  6305  000608  0100               	movlb	0	; () banked
  6306  00060A  6FAC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6307  00060C  0100               	movlb	0	; () banked
  6308  00060E  C0CD  F0AE         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6309  000612  0100               	movlb	0	; () banked
  6310  000614  C0CC  F0AD         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6311  000618  0E00               	movlw	0
  6312  00061A  ECE6  F00A         	call	_ToMainHigh_sendmsg
  6313                           
  6314                           ;my_i2c.c: 261: msg_to_send = 0;
  6315  00061E  0E00               	movlw	0
  6316  000620  0100               	movlb	0	; () banked
  6317  000622  6FB7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6318  000624  0012               	return	
  6319  000626                     __end_of_i2c_int_handler:
  6320                           	opt stack 0
  6321                           pclatu	equ	0xFFB
  6322                           pclath	equ	0xFFA
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           intcon	equ	0xFF2
  6330                           postinc0	equ	0xFEE
  6331                           fsr0h	equ	0xFEA
  6332                           fsr0l	equ	0xFE9
  6333                           wreg	equ	0xFE8
  6334                           indf1	equ	0xFE7
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           bsr	equ	0xFE0
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _handle_start *****************
  6346 ;; Defined at:
  6347 ;;		line 71 in file "../src/my_i2c.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  data_read       1    wreg     unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  data_read       1    0[BANK0 ] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;		None               void
  6354 ;; Registers used:
  6355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_i2c_int_handler
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text38
  6375  000D90                     __ptext38:
  6376                           	opt stack 0
  6377  000D90                     _handle_start:
  6378                           	opt stack 19
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;incstack = 0
  6382                           ;handle_start@data_read stored from wreg
  6383  000D90  0100               	movlb	0	; () banked
  6384  000D92  6F96               	movwf	handle_start@data_read& (0+255),b
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  6388  000D94  0100               	movlb	0	; () banked
  6389  000D96  EE20 F00B          	lfsr	2,11
  6390  000D9A  0100               	movlb	0	; () banked
  6391  000D9C  51CC               	movf	_ic_ptr& (0+255),w,b
  6392  000D9E  26D9               	addwf	fsr2l,f,c
  6393  000DA0  0100               	movlb	0	; () banked
  6394  000DA2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6395  000DA4  22DA               	addwfc	fsr2h,f,c
  6396  000DA6  0E01               	movlw	1
  6397  000DA8  6EDF               	movwf	indf2,c
  6398                           
  6399                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  6400  000DAA  0100               	movlb	0	; () banked
  6401  000DAC  EE20 F00A          	lfsr	2,10
  6402  000DB0  0100               	movlb	0	; () banked
  6403  000DB2  51CC               	movf	_ic_ptr& (0+255),w,b
  6404  000DB4  26D9               	addwf	fsr2l,f,c
  6405  000DB6  0100               	movlb	0	; () banked
  6406  000DB8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6407  000DBA  22DA               	addwfc	fsr2h,f,c
  6408  000DBC  0E00               	movlw	0
  6409  000DBE  6EDF               	movwf	indf2,c
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;my_i2c.c: 75: if (data_read) {
  6413  000DC0  0100               	movlb	0	; () banked
  6414  000DC2  5196               	movf	handle_start@data_read& (0+255),w,b
  6415  000DC4  B4D8               	btfsc	status,2,c
  6416  000DC6  D03D               	goto	i2l2852
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  6420  000DC8  AAC7               	btfss	4039,5,c	;volatile
  6421  000DCA  D021               	goto	i2l253
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  6425  000DCC  0100               	movlb	0	; () banked
  6426  000DCE  EE20 F00C          	lfsr	2,12
  6427  000DD2  0100               	movlb	0	; () banked
  6428  000DD4  51CC               	movf	_ic_ptr& (0+255),w,b
  6429  000DD6  26D9               	addwf	fsr2l,f,c
  6430  000DD8  0100               	movlb	0	; () banked
  6431  000DDA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6432  000DDC  22DA               	addwfc	fsr2h,f,c
  6433  000DDE  0E05               	movlw	5
  6434  000DE0  6EDF               	movwf	indf2,c
  6435                           
  6436                           ;my_i2c.c: 80: ic_ptr->error_count++;
  6437  000DE2  0100               	movlb	0	; () banked
  6438  000DE4  EE20 F00E          	lfsr	2,14
  6439  000DE8  0100               	movlb	0	; () banked
  6440  000DEA  51CC               	movf	_ic_ptr& (0+255),w,b
  6441  000DEC  26D9               	addwf	fsr2l,f,c
  6442  000DEE  0100               	movlb	0	; () banked
  6443  000DF0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6444  000DF2  22DA               	addwfc	fsr2h,f,c
  6445  000DF4  2ADF               	incf	indf2,f,c
  6446                           
  6447                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  6448  000DF6  0100               	movlb	0	; () banked
  6449  000DF8  EE20 F00D          	lfsr	2,13
  6450  000DFC  0100               	movlb	0	; () banked
  6451  000DFE  51CC               	movf	_ic_ptr& (0+255),w,b
  6452  000E00  26D9               	addwf	fsr2l,f,c
  6453  000E02  0100               	movlb	0	; () banked
  6454  000E04  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6455  000E06  22DA               	addwfc	fsr2h,f,c
  6456  000E08  0E05               	movlw	5
  6457  000E0A  6EDF               	movwf	indf2,c
  6458                           
  6459                           ;my_i2c.c: 82: } else {
  6460  000E0C  0012               	return	
  6461  000E0E                     i2l253:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  6465  000E0E  A4C7               	btfss	4039,2,c	;volatile
  6466  000E10  D00C               	goto	i2l2850
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  6470  000E12  0100               	movlb	0	; () banked
  6471  000E14  EE20 F00C          	lfsr	2,12
  6472  000E18  0100               	movlb	0	; () banked
  6473  000E1A  51CC               	movf	_ic_ptr& (0+255),w,b
  6474  000E1C  26D9               	addwf	fsr2l,f,c
  6475  000E1E  0100               	movlb	0	; () banked
  6476  000E20  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6477  000E22  22DA               	addwfc	fsr2h,f,c
  6478  000E24  0E08               	movlw	8
  6479  000E26  6EDF               	movwf	indf2,c
  6480                           
  6481                           ;my_i2c.c: 85: } else {
  6482  000E28  0012               	return	
  6483  000E2A                     i2l2850:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  6487  000E2A  0100               	movlb	0	; () banked
  6488  000E2C  EE20 F00C          	lfsr	2,12
  6489  000E30  0100               	movlb	0	; () banked
  6490  000E32  51CC               	movf	_ic_ptr& (0+255),w,b
  6491  000E34  26D9               	addwf	fsr2l,f,c
  6492  000E36  0100               	movlb	0	; () banked
  6493  000E38  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6494  000E3A  22DA               	addwfc	fsr2h,f,c
  6495  000E3C  0E07               	movlw	7
  6496  000E3E  6EDF               	movwf	indf2,c
  6497  000E40  0012               	return	
  6498  000E42                     i2l2852:
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  6502  000E42  0100               	movlb	0	; () banked
  6503  000E44  EE20 F00C          	lfsr	2,12
  6504  000E48  0100               	movlb	0	; () banked
  6505  000E4A  51CC               	movf	_ic_ptr& (0+255),w,b
  6506  000E4C  26D9               	addwf	fsr2l,f,c
  6507  000E4E  0100               	movlb	0	; () banked
  6508  000E50  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  6509  000E52  22DA               	addwfc	fsr2h,f,c
  6510  000E54  0E06               	movlw	6
  6511  000E56  6EDF               	movwf	indf2,c
  6512  000E58  0012               	return	
  6513  000E5A                     __end_of_handle_start:
  6514                           	opt stack 0
  6515                           pclatu	equ	0xFFB
  6516                           pclath	equ	0xFFA
  6517                           tblptru	equ	0xFF8
  6518                           tblptrh	equ	0xFF7
  6519                           tblptrl	equ	0xFF6
  6520                           tablat	equ	0xFF5
  6521                           prodh	equ	0xFF4
  6522                           prodl	equ	0xFF3
  6523                           intcon	equ	0xFF2
  6524                           postinc0	equ	0xFEE
  6525                           fsr0h	equ	0xFEA
  6526                           fsr0l	equ	0xFE9
  6527                           wreg	equ	0xFE8
  6528                           indf1	equ	0xFE7
  6529                           fsr1h	equ	0xFE2
  6530                           fsr1l	equ	0xFE1
  6531                           bsr	equ	0xFE0
  6532                           indf2	equ	0xFDF
  6533                           postinc2	equ	0xFDE
  6534                           postdec2	equ	0xFDD
  6535                           fsr2h	equ	0xFDA
  6536                           fsr2l	equ	0xFD9
  6537                           status	equ	0xFD8
  6538                           
  6539 ;; *************** function _ToMainHigh_sendmsg *****************
  6540 ;; Defined at:
  6541 ;;		line 126 in file "../src/messages.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  length          1    wreg     unsigned char 
  6544 ;;  msgtype         1   22[BANK0 ] unsigned char 
  6545 ;;  data            2   23[BANK0 ] PTR void 
  6546 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  length          1   25[BANK0 ] unsigned char 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      char 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6558 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6562 ;;Total ram usage:        4 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    2
  6565 ;; This function calls:
  6566 ;;		i2_send_msg
  6567 ;; This function is called by:
  6568 ;;		_i2c_int_handler
  6569 ;;		_timer0_int_handler
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text39
  6574  0015CC                     __ptext39:
  6575                           	opt stack 0
  6576  0015CC                     _ToMainHigh_sendmsg:
  6577                           	opt stack 17
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;incstack = 0
  6581                           ;ToMainHigh_sendmsg@length stored from wreg
  6582  0015CC  0100               	movlb	0	; () banked
  6583  0015CE  6FAF               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6587                           ;	Return value of _ToMainHigh_sendmsg is never used
  6588  0015D0  0101               	movlb	1	; () banked
  6589  0015D2  0E01               	movlw	high _ToMainHigh_MQ
  6590  0015D4  0100               	movlb	0	; () banked
  6591  0015D6  6FA1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  6592  0015D8  0101               	movlb	1	; () banked
  6593  0015DA  0E6C               	movlw	low _ToMainHigh_MQ
  6594  0015DC  0100               	movlb	0	; () banked
  6595  0015DE  6FA0               	movwf	i2send_msg@qptr& (0+255),b
  6596  0015E0  C0AF  F0A2         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  6597  0015E4  C0AC  F0A3         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6598  0015E8  0100               	movlb	0	; () banked
  6599  0015EA  C0AE  F0A5         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6600  0015EE  0100               	movlb	0	; () banked
  6601  0015F0  C0AD  F0A4         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  6602  0015F4  EC52  F006         	call	i2_send_msg	;wreg free
  6603  0015F8  0012               	return	
  6604  0015FA                     __end_of_ToMainHigh_sendmsg:
  6605                           	opt stack 0
  6606                           pclatu	equ	0xFFB
  6607                           pclath	equ	0xFFA
  6608                           tblptru	equ	0xFF8
  6609                           tblptrh	equ	0xFF7
  6610                           tblptrl	equ	0xFF6
  6611                           tablat	equ	0xFF5
  6612                           prodh	equ	0xFF4
  6613                           prodl	equ	0xFF3
  6614                           intcon	equ	0xFF2
  6615                           postinc0	equ	0xFEE
  6616                           fsr0h	equ	0xFEA
  6617                           fsr0l	equ	0xFE9
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           fsr1h	equ	0xFE2
  6621                           fsr1l	equ	0xFE1
  6622                           bsr	equ	0xFE0
  6623                           indf2	equ	0xFDF
  6624                           postinc2	equ	0xFDE
  6625                           postdec2	equ	0xFDD
  6626                           fsr2h	equ	0xFDA
  6627                           fsr2l	equ	0xFD9
  6628                           status	equ	0xFD8
  6629                           
  6630 ;; *************** function i2_send_msg *****************
  6631 ;; Defined at:
  6632 ;;		line 24 in file "../src/messages.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  6635 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6636 ;;  length          1   12[BANK0 ] unsigned char 
  6637 ;;  msgtype         1   13[BANK0 ] unsigned char 
  6638 ;;  data            2   14[BANK0 ] PTR void 
  6639 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  6640 ;;		 -> main@ic(28), main@uc(5), 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  6643 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6644 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6645 ;;  send_msg        2   17[BANK0 ] unsigned int 
  6646 ;;  send_msg        1   19[BANK0 ] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      char 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;Total ram usage:       12 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    1
  6663 ;; This function calls:
  6664 ;;		i2_memcpy
  6665 ;; This function is called by:
  6666 ;;		_ToMainHigh_sendmsg
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text40
  6671  000CA4                     __ptext40:
  6672                           	opt stack 0
  6673  000CA4                     i2_send_msg:
  6674                           	opt stack 17
  6675                           
  6676                           ;messages.c: 25: unsigned char slot;
  6677                           ;messages.c: 27: msg *qmsg;
  6678                           ;messages.c: 28: size_t tlength = length;
  6679                           
  6680                           ;incstack = 0
  6681  000CA4  0100               	movlb	0	; () banked
  6682  000CA6  C0A2  F0A7         	movff	i2send_msg@length,i2send_msg@tlength
  6683  000CAA  0100               	movlb	0	; () banked
  6684  000CAC  6BA8               	clrf	(i2send_msg@tlength+1)& (0+255),b
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6688  000CAE  0100               	movlb	0	; () banked
  6689  000CB0  EE20 F034          	lfsr	2,52
  6690  000CB4  0100               	movlb	0	; () banked
  6691  000CB6  51A0               	movf	i2send_msg@qptr& (0+255),w,b
  6692  000CB8  26D9               	addwf	fsr2l,f,c
  6693  000CBA  0100               	movlb	0	; () banked
  6694  000CBC  51A1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6695  000CBE  22DA               	addwfc	fsr2h,f,c
  6696  000CC0  50DF               	movf	indf2,w,c
  6697  000CC2  0100               	movlb	0	; () banked
  6698  000CC4  6FA9               	movwf	i2send_msg@slot& (0+255),b
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6702  000CC6  0100               	movlb	0	; () banked
  6703  000CC8  51A9               	movf	i2send_msg@slot& (0+255),w,b
  6704  000CCA  0D0D               	mullw	13
  6705  000CCC  50F3               	movf	prodl,w,c
  6706  000CCE  0100               	movlb	0	; () banked
  6707  000CD0  25A0               	addwf	i2send_msg@qptr& (0+255),w,b
  6708  000CD2  0100               	movlb	0	; () banked
  6709  000CD4  6FAA               	movwf	i2send_msg@qmsg& (0+255),b
  6710  000CD6  50F4               	movf	prodh,w,c
  6711  000CD8  0100               	movlb	0	; () banked
  6712  000CDA  21A1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  6713  000CDC  0100               	movlb	0	; () banked
  6714  000CDE  6FAB               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;messages.c: 41: if (qmsg->full != 0) {
  6718  000CE0  C0AA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6719  000CE4  C0AB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6720  000CE8  50DF               	movf	indf2,w,c
  6721  000CEA  B4D8               	btfsc	status,2,c
  6722  000CEC  D002               	goto	i2l2714
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;messages.c: 42: return (-1);
  6726  000CEE  0EFF               	movlw	255
  6727  000CF0  0012               	return	
  6728  000CF2                     i2l2714:
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;messages.c: 43: }
  6732                           ;messages.c: 46: qmsg->length = length;
  6733  000CF2  0100               	movlb	0	; () banked
  6734  000CF4  EE20 F001          	lfsr	2,1
  6735  000CF8  0100               	movlb	0	; () banked
  6736  000CFA  51AA               	movf	i2send_msg@qmsg& (0+255),w,b
  6737  000CFC  26D9               	addwf	fsr2l,f,c
  6738  000CFE  0100               	movlb	0	; () banked
  6739  000D00  51AB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6740  000D02  22DA               	addwfc	fsr2h,f,c
  6741  000D04  0100               	movlb	0	; () banked
  6742  000D06  C0A2  FFDF         	movff	i2send_msg@length,indf2
  6743                           
  6744                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6745  000D0A  0100               	movlb	0	; () banked
  6746  000D0C  EE20 F002          	lfsr	2,2
  6747  000D10  0100               	movlb	0	; () banked
  6748  000D12  51AA               	movf	i2send_msg@qmsg& (0+255),w,b
  6749  000D14  26D9               	addwf	fsr2l,f,c
  6750  000D16  0100               	movlb	0	; () banked
  6751  000D18  51AB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6752  000D1A  22DA               	addwfc	fsr2h,f,c
  6753  000D1C  0100               	movlb	0	; () banked
  6754  000D1E  C0A3  FFDF         	movff	i2send_msg@msgtype,indf2
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6758  000D22  0E03               	movlw	3
  6759  000D24  0100               	movlb	0	; () banked
  6760  000D26  25AA               	addwf	i2send_msg@qmsg& (0+255),w,b
  6761  000D28  0100               	movlb	0	; () banked
  6762  000D2A  6F96               	movwf	i2memcpy@d1& (0+255),b
  6763  000D2C  0E00               	movlw	0
  6764  000D2E  0100               	movlb	0	; () banked
  6765  000D30  21AB               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  6766  000D32  0100               	movlb	0	; () banked
  6767  000D34  6F97               	movwf	(i2memcpy@d1+1)& (0+255),b
  6768  000D36  0100               	movlb	0	; () banked
  6769  000D38  C0A5  F099         	movff	i2send_msg@data+1,i2memcpy@s1+1
  6770  000D3C  0100               	movlb	0	; () banked
  6771  000D3E  C0A4  F098         	movff	i2send_msg@data,i2memcpy@s1
  6772  000D42  C0A7  F09A         	movff	i2send_msg@tlength,i2memcpy@n
  6773  000D46  C0A8  F09B         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  6774  000D4A  ECC7  F009         	call	i2_memcpy	;wreg free
  6775                           
  6776                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6777  000D4E  0100               	movlb	0	; () banked
  6778  000D50  EE20 F034          	lfsr	2,52
  6779  000D54  0100               	movlb	0	; () banked
  6780  000D56  51A0               	movf	i2send_msg@qptr& (0+255),w,b
  6781  000D58  26D9               	addwf	fsr2l,f,c
  6782  000D5A  0100               	movlb	0	; () banked
  6783  000D5C  51A1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6784  000D5E  22DA               	addwfc	fsr2h,f,c
  6785  000D60  0100               	movlb	0	; () banked
  6786  000D62  EE10 F034          	lfsr	1,52
  6787  000D66  0100               	movlb	0	; () banked
  6788  000D68  51A0               	movf	i2send_msg@qptr& (0+255),w,b
  6789  000D6A  26E1               	addwf	fsr1l,f,c
  6790  000D6C  0100               	movlb	0	; () banked
  6791  000D6E  51A1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6792  000D70  22E2               	addwfc	fsr1h,f,c
  6793  000D72  50E7               	movf	indf1,w,c
  6794  000D74  0100               	movlb	0	; () banked
  6795  000D76  6FA6               	movwf	??i2_send_msg& (0+255),b
  6796  000D78  0100               	movlb	0	; () banked
  6797  000D7A  29A6               	incf	??i2_send_msg& (0+255),w,b
  6798  000D7C  0B03               	andlw	3
  6799  000D7E  6EDF               	movwf	indf2,c
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;messages.c: 59: qmsg->full = 1;
  6803  000D80  C0AA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6804  000D84  C0AB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6805  000D88  0E01               	movlw	1
  6806  000D8A  6EDF               	movwf	indf2,c
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;messages.c: 60: return (1);
  6810  000D8C  0E01               	movlw	1
  6811  000D8E  0012               	return	
  6812  000D90                     __end_ofi2_send_msg:
  6813                           	opt stack 0
  6814                           pclatu	equ	0xFFB
  6815                           pclath	equ	0xFFA
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           prodh	equ	0xFF4
  6821                           prodl	equ	0xFF3
  6822                           intcon	equ	0xFF2
  6823                           postinc0	equ	0xFEE
  6824                           fsr0h	equ	0xFEA
  6825                           fsr0l	equ	0xFE9
  6826                           wreg	equ	0xFE8
  6827                           indf1	equ	0xFE7
  6828                           fsr1h	equ	0xFE2
  6829                           fsr1l	equ	0xFE1
  6830                           bsr	equ	0xFE0
  6831                           indf2	equ	0xFDF
  6832                           postinc2	equ	0xFDE
  6833                           postdec2	equ	0xFDD
  6834                           fsr2h	equ	0xFDA
  6835                           fsr2l	equ	0xFD9
  6836                           status	equ	0xFD8
  6837                           
  6838 ;; *************** function i2_memcpy *****************
  6839 ;; Defined at:
  6840 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  d1              2    0[BANK0 ] PTR void 
  6843 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6844 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6845 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6846 ;;  s1              2    2[BANK0 ] PTR const void 
  6847 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6848 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6849 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6850 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  6851 ;;		 -> main@ic(28), main@uc(5), 
  6852 ;;  n               2    4[BANK0 ] unsigned int 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  6855 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6856 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6857 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6858 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  6859 ;;		 -> main@ic(28), main@uc(5), 
  6860 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  6861 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6862 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6863 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  2    0[BANK0 ] PTR void 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6873 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6874 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6876 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;Total ram usage:       10 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		i2_send_msg
  6883 ;;		i2_recv_msg
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text41
  6888  00138E                     __ptext41:
  6889                           	opt stack 0
  6890  00138E                     i2_memcpy:
  6891                           	opt stack 17
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;incstack = 0
  6895  00138E  0100               	movlb	0	; () banked
  6896  001390  C099  F09F         	movff	i2memcpy@s1+1,i2memcpy@s+1
  6897  001394  0100               	movlb	0	; () banked
  6898  001396  C098  F09E         	movff	i2memcpy@s1,i2memcpy@s
  6899  00139A  0100               	movlb	0	; () banked
  6900  00139C  C097  F09D         	movff	i2memcpy@d1+1,i2memcpy@d+1
  6901  0013A0  0100               	movlb	0	; () banked
  6902  0013A2  C096  F09C         	movff	i2memcpy@d1,i2memcpy@d
  6903  0013A6  D010               	goto	i2l2672
  6904  0013A8                     i2l2666:
  6905                           
  6906                           ; BSR set to: 0
  6907  0013A8  C09E  FFD9         	movff	i2memcpy@s,fsr2l
  6908  0013AC  C09F  FFDA         	movff	i2memcpy@s+1,fsr2h
  6909  0013B0  C09C  FFE1         	movff	i2memcpy@d,fsr1l
  6910  0013B4  C09D  FFE2         	movff	i2memcpy@d+1,fsr1h
  6911  0013B8  CFDF FFE7          	movff	indf2,indf1
  6912                           
  6913                           ; BSR set to: 0
  6914  0013BC  0100               	movlb	0	; () banked
  6915  0013BE  4B9E               	infsnz	i2memcpy@s& (0+255),f,b
  6916  0013C0  2B9F               	incf	(i2memcpy@s+1)& (0+255),f,b
  6917                           
  6918                           ; BSR set to: 0
  6919  0013C2  0100               	movlb	0	; () banked
  6920  0013C4  4B9C               	infsnz	i2memcpy@d& (0+255),f,b
  6921  0013C6  2B9D               	incf	(i2memcpy@d+1)& (0+255),f,b
  6922  0013C8                     i2l2672:
  6923                           
  6924                           ; BSR set to: 0
  6925  0013C8  0100               	movlb	0	; () banked
  6926  0013CA  079A               	decf	i2memcpy@n& (0+255),f,b
  6927  0013CC  A0D8               	btfss	status,0,c
  6928  0013CE  079B               	decf	(i2memcpy@n+1)& (0+255),f,b
  6929  0013D0  0100               	movlb	0	; () banked
  6930  0013D2  299A               	incf	i2memcpy@n& (0+255),w,b
  6931  0013D4  B4D8               	btfsc	status,2,c
  6932  0013D6  299B               	incf	(i2memcpy@n+1)& (0+255),w,b
  6933  0013D8  B4D8               	btfsc	status,2,c
  6934                           
  6935                           ; BSR set to: 0
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;	Return value of i2_memcpy is never used
  6939  0013DA  0012               	return	
  6940  0013DC  D7E5               	goto	i2l2666
  6941  0013DE                     __end_ofi2_memcpy:
  6942                           	opt stack 0
  6943                           pclatu	equ	0xFFB
  6944                           pclath	equ	0xFFA
  6945                           tblptru	equ	0xFF8
  6946                           tblptrh	equ	0xFF7
  6947                           tblptrl	equ	0xFF6
  6948                           tablat	equ	0xFF5
  6949                           prodh	equ	0xFF4
  6950                           prodl	equ	0xFF3
  6951                           intcon	equ	0xFF2
  6952                           postinc0	equ	0xFEE
  6953                           fsr0h	equ	0xFEA
  6954                           fsr0l	equ	0xFE9
  6955                           wreg	equ	0xFE8
  6956                           indf1	equ	0xFE7
  6957                           fsr1h	equ	0xFE2
  6958                           fsr1l	equ	0xFE1
  6959                           bsr	equ	0xFE0
  6960                           indf2	equ	0xFDF
  6961                           postinc2	equ	0xFDE
  6962                           postdec2	equ	0xFDD
  6963                           fsr2h	equ	0xFDA
  6964                           fsr2l	equ	0xFD9
  6965                           status	equ	0xFD8
  6966                           
  6967 ;; *************** function _SleepIfOkay *****************
  6968 ;; Defined at:
  6969 ;;		line 226 in file "../src/messages.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;		None               void
  6976 ;; Registers used:
  6977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;Total ram usage:        0 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    2
  6990 ;; This function calls:
  6991 ;;		_check_msg
  6992 ;;		_enter_sleep_mode
  6993 ;;		_in_high_int
  6994 ;;		_in_low_int
  6995 ;; This function is called by:
  6996 ;;		_InterruptHandlerHigh
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text42
  7001  001282                     __ptext42:
  7002                           	opt stack 0
  7003  001282                     _SleepIfOkay:
  7004                           	opt stack 18
  7005                           
  7006                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;incstack = 0
  7010  001282  662E               	tstfsz	_MQ_Main_Willing_to_block,c
  7011  001284  D001               	goto	i2l3042
  7012  001286  0012               	return	
  7013  001288                     i2l3042:
  7014                           
  7015                           ;messages.c: 230: }
  7016                           ;messages.c: 233: if (in_low_int()) {
  7017  001288  EC0F  F00A         	call	_in_low_int	;wreg free
  7018  00128C  0100               	movlb	0	; () banked
  7019  00128E  5199               	movf	(?_in_low_int+1)& (0+255),w,b
  7020  001290  0100               	movlb	0	; () banked
  7021  001292  1198               	iorwf	?_in_low_int& (0+255),w,b
  7022  001294  A4D8               	btfss	status,2,c
  7023  001296  0012               	return	
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;messages.c: 235: }
  7027                           ;messages.c: 238: if (!in_high_int()) {
  7028                           
  7029                           ; BSR set to: 0
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;messages.c: 234: return;
  7033  001298  ECB5  F00B         	call	_in_high_int	;wreg free
  7034  00129C  0100               	movlb	0	; () banked
  7035  00129E  5197               	movf	(?_in_high_int+1)& (0+255),w,b
  7036  0012A0  0100               	movlb	0	; () banked
  7037  0012A2  1196               	iorwf	?_in_high_int& (0+255),w,b
  7038  0012A4  B4D8               	btfsc	status,2,c
  7039  0012A6  0012               	return	
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;messages.c: 240: }
  7043                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  7044                           
  7045                           ; BSR set to: 0
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;messages.c: 239: return;
  7049  0012A8  0101               	movlb	1	; () banked
  7050  0012AA  0E01               	movlw	high _ToMainHigh_MQ
  7051  0012AC  0100               	movlb	0	; () banked
  7052  0012AE  6F97               	movwf	(check_msg@qptr+1)& (0+255),b
  7053  0012B0  0101               	movlb	1	; () banked
  7054  0012B2  0E6C               	movlw	low _ToMainHigh_MQ
  7055  0012B4  0100               	movlb	0	; () banked
  7056  0012B6  6F96               	movwf	check_msg@qptr& (0+255),b
  7057  0012B8  ECB6  F00A         	call	_check_msg	;wreg free
  7058  0012BC  0900               	iorlw	0
  7059  0012BE  A4D8               	btfss	status,2,c
  7060  0012C0  0012               	return	
  7061                           
  7062                           ;messages.c: 247: }
  7063                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  7064                           
  7065                           ;messages.c: 246: return;
  7066  0012C2  0100               	movlb	0	; () banked
  7067  0012C4  0E00               	movlw	high _ToMainLow_MQ
  7068  0012C6  0100               	movlb	0	; () banked
  7069  0012C8  6F97               	movwf	(check_msg@qptr+1)& (0+255),b
  7070  0012CA  0100               	movlb	0	; () banked
  7071  0012CC  0E60               	movlw	low _ToMainLow_MQ
  7072  0012CE  0100               	movlb	0	; () banked
  7073  0012D0  6F96               	movwf	check_msg@qptr& (0+255),b
  7074  0012D2  ECB6  F00A         	call	_check_msg	;wreg free
  7075  0012D6  0900               	iorlw	0
  7076  0012D8  B4D8               	btfsc	status,2,c
  7077                           
  7078                           ;messages.c: 250: }
  7079                           ;messages.c: 251: enter_sleep_mode();
  7080                           
  7081                           ;messages.c: 249: return;
  7082  0012DA  ECC1  F00B         	call	_enter_sleep_mode	;wreg free
  7083  0012DE  0012               	return	
  7084  0012E0                     __end_of_SleepIfOkay:
  7085                           	opt stack 0
  7086                           pclatu	equ	0xFFB
  7087                           pclath	equ	0xFFA
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           postinc0	equ	0xFEE
  7096                           fsr0h	equ	0xFEA
  7097                           fsr0l	equ	0xFE9
  7098                           wreg	equ	0xFE8
  7099                           indf1	equ	0xFE7
  7100                           fsr1h	equ	0xFE2
  7101                           fsr1l	equ	0xFE1
  7102                           bsr	equ	0xFE0
  7103                           indf2	equ	0xFDF
  7104                           postinc2	equ	0xFDE
  7105                           postdec2	equ	0xFDD
  7106                           fsr2h	equ	0xFDA
  7107                           fsr2l	equ	0xFD9
  7108                           status	equ	0xFD8
  7109                           
  7110 ;; *************** function _in_low_int *****************
  7111 ;; Defined at:
  7112 ;;		line 30 in file "../src/interrupts.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  2    2[BANK0 ] int 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;Total ram usage:        2 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    1
  7133 ;; This function calls:
  7134 ;;		_in_high_int
  7135 ;; This function is called by:
  7136 ;;		_SleepIfOkay
  7137 ;;		_in_main
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text43
  7142  00141E                     __ptext43:
  7143                           	opt stack 0
  7144  00141E                     _in_low_int:
  7145                           	opt stack 18
  7146                           
  7147                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7148                           
  7149                           ;incstack = 0
  7150  00141E  ACF2               	btfss	intcon,6,c	;volatile
  7151  001420  D007               	goto	i2l2766
  7152                           
  7153                           ;interrupts.c: 32: return (0);
  7154  001422  0E00               	movlw	0
  7155  001424  0100               	movlb	0	; () banked
  7156  001426  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  7157  001428  0E00               	movlw	0
  7158  00142A  0100               	movlb	0	; () banked
  7159  00142C  6F98               	movwf	?_in_low_int& (0+255),b
  7160  00142E  0012               	return	
  7161  001430                     i2l2766:
  7162  001430  ECB5  F00B         	call	_in_high_int	;wreg free
  7163  001434  0100               	movlb	0	; () banked
  7164  001436  5197               	movf	(?_in_high_int+1)& (0+255),w,b
  7165  001438  0100               	movlb	0	; () banked
  7166  00143A  1196               	iorwf	?_in_high_int& (0+255),w,b
  7167  00143C  B4D8               	btfsc	status,2,c
  7168  00143E  D007               	goto	i2l2774
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;interrupts.c: 34: return (0);
  7172  001440  0E00               	movlw	0
  7173  001442  0100               	movlb	0	; () banked
  7174  001444  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  7175  001446  0E00               	movlw	0
  7176  001448  0100               	movlb	0	; () banked
  7177  00144A  6F98               	movwf	?_in_low_int& (0+255),b
  7178  00144C  0012               	return	
  7179  00144E                     i2l2774:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;interrupts.c: 36: return (1);
  7183  00144E  0E00               	movlw	0
  7184  001450  0100               	movlb	0	; () banked
  7185  001452  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  7186  001454  0E01               	movlw	1
  7187  001456  0100               	movlb	0	; () banked
  7188  001458  6F98               	movwf	?_in_low_int& (0+255),b
  7189  00145A  0012               	return	
  7190  00145C                     __end_of_in_low_int:
  7191                           	opt stack 0
  7192                           pclatu	equ	0xFFB
  7193                           pclath	equ	0xFFA
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           postinc0	equ	0xFEE
  7202                           fsr0h	equ	0xFEA
  7203                           fsr0l	equ	0xFE9
  7204                           wreg	equ	0xFE8
  7205                           indf1	equ	0xFE7
  7206                           fsr1h	equ	0xFE2
  7207                           fsr1l	equ	0xFE1
  7208                           bsr	equ	0xFE0
  7209                           indf2	equ	0xFDF
  7210                           postinc2	equ	0xFDE
  7211                           postdec2	equ	0xFDD
  7212                           fsr2h	equ	0xFDA
  7213                           fsr2l	equ	0xFD9
  7214                           status	equ	0xFD8
  7215                           
  7216 ;; *************** function _in_high_int *****************
  7217 ;; Defined at:
  7218 ;;		line 22 in file "../src/interrupts.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  2    0[BANK0 ] int 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;Total ram usage:        2 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_in_low_int
  7242 ;;		_SleepIfOkay
  7243 ;;		_in_main
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text44
  7248  00176A                     __ptext44:
  7249                           	opt stack 0
  7250  00176A                     _in_high_int:
  7251                           	opt stack 18
  7252                           
  7253                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;incstack = 0
  7257  00176A  0E00               	movlw	0
  7258  00176C  AEF2               	btfss	intcon,7,c	;volatile
  7259  00176E  0E01               	movlw	1
  7260  001770  0100               	movlb	0	; () banked
  7261  001772  6F96               	movwf	?_in_high_int& (0+255),b
  7262  001774  0100               	movlb	0	; () banked
  7263  001776  6B97               	clrf	(?_in_high_int+1)& (0+255),b
  7264  001778  0012               	return	
  7265  00177A                     __end_of_in_high_int:
  7266                           	opt stack 0
  7267                           pclatu	equ	0xFFB
  7268                           pclath	equ	0xFFA
  7269                           tblptru	equ	0xFF8
  7270                           tblptrh	equ	0xFF7
  7271                           tblptrl	equ	0xFF6
  7272                           tablat	equ	0xFF5
  7273                           prodh	equ	0xFF4
  7274                           prodl	equ	0xFF3
  7275                           intcon	equ	0xFF2
  7276                           postinc0	equ	0xFEE
  7277                           fsr0h	equ	0xFEA
  7278                           fsr0l	equ	0xFE9
  7279                           wreg	equ	0xFE8
  7280                           indf1	equ	0xFE7
  7281                           fsr1h	equ	0xFE2
  7282                           fsr1l	equ	0xFE1
  7283                           bsr	equ	0xFE0
  7284                           indf2	equ	0xFDF
  7285                           postinc2	equ	0xFDE
  7286                           postdec2	equ	0xFDD
  7287                           fsr2h	equ	0xFDA
  7288                           fsr2l	equ	0xFD9
  7289                           status	equ	0xFD8
  7290                           
  7291 ;; *************** function _enter_sleep_mode *****************
  7292 ;; Defined at:
  7293 ;;		line 202 in file "../src/messages.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;		None
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;		None               void
  7300 ;; Registers used:
  7301 ;;		None
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;Total ram usage:        0 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_SleepIfOkay
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text45
  7321  001782                     __ptext45:
  7322                           	opt stack 0
  7323  001782                     _enter_sleep_mode:
  7324                           	opt stack 19
  7325                           
  7326                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;incstack = 0
  7330  001782  8ED3               	bsf	4051,7,c	;volatile
  7331  001784  0003               	sleep		;# 
  7332  001786  0012               	return	
  7333  001788                     __end_of_enter_sleep_mode:
  7334                           	opt stack 0
  7335                           pclatu	equ	0xFFB
  7336                           pclath	equ	0xFFA
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           postinc0	equ	0xFEE
  7345                           fsr0h	equ	0xFEA
  7346                           fsr0l	equ	0xFE9
  7347                           wreg	equ	0xFE8
  7348                           indf1	equ	0xFE7
  7349                           fsr1h	equ	0xFE2
  7350                           fsr1l	equ	0xFE1
  7351                           bsr	equ	0xFE0
  7352                           indf2	equ	0xFDF
  7353                           postinc2	equ	0xFDE
  7354                           postdec2	equ	0xFDD
  7355                           fsr2h	equ	0xFDA
  7356                           fsr2l	equ	0xFD9
  7357                           status	equ	0xFD8
  7358                           
  7359 ;; *************** function _check_msg *****************
  7360 ;; Defined at:
  7361 ;;		line 220 in file "../src/messages.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  7364 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      unsigned char 
  7369 ;; Registers used:
  7370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;Total ram usage:        3 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_SleepIfOkay
  7386 ;;		_block_on_To_msgqueues
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text46
  7391  00156C                     __ptext46:
  7392                           	opt stack 0
  7393  00156C                     _check_msg:
  7394                           	opt stack 19
  7395                           
  7396                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  7397                           
  7398                           ;incstack = 0
  7399  00156C  0100               	movlb	0	; () banked
  7400  00156E  EE20 F035          	lfsr	2,53
  7401  001572  0100               	movlb	0	; () banked
  7402  001574  5196               	movf	check_msg@qptr& (0+255),w,b
  7403  001576  26D9               	addwf	fsr2l,f,c
  7404  001578  0100               	movlb	0	; () banked
  7405  00157A  5197               	movf	(check_msg@qptr+1)& (0+255),w,b
  7406  00157C  22DA               	addwfc	fsr2h,f,c
  7407  00157E  50DF               	movf	indf2,w,c
  7408  001580  0100               	movlb	0	; () banked
  7409  001582  6F98               	movwf	??_check_msg& (0+255),b
  7410  001584  0100               	movlb	0	; () banked
  7411  001586  5198               	movf	??_check_msg& (0+255),w,b
  7412  001588  0D0D               	mullw	13
  7413  00158A  50F3               	movf	prodl,w,c
  7414  00158C  0100               	movlb	0	; () banked
  7415  00158E  2596               	addwf	check_msg@qptr& (0+255),w,b
  7416  001590  6ED9               	movwf	fsr2l,c
  7417  001592  50F4               	movf	prodh,w,c
  7418  001594  0100               	movlb	0	; () banked
  7419  001596  2197               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  7420  001598  6EDA               	movwf	fsr2h,c
  7421  00159A  50DF               	movf	indf2,w,c
  7422  00159C  0012               	return	
  7423  00159E                     __end_of_check_msg:
  7424                           	opt stack 0
  7425  0000                     pclatu	equ	0xFFB
  7426                           pclath	equ	0xFFA
  7427                           tblptru	equ	0xFF8
  7428                           tblptrh	equ	0xFF7
  7429                           tblptrl	equ	0xFF6
  7430                           tablat	equ	0xFF5
  7431                           prodh	equ	0xFF4
  7432                           prodl	equ	0xFF3
  7433                           intcon	equ	0xFF2
  7434                           postinc0	equ	0xFEE
  7435                           fsr0h	equ	0xFEA
  7436                           fsr0l	equ	0xFE9
  7437                           wreg	equ	0xFE8
  7438                           indf1	equ	0xFE7
  7439                           fsr1h	equ	0xFE2
  7440                           fsr1l	equ	0xFE1
  7441                           bsr	equ	0xFE0
  7442                           indf2	equ	0xFDF
  7443                           postinc2	equ	0xFDE
  7444                           postdec2	equ	0xFDD
  7445                           fsr2h	equ	0xFDA
  7446                           fsr2l	equ	0xFD9
  7447                           status	equ	0xFD8
  7448                           pclatu	equ	0xFFB
  7449                           pclath	equ	0xFFA
  7450                           tblptru	equ	0xFF8
  7451                           tblptrh	equ	0xFF7
  7452                           tblptrl	equ	0xFF6
  7453                           tablat	equ	0xFF5
  7454                           prodh	equ	0xFF4
  7455                           prodl	equ	0xFF3
  7456                           intcon	equ	0xFF2
  7457                           postinc0	equ	0xFEE
  7458                           fsr0h	equ	0xFEA
  7459                           fsr0l	equ	0xFE9
  7460                           wreg	equ	0xFE8
  7461                           indf1	equ	0xFE7
  7462                           fsr1h	equ	0xFE2
  7463                           fsr1l	equ	0xFE1
  7464                           bsr	equ	0xFE0
  7465                           indf2	equ	0xFDF
  7466                           postinc2	equ	0xFDE
  7467                           postdec2	equ	0xFDD
  7468                           fsr2h	equ	0xFDA
  7469                           fsr2l	equ	0xFD9
  7470                           status	equ	0xFD8
  7471                           
  7472                           	psect	param0
  7473  0000                     pclatu	equ	0xFFB
  7474                           pclath	equ	0xFFA
  7475                           tblptru	equ	0xFF8
  7476                           tblptrh	equ	0xFF7
  7477                           tblptrl	equ	0xFF6
  7478                           tablat	equ	0xFF5
  7479                           prodh	equ	0xFF4
  7480                           prodl	equ	0xFF3
  7481                           intcon	equ	0xFF2
  7482                           postinc0	equ	0xFEE
  7483                           fsr0h	equ	0xFEA
  7484                           fsr0l	equ	0xFE9
  7485                           wreg	equ	0xFE8
  7486                           indf1	equ	0xFE7
  7487                           fsr1h	equ	0xFE2
  7488                           fsr1l	equ	0xFE1
  7489                           bsr	equ	0xFE0
  7490                           indf2	equ	0xFDF
  7491                           postinc2	equ	0xFDE
  7492                           postdec2	equ	0xFDD
  7493                           fsr2h	equ	0xFDA
  7494                           fsr2l	equ	0xFD9
  7495                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         219
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      50
    BANK0           160     54     110
    BANK1           256     84     246
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_start_i2c_slave_reply
    _timer1_lthread->___lwmod
    _send_msg->_memcpy
    _init_queues->_init_queue
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   10728
                                             31 BANK1     53    53      0
                         _Open2USART
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _Write2USART
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     384
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2710
                                             22 BANK1      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             50 BANK0      4     0      4
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             18 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                              6 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                             50 BANK0      2     2      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     158
                                             50 BANK0      4     2      2
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                             50 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write2USART                                          1     1      0      31
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             20 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             20 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                              6 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             50 BANK0      4     4      0
                                              0 BANK1      6     0      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             50 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open2USART                                           6     4      2     375
                                             50 BANK0      3     1      2
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2180
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    1042
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    1138
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    1019
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     635
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     198
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5737
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3193
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1252
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2222
                                             26 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1611
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     998
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     384
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     322
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (12) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (13) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _check_msg                                           3     1      2     322
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open2USART
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _Write2USART
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     54      F6       8       96.1%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      6E       5       68.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      32       1       52.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     196       6        0.0%
DATA                 0      0     196       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Feb 23 21:33:20 2015

              main@uthread_data 01CC        _MQ_Main_Willing_to_block 002E                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 14CE                              bsr 000FE0       __end_of_ToMainLow_sendmsg 16C0  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 00A3               i2recv_msg@tlength 00AA  
                           l104 072C                             l413 148E                             l414 1490  
                           l470 1060                             l472 106C                             l473 106E  
                           l465 1042                             l385 1696                             l386 1698  
                           l467 104E            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0136                             wreg 000FE8                    __CFG_IESO$ON 000000  
                    _TXSTA2bits 000FA8                    ?_in_high_int 0096                ??_init_uart_recv 002E  
               ReadTimer1@timer 0003             i2recv_msg@maxlength 00A2                            l1017 121A  
                          l3130 1032                            l3150 1062                            l3142 1050  
                          l3138 1044                            l3180 0B4C                            l3166 170A  
                          l3270 0750                            l3254 06AA                            l3176 0AD0  
                          l3264 06EA                            l3280 078E                            l3290 081E  
                          l3266 0732                            l3274 075E                            l3282 07AA  
                          l2804 08D8                            l2820 0992                            l3268 0746  
                          l3276 0774                            l2662 1322                            l3294 0860  
                          l2656 1302                            l3288 07DC                            l2690 0C06  
                          l2860 11D6                            l2862 11E2                            l2864 11E8  
                          l2786 119C                            l2868 120C                            _LATB 000F8A  
                          u2497 06B2                            i1l47 0070                 _FromMainHigh_MQ 0100  
                Read1USART@data 0001                            _main 0626                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9          __CFG_DSWDTOSC$T1OSCREF 000000                     main@msgtype 01D8  
                    i1_send_msg 0E5A                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 0096                            start 00B6  
                    i2_recv_msg 0996                      i2_send_msg 0CA4       ToMainHigh_recvmsg@msgtype 01B6  
                send_msg@length 01AA     __size_of_timer0_int_handler 006E                   __CFG_PLLDIV$3 000000  
                         ?_main 0001                           _T0CON 000FD5                           _T1CON 000FCD  
                         i1l441 16EC                 __end_of___lwmod 1224                      i1memcpy@d1 0001  
                         i2l253 0E0E                           i2l263 0476                           i2l265 013A  
                         i2l291 0406                           i2l283 02E4                           i2l269 016C  
                         i2l297 0484                      i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 00AE  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _TRISB 000F93                      i2memcpy@d1 0096  
                __CFG_FCMEN$OFF 000000                      i2memcpy@s1 0098                    ?_init_queues 0001  
     __size_of_enter_sleep_mode 0006      ToMainLow_recvmsg@maxlength 01BA                      _Read1USART 16DE  
       timer0_lthread@msgbuffer 01A8                  __CFG_T1DIG$OFF 000000         i2c_configure_slave@addr 00C8  
                         tablat 000FF5                           status 000FD8                __end_ofi1_memcpy 141E  
              __end_ofi2_memcpy 13DE                 __initialization 1626                    __end_of_main 0878  
                    _ReadTimer1 1746     __size_of_timer1_int_handler 002C      __size_of_ToMainLow_recvmsg 0036  
    __size_of_ToMainLow_sendmsg 0024   __size_of_FromMainHigh_recvmsg 0036                  __CFG_OSC$HSPLL 000000  
 __size_of_FromMainHigh_sendmsg 002E                      _Open2USART 1016                          ??_main 002E  
               send_msg@msgtype 01AB                   __activetblptr 000002                 send_msg@tlength 01AF  
          __end_of_handle_start 0E5A         ??_uart_recv_int_handler 001B                          _T1GCON 000F9A  
                        i1l2354 0F7C                          i1l2540 0066                          i1l1944 0E92  
                        i2l3002 0488                          i1l1892 140C                          i1l1886 13F0  
                        i2l3024 05FE                          i2l3016 056C                          i2l3008 04E6  
                        i2l3042 1288                          i2l3212 0FCE                      _OpenTimer0 1676  
                        i2l3218 0FD8                      _OpenTimer1 145C                  __CFG_WDTEN$OFF 000000  
                        i2l2714 0CF2                          i2l2902 0124                          i2l2672 13C8  
                        i2l2666 13A8                          i2l2850 0E2A                          i2l2738 09F6  
                        i2l2754 0AB0                          i2l2852 0E42                          i2l2908 0132  
                        i2l2774 144E                          i2l2766 1430                          i2l2926 0198  
                        i2l2944 0216                          i2l2928 01C4                          i2l2970 0394  
                        i2l2946 0256                          i2l2938 01FE                          i2l2974 039C  
                        i2l2968 0352                          i2l2996 044A                          _RCREG1 000FAF  
   __end_of_i2c_configure_slave 1676                   ??_SleepIfOkay 002E                          _RCSTA2 000F9C  
                        _OSCCON 000FD3                          _SPBRG2 000FAB                          _SSPADD 000FC8  
                __CFG_WPCFG$OFF 000000                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 0104  
                        _TXREG2 000FA9                     ?i1_send_msg 000B                          _TXSTA2 000FA8  
 __end_of_start_i2c_slave_reply 0BB8              timer0_lthread@tptr 01A2                  __CFG_WPDIS$OFF 000000  
                   ?i2_recv_msg 00A0                     ?i2_send_msg 00A0                  __CFG_XINST$OFF 000000  
               _i2c_int_handler 00BA                OpenTimer0@config 00C8                          _ic_ptr 00CC  
                     ??___lwmod 002E                   main@msgbuffer 01C1                __end_of_init_i2c 1160  
              OpenTimer1@config 00CA                          _memcpy 12E0                          clear_0 162C  
                        clear_1 1638                          _uc_ptr 0031                          main@ic 01DA  
                        main@uc 01D1                __end_of_recv_msg 0996     start_i2c_slave_reply@length 01A2  
              __end_of_send_msg 0CA4           timer0_int_handler@val 00B7         i2c_int_handler@i2c_data 00B6  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 00CA        ToMainLow_recvmsg@msgtype 01B6            __size_of_in_high_int 0010  
                   ?_Read1USART 0001                      __accesstop 0060         __end_of__initialization 1644  
    __end_of_ToMainHigh_recvmsg 1504      __end_of_ToMainHigh_sendmsg 15FA                 __CFG_IOL1WAY$ON 000000  
          __CFG_WPEND$PAGE_WPFP 000000     __end_of_init_timer1_lthread 1734             __end_of_SleepIfOkay 12E0  
                __pcstackCOMRAM 0001                     ?_ReadTimer1 0001              __size_of_check_msg 0032  
               __CFG_DSWDTPS$G2 000000                     ?_Open2USART 00C8       timer0_int_handler@msgtype 00B5  
           __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 100E  
   __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 0096                   _ToMainHigh_MQ 016C  
           __size_ofi2_recv_msg 011E                _enter_sleep_mode 1782             __size_ofi2_send_msg 00EC  
          timer1_lthread@length 01BC                   check_msg@qptr 0096            timer1_lthread@retval 01C0  
          __size_of_init_queues 0056                      __pbssBANK0 0060                      __pbssBANK1 0100  
                   ?_OpenTimer0 0001                     ?_OpenTimer1 00C8                   ??_Write2USART 002E  
                    __pnvCOMRAM 0031         __end_of_i2c_int_handler 0626              timer1_lthread@tptr 01B8  
             recv_msg@maxlength 01AA                 recv_msg@msgtype 01AB                 recv_msg@tlength 01B2  
         __size_of_handle_start 00CA                WriteTimer0@timer 0098                         ?_memcpy 01A2  
              WriteTimer1@timer 0003                   ??_WriteTimer0 002E                   ??_WriteTimer1 0003  
           __size_of_Read1USART 001E         __size_of_timer0_lthread 0012         __size_of_timer1_lthread 005E  
                    ??i1_memcpy 0007                      ??i2_memcpy 002E                         _SPBRGH2 000F7D  
              i1send_msg@length 000D                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7             __size_of_ReadTimer1 0012               __end_of_check_msg 159E  
                     ?_init_i2c 00C8                     _SleepIfOkay 1282             __size_of_Open2USART 0076  
                     ?_recv_msg 01A8                      _in_low_int 141E                    _handle_start 0D90  
                       __Hparam 0000                       ?_send_msg 01A8                         __Lparam 0000  
    __end_of_timer0_int_handler 10FA             __end_of_Write2USART 1710                init_uart_recv@uc 00C8  
                       ___lwmod 11C4                 __CFG_STVREN$OFF 000000                         __pcinit 1626  
               __size_of_memcpy 0058                      _init_queue 1160                         __ramtop 0F00  
           __size_of_OpenTimer0 0026             __size_of_OpenTimer1 003C                         __ptext0 0626  
                       __ptext1 153A                         __ptext2 1224                         __ptext3 11C4  
                       __ptext4 159E                         __ptext5 0BB8                         __ptext6 1710  
                       __ptext7 0AB4                         __ptext8 16C0                         __ptext9 1722  
                     _T0CONbits 000FD5               OpenTimer1@config1 00C8                       _T1CONbits 000FCD  
              Open2USART@config 00CA             __end_of_WriteTimer0 176A             __end_of_WriteTimer1 1746  
                __pintcode_body 0F98    __end_of_FromMainHigh_recvmsg 153A            end_of_initialization 1644  
       timer1_lthread@msgbuffer 01BE    __end_of_FromMainHigh_sendmsg 15CC  __size_of_uart_recv_int_handler 0094  
    FromMainHigh_sendmsg@length 01B7                         memcpy@d 00C8                         memcpy@n 01A6  
                       memcpy@s 00CA   __end_of_uart_recv_int_handler 0F98                      ??_init_i2c 002E  
   i2c_int_handler@data_written 00B4                   __Lmediumconst 0000                         int_func 0F98  
                  ??i1_send_msg 0011                   ?_uart_lthread 01A2         __size_of_init_uart_recv 001E  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 00A7                      ??_recv_msg 01AF  
                  ??i2_send_msg 00A6                      ??_send_msg 01AE      __end_of_timer1_int_handler 1626  
                     _RCSTAbits 000FAC                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE       ToMainHigh_sendmsg@msgtype 00AC                       _PORTBbits 000F81  
              __CFG_DSBOREN$OFF 000000                __CFG_CPUDIV$OSC1 000000              __end_ofi1_send_msg 0F04  
   FromMainHigh_sendmsg@msgtype 01B4                       _TRISBbits 000F93              __end_ofi2_recv_msg 0AB4  
            __end_ofi2_send_msg 0D90                    ??_Read1USART 0001   FromMainHigh_recvmsg@maxlength 00B2  
      timer1_int_handler@result 001B                  ??_uart_lthread 002E                     _Write2USART 16FC  
             __CFG_WPFP$PAGE_63 000000                      main@length 01D9                     ?_in_low_int 0098  
         timer0_lthread@msgtype 01A4           _start_i2c_slave_reply 0AB4             __CFG_MSSP7B_EN$MSK7 000000  
  __size_of_i2c_configure_slave 0028        __end_of_enter_sleep_mode 1788                    ??_ReadTimer1 0003  
            _ToMainHigh_recvmsg 14CE                       i1memcpy@d 0007              _ToMainHigh_sendmsg 15CC  
                     i1memcpy@n 0005                       i1memcpy@s 0009                  _timer0_lthread 1710  
                  ??_Open2USART 01A2                     ?_init_queue 00C8                       i2memcpy@d 009C  
                   _WriteTimer0 1758                     _WriteTimer1 1734                       i2memcpy@n 009A  
                     i2memcpy@s 009E              __end_of_Read1USART 16FC                  _timer1_lthread 1224  
                __end_of_memcpy 1338               _enable_interrupts 177A                __CFG_DSWDTEN$OFF 000000  
           ?_ToMainHigh_recvmsg 01B6        i2c_int_handler@data_read 00B9             ?_ToMainHigh_sendmsg 00AC  
            ?_enable_interrupts 0001             start_initialization 1626                   ??_in_high_int 002E  
             __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0050             ??_enable_interrupts 002E  
                  ??_OpenTimer0 002E                    ??_OpenTimer1 00C9              __end_of_ReadTimer1 1758  
  __end_of_InterruptHandlerHigh 1016                      init_i2c@ic 00C8              __end_of_Open2USART 108C  
          ??_ToMainHigh_recvmsg 002E            ??_ToMainHigh_sendmsg 002E          __end_of_timer0_lthread 1722  
      i2c_int_handler@error_buf 00B1          __end_of_timer1_lthread 1282                __CFG_LPT1OSC$OFF 000000  
     __end_of_enable_interrupts 1782                        ??_memcpy 002E           timer1_lthread@msgtype 01BA  
          _FromMainHigh_recvmsg 1504            _FromMainHigh_sendmsg 159E    __size_of_init_timer1_lthread 0012  
            __end_of_OpenTimer0 169C              __end_of_OpenTimer1 1498        i2c_int_handler@msg_ready 00B8  
                   __pbssCOMRAM 002E                   ??_init_queues 002E                   __pcstackBANK0 0096  
                 __pcstackBANK1 01A2             __size_of_in_low_int 003E        start_i2c_slave_reply@msg 00C8  
      ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 177A  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01B8                    _ToMainLow_MQ 0060  
           __size_of_init_queue 0064                  _init_uart_recv 16C0                       _check_msg 156C  
                     __pnvBANK0 00CC          ?_start_i2c_slave_reply 00C8               __size_of_init_i2c 0066  
                  recv_msg@data 01AD                    recv_msg@qmsg 01B4                    recv_msg@slot 01B1  
                  recv_msg@qptr 01A8               __size_of_recv_msg 011E                       __pintcode 0008  
             __size_of_send_msg 00EC                 ?_timer0_lthread 01A2                        ?___lwmod 00C8  
         ?_FromMainHigh_recvmsg 00AE                 ?_timer1_lthread 01B8           ?_FromMainHigh_sendmsg 01B4  
                   __pintcodelo 0018          ToMainHigh_recvmsg@data 01B8            __end_of_uart_lthread 156C  
    i2c_int_handler@msg_to_send 00B7               WriteTimer0@timer0 0096              _timer0_int_handler 108C  
             WriteTimer1@timer1 0001            __CFG_RTCOSC$T1OSCREF 000000             uart_lthread@msgtype 01A4  
         ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001                uart_lthread@uptr 01A2  
        __end_of_init_uart_recv 16DE             __end_of_init_queues 138E                 Open2USART@spbrg 00C8  
                    ?_check_msg 0096                 Write2USART@data 00C8                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                        _PIE3bits 000FA3                        _PIR1bits 000F9E  
        ToMainHigh_sendmsg@data 00AD                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
          ??_timer0_int_handler 002E      __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E  
             i1send_msg@tlength 0012            timer0_lthread@length 01A6              _timer1_int_handler 15FA  
                      i1_memcpy 13DE            _InterruptHandlerHigh 0008                        i2_memcpy 138E  
          timer0_lthread@msgval 00C8        FromMainHigh_recvmsg@data 00B0                     _in_high_int 176A  
                  send_msg@data 01AC             _i2c_configure_slave 164E                    send_msg@qmsg 01B2  
                  send_msg@slot 01B1                    send_msg@qptr 01A8           uart_lthread@msgbuffer 01A8  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 00C8                    ?_Write2USART 0001  
                      __Hparam0 0000           _uart_recv_int_handler 0F04                    ??_in_low_int 002E  
                      __Lparam0 0000            ?_i2c_configure_slave 0001               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_recvmsg 002E          ??_FromMainHigh_sendmsg 002E            ??_timer1_int_handler 001B  
      __size_of_i2c_int_handler 056C              ??_enter_sleep_mode 002E                __size_of___lwmod 0060  
                  ??_init_queue 002E                    ?_WriteTimer0 0096                    ?_WriteTimer1 0001  
      FromMainHigh_sendmsg@data 01B5         ToMainLow_sendmsg@length 001A               main@t0thread_data 01CE  
         ?_InterruptHandlerHigh 0001               i2send_msg@msgtype 00A3     ToMainHigh_recvmsg@maxlength 01BA  
             i2send_msg@tlength 00A7         init_timer1_lthread@tptr 00C8                     _init_queues 1338  
            __end_of_in_low_int 145C                        __ptext10 1338                        __ptext11 1160  
                      __ptext20 145C                        __ptext12 10FA                        __ptext21 1676  
                      __ptext13 164E                      _T1GCONbits 000F9A                        __ptext30 13DE  
                      __ptext22 1016                        __ptext14 177A                        __ptext31 1746  
                      __ptext15 16FC                        __ptext40 0CA4                        __ptext24 0F04  
                      __ptext16 1498                        __ptext41 138E                        __ptext33 108C  
                      __ptext25 16DE                        __ptext17 14CE                        __ptext42 1282  
                      __ptext34 1758                        __ptext26 15FA                        __ptext18 0878  
                      __ptext43 141E                        __ptext35 1504                        __ptext27 1734  
                      __ptext19 12E0                        __ptext44 176A                        __ptext36 0996  
                      __ptext28 169C                        __ptext45 1782                        __ptext37 00BA  
                      __ptext29 0E5A                        __ptext46 156C                        __ptext38 0D90  
                      __ptext39 15CC                  i1send_msg@data 000F                  i1send_msg@qmsg 0015  
                i1send_msg@slot 0014                  i1send_msg@qptr 000B              uart_lthread@length 01A6  
      timer0_int_handler@length 00B3                        _init_i2c 10FA             _init_timer1_lthread 1722  
                 __size_of_main 0252               main@t1thread_data 01D6                     ??_check_msg 0098  
            __end_of_init_queue 11C4            __size_of_SleepIfOkay 005E                        _recv_msg 0878  
         ??_i2c_configure_slave 002E                        _send_msg 0BB8                  init_queue@qptr 00C8  
         __size_of_uart_lthread 0032                  i2recv_msg@data 00A5                  i2recv_msg@qmsg 00AC  
                i2recv_msg@slot 00A9                  i2recv_msg@qptr 00A0             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00C8                   _USART1_Status 002F                   _USART2_Status 0030  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                        memcpy@d1 01A2  
                      memcpy@s1 01A4    i2c_int_handler@overrun_error 00B5                i2send_msg@length 00A2  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
       ??_start_i2c_slave_reply 00CA                ___lwmod@dividend 00C8          ?_uart_recv_int_handler 0001  
                  _uart_lthread 153A                      _RCSTA1bits 000FAC                      _RCSTA2bits 000F9C  
                 ?_handle_start 0001                ??_timer0_lthread 002E     __size_of_ToMainHigh_recvmsg 0036  
   __size_of_ToMainHigh_sendmsg 002E                      _OSCCONbits 000FD3                ??_timer1_lthread 002E  
      ToMainHigh_sendmsg@length 00AF           ??_init_timer1_lthread 002E          ??_InterruptHandlerHigh 00BA  
             _ToMainLow_recvmsg 1498               _ToMainLow_sendmsg 169C              main@last_reg_recvd 01D0  
               ___lwmod@divisor 00CA              ?_ToMainLow_recvmsg 01B6               ??_i2c_int_handler 00B0  
               ___lwmod@counter 01A2              ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                  i2send_msg@data 00A4           ??_InterruptHandlerLow 001D  
           ??_ToMainLow_recvmsg 002E                  i2send_msg@qmsg 00AA                  i2send_msg@slot 00A9  
                i2send_msg@qptr 00A0             ??_ToMainLow_sendmsg 001A                  ??_handle_start 002E  
          __size_of_Write2USART 0014  
